<?php

/**
 * PsMemberTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PsMemberTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object PsMemberTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'PsMember' );

	}

	/**
	 * Lay thong tin Member, sfGuardUserProfile
	 *
	 * @author Nguyen Chien Thang
	 *        
	 * @param
	 *        	int user_id Login
	 * @return Obj public function getProfile($user_id) {
	 *         $q = $this->createQuery('m')
	 *         ->select('m.ps_customer_id,p.user_id,p.member_id')
	 *         ->innerJoin('m.MemberProfile p')
	 *         ->addWhere('p.user_id = ?', (int)$user_id);
	 *         return $q->fetchOne();
	 *         }
	 */
	
	/**
	 * Lay danh sach Member Scap So/Phong
	 *
	 * @return $list obj member
	 */
	public function doSelectQueryHrDepartments(Doctrine_Query $query) {
		
		$a = $query->getRootAlias ();
		
		$query->select ( $a . '.id AS id, ' . $a . '.image AS image, ' . $a . '.member_code AS member_code, ' . $a . '.first_name AS first_name, ' . $a . '.last_name AS last_name, ' . $a . '.sex AS sex, ' . $a . '.birthday AS birthday, ' . $a . '.mobile AS mobile, ' . $a . '.email AS email, ' . $a . '.year_data AS year_data, ' . $a . '.is_status AS is_status, ' . $a . '.rank AS rank, ' . 'cus.school_code AS school_code,' . $a . '.user_updated_id AS user_updated_id, ' . $a . '.updated_at AS updated_at');
		
		$query->addSelect ( 'CONCAT(u.first_name, " ", u.last_name) AS updated_by, acc.username AS username, , acc.id AS user_id' );
		
		$query->addSelect ( 'acc.username AS username, , acc.id AS user_id' );
		
		$query->leftJoin ( $a . '.sfGuardUser acc With acc.user_type = ?', PreSchool::USER_TYPE_TEACHER );
		
		$query->leftJoin ( $a . '.UserUpdated u');
		
		$query->innerJoin ( $a . '.PsCustomer cus' );
		
		$query->leftJoin (  $a .'.PsDistricts d' );
		
		$query->leftJoin (  $a .'.PsProvinces p' );
		
		$query->addOrderBy ( $a .'.ps_province_id,'.$a .'.ps_district_id' );
		
		return $query;		
	}
	public function setSQLByMember()
	{

		$q = $this->createQuery('mb')->select('mb.id as id, CONCAT(mb.first_name, " ", mb.last_name) AS title');

		//$q->addWhere ( 'id = ?', $member_id );

		$q->addOrderBy('id');

		return $q;
	}
	/**
	 * Lay danh sach Member
	 *
	 * @return $list obj member
	 */
	public function doSelectQuery(Doctrine_Query $query) {

		$a = $query->getRootAlias ();

		$query->select ( $a . '.id AS id, ' . $a . '.image AS image, ' . $a . '.member_code AS member_code, ' . $a . '.first_name AS first_name, ' . $a . '.last_name AS last_name, ' . $a . '.sex AS sex, ' . $a . '.birthday AS birthday, ' . $a . '.mobile AS mobile, ' . $a . '.email AS email, ' . $a . '.year_data AS year_data, ' . $a . '.is_status AS is_status, ' . $a . '.rank AS rank, ' . 'cus.school_code AS school_code,' . $a . '.user_updated_id AS user_updated_id, ' . $a . '.updated_at AS updated_at,' . 'md.id AS md_id,' . 'dpm.id AS dpm_id,' . 'dpm.title AS department,' . 'fc.title AS function' );

		$query->addSelect ( 'CONCAT(u.first_name, " ", u.last_name) AS updated_by, acc.username AS username, , acc.id AS user_id' );

		$query->addSelect ( 'acc.username AS username, , acc.id AS user_id' );

		$query->leftJoin ( $a . '.sfGuardUser acc With acc.user_type = ?', PreSchool::USER_TYPE_TEACHER );

		$query->leftJoin ( $a . '.UserUpdated u With u.user_type = ?', PreSchool::USER_TYPE_TEACHER );

		$query->innerJoin ( $a . '.PsCustomer cus' );

		$query->leftJoin ( 'cus.PsWard pw' );

		$query->leftJoin ( 'pw.PsDistrict d' );

		$query->leftJoin ( 'd.PsProvince p' );

		$query->leftJoin ( $a . '.PsMemberDepartments md WITH (md.is_current=? )', PreSchool::ACTIVE );

		$query->leftJoin ( 'md.PsDepartment dpm' );

		$query->leftJoin ( 'md.PsFunction fc' );

		if (! myUser::credentialPsCustomers ( 'PS_HR_HR_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0) {
			$query->where ( $a . '.ps_customer_id = ?', myUser::getPscustomerID () );
		}
		
		return $query;

	}

	public function getTeachersBirthday($customer_id, $workplace_id, $class_id, $track_at = null) {

		$track_at = $track_at ? date ( 'Ymd', strtotime ( $track_at ) ) : date ( 'Ymd' );

		$birthday = date ( 'm', strtotime ( $track_at ) );

		$q = $this->createQuery ( 'm' );

		$q->select ( 'm.id AS id, m.member_code AS member_code, m.first_name AS first_name, m.last_name AS last_name, m.sex AS sex, m.image AS image, m.year_data AS year_data, cus.school_code AS school_code' );

		$q->innerJoin ( 'm.PsCustomer cus WITH cus.id =?', $customer_id );

		$q->innerJoin ( 'm.PsTeacherClass tc' );

		$q->andWhere ( 'm.is_status = ?', PreSchool::HR_STATUS_WORKING );

		if (is_array ( $class_id )) {
			$q->andWhereIn ( 'tc.ps_myclass_id', $class_id );
		} else if ($class_id > 0) {
			$q->andWhere ( 'tc.ps_myclass_id = ?', $class_id );
		}
		$q->andWhere ( 'DATE_FORMAT(m.birthday, "%m") =?', $birthday );

		$q->andWhere ( '(DATE_FORMAT(tc.start_at, "%Y%m%d") <=? AND (tc.stop_at IS NULL OR DATE_FORMAT(tc.stop_at, "%Y%m%d") >=?))', array (
				date ( 'Ymd' ),
				date ( 'Ymd' )
		) );
		$q->leftJoin ( 'tc.MyClass mc' );

		$q->innerJoin ( 'mc.PsClassRooms cr WITH cr.ps_workplace_id =?', $workplace_id );

		$q->addOrderBy ( 'm.birthday,m.last_name ASC, m.first_name' );

		return $q->execute ();

	}

	/**
	 * Tao SQL lay danh sach theo member_id
	 *
	 * @return $list obj
	 *        
	 */
	public function setSQLByMemberId($member_id) {

		$q = $this->createQuery ( 'mb' )->select ( 'mb.id as id, CONCAT(mb.first_name, " ", mb.last_name) AS title' );

		$q->addWhere ( 'id = ?', $member_id );

		$q->addOrderBy ( 'id' );

		return $q;

	}

	/**
	 * Lay danh sach nhan su theo co so hoac phong ban
	 *
	 * @author Phung Van Thanh
	 *        
	 * @param
	 *        	int member_id, ps_department_id
	 * @return $Obj
	 *
	 */
	public function getPsMemberByDepartmentOrWorkplace($ps_customer_id, $ps_workplace_id, $department_id, $year_month, $date_at = null) {

		if ($date_at == '') {
			$date_at = '01-' . $year_month;
		}

		$query = $this->createQuery ( 'm' );

		$query->select ( 'm.id AS mb_id, ' . 'm.member_code as member_code, ' . 'm.ps_customer_id AS ps_customer_id, ' . 'm.user_updated_id AS user_updated_id, ' . 'm.updated_at AS updated_at' );

		$query->addSelect ( 'CONCAT(m.first_name, " ", m.last_name) AS member_name' );

		$query->innerJoin ( 'm.PsCustomer cus' );

		$query->leftJoin ( 'm.PsMemberDepartments dpm' );

		if ($department_id > 0) {

			$query->innerJoin ( 'cus.PsDepartment dp With dpm.ps_department_id = ?', $department_id );

			$query->andWhere ( ' DATE_FORMAT(dpm.start_at,"%Y%m%d") <= ? AND (dpm.stop_at IS NULL OR DATE_FORMAT(dpm.stop_at,"%Y%m") >= ?)', array (
					date ( 'Ymd', strtotime ( $date_at ) ),
					date ( 'Ym', strtotime ( $date_at ) )
			) );
		} elseif ($ps_workplace_id) {

			$query->leftJoin ( 'cus.PsDepartment dp' );

			$query->addWhere ( 'm.ps_workplace_id = ?', $ps_workplace_id );
		} else {

			$query->addWhere ( 'm.ps_customer_id = ?', $ps_customer_id );
		}

		$query->addWhere ( 'm.is_status = ?', PreSchool::HR_STATUS_WORKING );

		return $query->execute ();

	}

	/**
	 * Lay danh sach nhan su theo ma phong ban hoac ma nhan su
	 *
	 * @author Phung Van Thanh
	 *        
	 * @param
	 *        	int member_id, ps_department_id
	 * @return $Obj
	 *
	 */
	public function getPsMemberByDepartmentId($ps_customer_id, $ps_workplace_id, $department_id, $member_id = null, $year_month) {

		$date_at = '01-' . $year_month;

		// echo $date_at; die();
		$query = $this->createQuery ( 'm' );

		$query->select ( 'm.id AS mb_id, ' . 'm.member_code as member_code, ' . 'm.ps_customer_id AS ps_customer_id, ' . 'm.user_updated_id AS user_updated_id, ' . 'm.updated_at AS updated_at' );

		$query->addSelect ( 'CONCAT(m.first_name, " ", m.last_name) AS member_name' );

		$query->innerJoin ( 'm.PsCustomer cus' );

		$query->innerJoin ( 'cus.PsDepartment dp' );

		$query->leftJoin ( 'm.PsMemberDepartments dpm' );

		if ($member_id > 0)
			$query->addWhere ( 'm.id = ?', $member_id );
		if ($department_id > 0)
			$query->addWhere ( 'dpm.ps_department_id = ?', $department_id );
		elseif ($ps_workplace_id)
			$query->addWhere ( 'dp.ps_workplace_id = ?', $ps_workplace_id );
		else
			$query->addWhere ( 'm.ps_customer_id = ?', $ps_customer_id );

		$query->andWhere ( ' DATE_FORMAT(dpm.start_at,"%Y%m%d") <= ?', date ( 'Ymd', strtotime ( $date_at ) ) );

		$query->andWhere ( 'dpm.stop_at IS NULL OR DATE_FORMAT(dpm.stop_at,"%Y%m%d") >= ?', date ( 'Ymd', strtotime ( $date_at ) ) );

		$query->addWhere ( 'm.is_status = ?', 'W' );

		return $query->execute ();

	}

	/**
	 * Lay danh sach nhan su theo ma nhan su
	 *
	 * @author Pham Van Thien (thien95tm@gmail.com)
	 *        
	 * @param
	 *        	int ps_member_id
	 * @return $Obj
	 *
	 */
	public function getPsMemberById($ps_member_id) {

		$query = $this->createQuery ( 'm' );

		$query->select ( 'm.id AS id, ' . 'm.member_code as member_code, ' . 'm.first_name AS first_name, ' . 'm.last_name AS last_name, ' . 'm.image AS image, ' . 'm.sex AS sex, ' . 'm.address AS address, ' . 'm.birthday AS birthday, ' . 'm.mobile AS mobile, ' . 'm.phone AS phone, ' . 'm.email AS email, ' . 'm.nationality as nationality,' . 'm.rank as rank,' . 'cus.school_code AS school_code,' . 'cus.school_name AS school_name,' . 'cus.address AS school_address,' . 'd.name as district_name,' . 'p.name as province_name,' . 'w.name as ward_name,' . 'e.title as ethnic_title,' . 'pr.title as religion_title,' . 'm.ps_customer_id AS ps_customer_id, ' . 'm.user_updated_id AS user_updated_id, ' . 'm.updated_at AS updated_at' );

		$query->addSelect ( 'CONCAT(u.first_name, " ", u.last_name) AS updated_by,acc.username AS username, acc.id AS user_id' );

		$query->leftJoin ( 'm.UserUpdated u' );

		$query->leftJoin ( 'm.sfGuardUser acc With acc.user_type = ?', PreSchool::USER_TYPE_TEACHER );

		$query->innerJoin ( 'm.PsCustomer cus' );

		$query->leftJoin ( 'm.PsEthnic e' );

		$query->leftJoin ( 'm.PsReligion pr' );

		$query->leftJoin ( 'cus.PsWard w' );

		$query->leftJoin ( 'w.PsDistrict d' );

		$query->leftJoin ( 'd.PsProvince p' );

		$query->addWhere ( 'm.id = ?', $ps_member_id );

		return $query->fetchOne ();

	}

	/**
	 * Lay thong tin Member, sfGuardUserProfile
	 *
	 * @author Nguyen Chien Thang
	 *        
	 * @param
	 *        	int user_id Login
	 * @return $Obj
	 */
	public function getPsCustomerIdByMember($member_id) {

		$q = $this->createQuery ( 'm' )->select ( 'm.ps_customer_id' )->where ( 'm.id = ?', ( int ) $member_id );
		return $q->fetchOne ();

	}

	/**
	 * Tao SQL danh sach Member de tao User
	 *
	 * @return $list obj
	 */
	public function setSQLMemberForUser($ps_customer_id = '', $flag_all = true) {

		$q = $this->setSQLMembers ( $ps_customer_id, $flag_all );
		return $q;
	}

	/**
	 * Tao SQL danh sach Member
	 *
	 * @return string SQL
	 */
	public function setSQLMembers($ps_customer_id = '', $flag_all = true) {

		$q = $this->createQuery ( 'm' )->select ( 'm.id AS id, m.image AS image, CONCAT(m.first_name," ",m.last_name) AS title' );

		if (! $flag_all) { // Chi lay nhung member chua duoc tao user
			$q->where ( "m.id NOT IN (SELECT u.member_id FROM sfGuardUser u WHERE user_type = ?)", PreSchool::USER_TYPE_TEACHER );
		}

		if ($ps_customer_id > 0)
			$q->andWhere ( 'm.ps_customer_id = ?', $ps_customer_id )->addOrderBy ( 'm.id' );
		else
			$q->addOrderBy ( 'm.ps_customer_id,m.id' );

		return $q;

	}

	// Lay danh sach Member tao boi psCustomer
	public function getGroupMembers() {

		// Lay danh sach psCustomer
		$sqlPsCustomer = Doctrine::getTable ( 'PsCustomer' )->getCustomers ();

		$choices = array ();

		foreach ( $sqlPsCustomer as $psCustomer ) {
			$sql = $this->setSQLMembers ( $psCustomer->getId () );
			$choices [$psCustomer->getId ()] = $sql->execute ();
		}
		return $choices;

	}

	/**
	 * Tao SQL danh sach GV
	 *
	 * @return string SQL
	 */
	public function loadMembers($ps_customer_id = '', $flag_all = true) {

		$q = $this->createQuery ( 'm' )->select ( 'm.id AS id, m.image AS image, CONCAT(m.first_name," ",m.last_name) AS title' );

		if (! $flag_all) { // Chi lay nhung member chua duoc phan lop
			$q->where ( "m.id NOT IN (SELECT mc.member_id FROM PsMemberClass mc)" );
		}

		if ($ps_customer_id > 0)
			$q->addWhere ( 'm.ps_customer_id = ?', $ps_customer_id )->addOrderBy ( 'm.id' );
		else
			$q->addOrderBy ( 'm.ps_customer_id,m.id' );

		return $q;

	}

	// Ham kiem tra trung lap CMND
	public function checkIdentityCardExits($identity_card, $objid = null) {

		$query = $this->createQuery ()->select ( 'id' );

		if ($identity_card != '')
			$query->where ( 'identity_card = ?', $identity_card );

		if ($objid > 0)
			$query->andwhere ( 'id <> ?', $objid );

		$records = $query->execute ();

		return count ( $records ) ? true : false;

	}

	/**
	 * lay danh sach giao vien co tai khoan theo lop
	 * Phung Van Thanh
	 * 16/10/2018
	 */
	public function getTeachersInClass($ps_class_id) {

		$date_at = date ( 'Ymd' );
		$q = $this->createQuery ( 'm' );
		$q->select ( 'm.id AS id, ' . 'm.image AS image, ' . 'm.member_code AS member_code, ' . 'm.first_name AS first_name, ' . 'm.last_name AS last_name, ' . 'm.sex AS sex, ' . 'm.birthday AS birthday, ' . 'm.mobile AS mobile, ' . 'm.rank as rank,' . 'u.id as user_id,' . 'm.email AS email, CONCAT(m.first_name, " ", m.last_name) AS title' );

		$q->leftJoin ( 'm.PsTeacherClass tc' );
		$q->innerJoin ( 'm.sfGuardUser u WITH (u.user_type =? AND u.is_active = ?)', array (
				PreSchool::USER_TYPE_TEACHER,
				PreSchool::CUSTOMER_ACTIVATED
		) );
		$q->where ( 'm.is_status = ?', PreSchool::HR_STATUS_WORKING );
		$q->where ( 'tc.ps_myclass_id = ?', $ps_class_id );
		$q->andWhere ( '(DATE_FORMAT(tc.start_at,"%Y%m%d") <= ? AND (tc.stop_at IS NULL OR  DATE_FORMAT(tc.stop_at,"%Y%m%d") >= ?))', array (
				$date_at,
				$date_at
		) );
		$q->addOrderBy ( 'm.last_name, m.first_name, m.birthday DESC' );

		return $q->execute ();

	}

	/**
	 * lay danh sach giao vien theo lop
	 * Phung Van Thanh
	 * 15/11/2018
	 */
	public function getAllTeachersInClass($ps_class_id) {

		$q = $this->createQuery ( 'm' );
		$q->select ( 'm.id AS id, ' . 'm.member_code AS member_code, ' . 'CONCAT(m.first_name, " ", m.last_name) AS title' );
		$q->leftJoin ( 'm.PsTeacherClass tc' );
		$q->where ( 'm.is_status = ?', PreSchool::HR_STATUS_WORKING );
		$q->where ( 'tc.ps_myclass_id = ?', $ps_class_id );
		$q->addOrderBy ( 'm.last_name, m.first_name, m.birthday DESC' );

		return $q->execute ();

	}

	/**
	 * Ham tao SQL lay danh giao vien de phan cong cho mot lop
	 */
	public function setSQLTeachersNotInClass($ps_class_id = '', $ps_customer_id, $member_id = null) {

		$a = 'm';
		$q = $this->createQuery ( $a );
		$q->select ( 'm.id AS id, ' . 'm.image AS image, ' . 'm.member_code AS member_code, ' . 'm.first_name AS first_name, ' . 'm.last_name AS last_name, ' . 'm.sex AS sex, ' . 'm.birthday AS birthday, ' . 'm.mobile AS mobile, ' . 'm.rank as rank,' . 'm.email AS email, CONCAT(m.first_name, " ", m.last_name,"-",m.member_code) AS title' );

		$q->leftJoin ( 'm.PsTeacherClass tc With tc.ps_myclass_id = ?', $ps_class_id );

		$q->where ( 'm.ps_customer_id = ?', $ps_customer_id );

		$q->addWhere ( 'm.is_status = ?', PreSchool::HR_STATUS_WORKING );

		if ($member_id <= 0) {
			$q->addWhere ( '(tc.id IS NULL OR m.id IS NULL)' );
		} else {
			$q->addWhere ( 'm.id = ?', $member_id );
		}

		$q->addOrderBy ( 'm.last_name, m.first_name, m.birthday DESC' );

		return $q;

	}

	/**
	 * Ham lay danh giao vien de phan cong cho mot lop
	 */
	public function getTeachersNotInClass($ps_class_id = '', $ps_customer_id) {

		return $this->setSQLTeachersNotInClass ( $ps_class_id, $ps_customer_id )->execute ();

	}

	/**
	 * Lay thong tin ngan cua nhan su
	 *
	 * @author thangnc
	 *        
	 * @param
	 *        	int ps_member_id
	 * @return $object
	 */
	public function getProfileShort($ps_member_id) {

		$query = $this->createQuery ( 'm' );

		$query->select ( 'm.id AS id, ' . 'm.first_name AS first_name, ' . 'm.last_name AS last_name, ' . 'm.image AS image, ' . 'm.year_data AS year_data, ' . 'm.avatar AS avatar,' . 'cus.school_code AS school_code,' . 'cus.cache_data AS cache_data' );
		$query->addSelect ( 'm.ps_province_id AS ps_province_id,m.ps_district_id AS ps_district_id, m.ps_workplace_id, wp.title as wp_name' );		
		$query->innerJoin ( 'm.PsCustomer cus' );
		$query->leftJoin ( 'm.PsWorkPlaces wp' );
		
		$query->addWhere ( 'm.id = ?', $ps_member_id );

		return $query->fetchOne ();

	}

	/**
	 * Lay so luong nhan su cua truong hoc
	 *
	 * @author thangnc
	 *        
	 * @param
	 *        	ps_customer_id
	 * @return int
	 */
	public function getNumberMemberByCustomerId($ps_customer_id) {

		$query = $this->createQuery ( 'm' )->select ( 'm.id' )->addWhere ( 'm.ps_customer_id = ?', $ps_customer_id )->count ();

		return $query;

	}

	/**
	 * lấy tên member dựa vào id
	 *
	 * @param int $ps_member_id
	 * @return mixed
	 */
	public function getMemberName($ps_member_id) {

		$query = $this->createQuery ( 'm' )->select ( 'CONCAT(m.first_name," ", m.last_name) AS name' )->where ( 'm.id = ?', $ps_member_id );

		return $query->fetchOne ();

	}

	/**
	 */
	public function getWorkplaceName($ps_member_id) {

		$query = $this->createQuery ( 'm' );

		$query->select ( 'm.id AS id, ' . 'm.first_name AS first_name, ' . 'm.last_name AS last_name, ' . 'm.image AS image, ' . 'm.year_data AS year_data, ' . 'm.avatar AS avatar,' . 'cus.school_code AS school_code,' . 'cus.cache_data AS cache_data,' . 'wp.title as wp_title' );

		$query->innerJoin ( 'm.PsCustomer cus' );
		$query->innerJoin ( 'm.PsWorkPlaces wp' );

		$query->addWhere ( 'm.id = ?', $ps_member_id );

		return $query->fetchOne ();
	}
	
	/**
	 * Tao SQL danh sach Member thuoc Customer Root de tao User quan ly Cho So/Phong
	 *
	 * @param $member_id
	 * @param $ps_customer_id
	 * @param $flag_all
	 * @return string
	 */
	public function setSQLMemberCustomerRootForUser($ps_customer_id = null, $member_id = null) {
		
		$q = $this->createQuery ( 'm' )
		
		->select ( 'm.id AS id, CONCAT(m.first_name, " ", m.last_name,"-",m.member_code) AS name' )
		->innerJoin ( 'm.PsCustomer cus With cus.is_root = ?', PreSchool::ACTIVE)
		->where ( "m.id NOT IN (SELECT u.member_id FROM sfGuardUser u WHERE user_type = ?)", PreSchool::USER_TYPE_TEACHER );
		
		if ($member_id > 0)
			$q->andWhere ( 'm.id = ?', $member_id );
			
		if ($ps_customer_id > 0)
			$q->andWhere ( 'm.ps_customer_id = ?', $ps_customer_id );
				
		$q->orderBy ( 'm.last_name' );
				
		return $q;
	}
	
	
	/**
	 * Lay SQL
	 *
	 * @author Nguyen Chien Thang
	 *
	 * @param $province_id - int, ID tỉnh
	 * @return mixed
	 */
	public function setSQLMemberByProvince($province_id) {
		
		$query = $this->createQuery ( 'm' );
		
		$query->select ('m.id AS id, CONCAT(m.first_name, " ", m.last_name,"-",m.member_code) AS member_name, CONCAT(p.s_code, " - ", p.name) AS province_name ,d.id AS district_id ,CONCAT(d.s_code, " - ", d.name) AS district_name' );
		
		$query->innerJoin('m.PsProvinces p');
		$query->leftJoin('m.PsDistricts d');
		
		$query->where ( 'm.ps_province_id = ?', $province_id );
		
		$query->orderBy ( 'd.s_code,m.last_name' );
		
		return $query;
	}
	
	/**
	 * Phan nhom nhan su thuoc quan/huyen cua mot so
	 *
	 * @author Nguyen Chien Thang
	 *
	 * @param $province_id - int, ID tỉnh
	 * @return mixed
	 */
	public function getGroupMemberByProvince($province_id) {
		
		$chois = array ();
		
		$_members = $this->setSQLMemberByProvince($province_id)->execute ();
		
		$count_members = count ( $_members );
		
		for($i = 0; $i <= ($count_members-1); $i ++) {
			
			for($j = 1; $j <= $count_members; $j ++) {
				if ($_members [$i]->getDistrictId () <= 0) {
					$chois [$_members [$i]->getProvinceName()] [$_members [$i]->getId ()] = $_members [$i]->getMemberName ();
				} elseif ($_members [$i]->getDistrictId () == $_members [$j]->getDistrictId ()) {
					$chois ['- - '.$_members [$i]->getDistrictName ()] [$_members [$i]->getId ()] = $_members [$i]->getMemberName ();
				}
			}
		}
		return $chois;
	}
}