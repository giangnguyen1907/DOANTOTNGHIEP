<?php

/**
 * FeatureOptionSubjectTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class FeatureOptionSubjectTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object FeatureOptionSubjectTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'FeatureOptionSubject' );
	}

	/**
	 * FUNCTION: doSelectQuery(Doctrine_Query $query)
	 *
	 * @param
	 *        	Doctrine SQL
	 * @return string SQL
	 */
	public function doSelectQuery(Doctrine_Query $query) {

		$a = $query->getRootAlias ();

		$query->select ( 
		$a . '.id AS id, ' . $a . '.type AS type, ' . $a . '.order_by AS iorder, ' . 
		$a . '.feature_option_id AS feature_option_id, ' . $a . '.ps_service_id AS service_id, ' . 
		$a . '.updated_at AS updated_at,' . $a . '.user_created_id  AS user_created_id ,' . 
		'fo.name AS name,' . 'fo.ps_customer_id AS ps_customer_id,' . 
		'CONCAT(u.first_name, " ", u.last_name) AS updated_by' );

		$query->innerJoin ( $a . '.FeatureOption fo' );

		$query->leftJoin ( $a . '.UserUpdated u' );

		if (! myUser::credentialPsCustomers ( 'PS_STUDENT_SUBJECT_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0) {
			$query->where ( 'fo.ps_customer_id IS NULL OR fo.ps_customer_id = ?', myUser::getPscustomerID () );
		}

		return $query;
	}

	public function getMaxOrderBy($service_id = null) {

		$maxOrder = Doctrine_Core::getTable ( 'FeatureOptionSubject' )->createQuery ()
			->select ( 'MAX(order_by) AS cnt_order' )
			->where ( 'ps_service_id =?', $service_id )
			->fetchOne ( array () );
		return $maxOrder->getCntOrder ();
	}

	/**
	 *
	 * @method getCountBranchOption($branchId) - int; Ham tinh so branch_id cua mot FeatureOptionFeature
	 *        
	 * @param int $branchId
	 * @return int
	 */
	public function getCountSubjectOption($service_id) {

		$q = $this->createQuery ( 's' )
			->select ( 'count(s.id)' )
			->where ( 's.ps_service_id = ? ', $service_id );
		return $q->count ();
	}

	// get list options of $service_id
	public function getFeatureOptions($service_id, $ps_service_course_schedule_id, $student_id) {

		// die($date);
		// print_r(date('Ymd',$date));die;
		$q = $this->createQuery ( 'a' )
			->select ( 'fo.name as name, a.type, a.order_by, sscc.id As student_service_course_comment_id, sscc.note as note, sv.mode AS mode' )
			->innerJoin ( 'a.FeatureOption fo' )
			->leftJoin ( 'a.StudentServiceCourseComment sscc With sscc.ps_service_course_schedule_id = ? AND sscc.student_id= ?', array (
				$ps_service_course_schedule_id,
				$student_id ) )
			->leftJoin ( 'a.Service sv' )
			->where ( 'a.ps_service_id = ?', $service_id )
			->orderBy ( 'a.order_by' );

		return $q->execute ();
		// die;
		// DATE_FORMAT(sscc.tracked_at,"%Y%m%d")= date('Ymd', strtotime($tracked_at)),
	}

	// public function getFeatureOptionsSubjectOfStudentSchedule($ps_service_course_schedule_id, $student_id)
	// {
	// $query = $this->createQuery('a');

	// }
}