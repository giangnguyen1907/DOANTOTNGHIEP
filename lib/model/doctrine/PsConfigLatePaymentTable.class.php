<?php

/**
 * PsConfigLatePaymentTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PsConfigLatePaymentTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object PsConfigLatePaymentTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'PsConfigLatePayment' );
	}

	/**
	 * FUNCTION: doSelectQuery(Doctrine_Query $query)
	 *
	 * @param
	 *        	Doctrine SQL
	 * @return string SQL
	 */
	public function doSelectQuery(Doctrine_Query $query) {

		$a = $query->getRootAlias ();

		$query->select ( $a . '.id AS id, ' . $a . '.from_date AS from_date, ' . $a . '.to_date AS to_date, ' . $a . '.price AS price, ' . $a . '.note AS note, ' . $a . '.updated_at AS updated_at,wp.title AS ps_workplace_title,cus.school_code AS school_code,' . 'CONCAT(u.first_name, " ", u.last_name) AS updated_by' );

		$query->leftJoin ( $a . '.UserUpdated u' );
		$query->leftJoin ( $a . '.PsWorkPlaces wp' );
		$query->innerJoin ( 'wp.PsCustomer cus' );

		if (! myUser::credentialPsCustomers ( 'PS_FEE_CONFIG_LATE_PAYMENT_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0) {
			$query->where ( $a . '.ps_customer_id = ?', myUser::getPscustomerID () );
		}

		$query->addOrderBy ( $a . '.from_date' );

		return $query;
	}

	/**
	 * lay gia tien nop muon cua so so
	 *
	 * @author Phung Van Thanh
	 * @param
	 *
	 * @return Obj
	 *
	 *
	 */
	public function getPriceByPsWorkplaceDate($ps_workplace_id, $tracked_at) {

		$tracked_at = ($tracked_at != '') ? $tracked_at : date ( 'Ymd' );

		$q = $this->createQuery ( 'pm' )
			->select ( "pm.id as id, pm.price as price" )
			->addWhere ( 'pm.ps_workplace_id = ?', $ps_workplace_id );
		$q->andWhere ( ' DATE_FORMAT(pm.from_date,"%Y%m%d") <= ?', date ( "Ymd", strtotime ( $tracked_at ) ) );
		$q->andWhere ( ' DATE_FORMAT(pm.to_date,"%Y%m%d") >= ?', date ( "Ymd", strtotime ( $tracked_at ) ) );
		$q->orderBy ( 'pm.from_date DESC' );
		return $q->fetchOne ();
	}

	/**
	 * Lay ra so tien nop muon cua thang truoc do
	 *
	 * @author Phung Van Thanh
	 * @param
	 *
	 * @return Obj
	 *
	 *
	 */
	public function getPriceByPsWorkplacePrevMonth($ps_workplace_id, $tracked_at) {

		// echo $tracked_at; die;
		$tracked_at = ($tracked_at != '') ? $tracked_at : date ( 'Ymd' );

		$q = $this->createQuery ( 'pm' )
			->select ( "pm.id as id, pm.price as price" )
			->addWhere ( 'pm.ps_workplace_id = ?', $ps_workplace_id );
		$q->andWhere ( ' DATE_FORMAT(pm.from_date,"%Y%m") = ?', date ( "Ym", strtotime ( $tracked_at ) ) );
		$q->andWhere ( ' DATE_FORMAT(pm.to_date,"%Y%m") = ?', date ( "Ym", strtotime ( $tracked_at ) ) );
		$q->orderBy ( 'pm.from_date DESC' );
		return $q->fetchOne ();
	}

	/**
	 * Lay ra danh sach
	 *
	 * @author ThanhPV
	 * @param int $ps_school_year_id
	 * @param int $ps_customer_id
	 * @param int $ps_workplace_id
	 * @return Doctrine_Collection
	 */
	public function getListConfigLatePayment($ps_school_year_id, $ps_customer_id, $ps_workplace_id) {

		$q = $this->createQuery ( 'pm' )
			->select ( "pm.id as id, pm.price as price, pm.from_date as from_date, pm.to_date as to_date,
        pm.updated_at AS updated_at,CONCAT(u.first_name, ' ', u.last_name) AS updated_by" )
			->addWhere ( 'pm.ps_workplace_id = ?', $ps_workplace_id )
			->andWhere ( 'pm.ps_customer_id = ?', $ps_customer_id )
			->andWhere ( 'pm.school_year_id = ?', $ps_school_year_id );
		$q->leftJoin ( 'pm.UserUpdated u' );

		$q->orderBy ( 'pm.from_date' );

		return $q->execute ();
	}

	public function updateConfigLatePayment($ps_school_year_id, $ps_customer_id, $ps_workplace_id, $start_month) {

		$q = $this->createQuery ( 'pm' )
			->select ( "pm.id as id, pm.price as price, pm.from_date as from_date, pm.to_date as to_date,
        pm.updated_at AS updated_at,CONCAT(u.first_name, ' ', u.last_name) AS updated_by" )
			->addWhere ( 'pm.ps_workplace_id = ?', $ps_workplace_id )
			->andWhere ( 'pm.ps_customer_id = ?', $ps_customer_id )
			->andWhere ( 'pm.school_year_id = ?', $ps_school_year_id );
		$q->andWhere ( ' DATE_FORMAT(pm.to_date,"%Y%m") = ?', date ( "Ym", strtotime ( $start_month ) ) );
		$q->andWhere ( ' DATE_FORMAT(pm.from_date,"%Y%m") = ?', date ( "Ym", strtotime ( $start_month ) ) );

		$q->leftJoin ( 'pm.UserUpdated u' );

		$q->orderBy ( 'pm.from_date' );

		return $q->fetchOne ();
	}
}