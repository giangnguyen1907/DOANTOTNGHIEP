<?php

/**
 * StudentServiceCourseCommentTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class StudentServiceCourseCommentTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object StudentServiceCourseCommentTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'StudentServiceCourseComment' );
	}

	public function doSelectQuery(Doctrine_Query $query) {

		$date_at = date ( 'Ymd' );

		$query = Doctrine_Query::create ()->from ( 'Student s' );

		$query->select ( 's.image AS image, sco.id AS course_id , sch.id AS course_schedule, ss.id ,s.year_data as year_data, s.id as student_id, s.sex AS sex, cus.school_code AS school_code, log.id as logtime_id, CONCAT(s.first_name, " ", s.last_name) AS student_name' );

		$query->innerJoin ( 's.PsCustomer cus' );

		$query->innerJoin ( 's.StudentClass sc With (DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND (sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array (
				$date_at,
				$date_at ) );

		$query->innerJoin ( 'sc.MyClass as mc' );

		$query->innerJoin ( 'mc.PsClassRooms cr' );

		$query->innerJoin ( 'cr.PsWorkPlaces wp' );

		$query->innerJoin ( 's.StudentService ss With (ss.delete_at IS NULL)' );

		$query->innerJoin ( 'ss.PsServiceCourses sco' );

		$query->innerJoin ( 's.PsLogtimes log' );

		$query->innerJoin ( 'sco.PsServiceCourseSchedules sch' );
		// $query->innerJoin ( 'sco.PsServiceCourseSchedules scs');

		// $query->addWhere('DATE_FORMAT(log.login_at,"%Y%m%d") = ?',date("Ymd", strtotime($date_at)));

		$query->addWhere ( 's.deleted_at IS NULL' );

		$query->whereIn ( 'sc.type', array (
				PreSchool::SC_STATUS_TEST,
				PreSchool::SC_STATUS_OFFICIAL ) );

		$query->orderBy ( 's.last_name,s.first_name' );

		if (! myUser::credentialPsCustomers ( 'PS_STUDENT_SERVICE_COURSE_COMMENT_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0) {
			$query->addWhere ( 's.ps_customer_id = ?', myUser::getPscustomerID () );
		}

		return $query;
	}

	/**
	 * Lay so luong ban ghi StudentServiceCourseComment boi $feature_option_subject_id
	 *
	 * @param $feature_option_subject_id -
	 *        	int
	 *        	
	 * @return int
	 */
	public function getNumberRecordStudentServiceCourseCommentByFOS($feature_option_subject_id) {

		$q = $this->createQuery ( 'c' )
			->where ( 'feature_option_subject_id = ?', $feature_option_subject_id );

		return $q->count ();
	}

	// Lay ban ghi theo hoc sinh va $ps_service_course_schedule_id
	public function updateStudentServiceCourseCommentByPsServiceCourseSchedule($ps_service_course_schedule_id) {

		// $tracked_at = date('Ymd', $tracked_at);
		// print_r($tracked_at);die;
		// echo $tracked_at;die;
		$q = $this->createQuery ( 'c' )
			->where ( 'c.ps_service_course_schedule_id = ? ', $ps_service_course_schedule_id );
		return $q->execute ();
	}

	/**
	 * lấy comment theo khóa học và học sinh.
	 *
	 * @param int $student_id
	 *        	id học sinh
	 * @param int $course_id
	 *        	id khóa học
	 * @return $list obj
	 */
	public function getCourseCommentByStudentId($student_id, $course_id) {

		$query = $this->createQuery ( 'c' );

		$query->select ( 'c.student_id AS student_id,' . 'c.ps_service_course_schedule_id AS schedule_id,' . 'c.feature_option_subject_id AS feature_option_subject_id,' . 'sch.date_at AS date_at,' . 'sj.id,' . 'fo.name AS option_name,' . 'sch.start_time_at AS start_time,' . 'sch.end_time_at AS end_time,' . 'c.note AS note,' . 'c.created_at AS created_at,' . 'c.updated_at AS updated_at' );

		// $query->leftJoin('c.Student s');

		$query->leftJoin ( 'c.PsServiceCourseSchedules sch' );

		$query->leftJoin ( 'c.FeatureOptionSubject sj' );

		$query->leftJoin ( 'sj.FeatureOption fo' );

		$query->leftJoin ( 'sch.PsServiceCourses sc' );

		// $query->addWhere('sc.id = ?',$couse_id);

		$query->addWhere ( 'sch.ps_service_course_id = ?', $course_id );

		$query->addWhere ( 'c.student_id = ?', $student_id );

		$query->addOrderBy ( 'sch.date_at desc' );
		return $query->execute ();
	}

	/**
	 * Lấy đánh giá theo schedule_id và học sinh
	 *
	 * @param int $student_id
	 *        	id học sinh
	 * @param int $schedule_id
	 *        	id shedule
	 * @return $list obj
	 */
	public function getFeatureOptionByScheduleAndStudent($student_id, $schedule_id) {

		$query = $this->createQuery ( 'c' );

		$query->select ( 'sj.id,fo.id,c.feature_option_subject_id AS feature_id, fo.name AS option_name, c.note as note' );

		$query->leftJoin ( 'c.FeatureOptionSubject sj' );

		$query->leftJoin ( 'sj.FeatureOption fo' );

		$query->addWhere ( 'c.student_id = ?', $student_id );

		$query->addWhere ( 'c.ps_service_course_schedule_id = ?', $schedule_id );

		return $query->execute ();
	}

	/**
	 * kiểm tra đã có nhận xét chưa
	 *
	 * @param int $student_id
	 * @param int $schedule_id
	 * @return int
	 */
	public function checkExists($student_id, $schedule_id) {

		$query = $this->createQuery ( 'c' );

		$query->select ( 'c.id' );

		$query->addWhere ( 'c.student_id = ? AND c.ps_service_course_schedule_id = ?', array (
				$student_id,
				$schedule_id ) );

		return $query->count ();
	}
}