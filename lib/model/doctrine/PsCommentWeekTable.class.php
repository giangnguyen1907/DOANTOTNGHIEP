<?php

/**
 * PsCommentWeekTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PsCommentWeekTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object PsCommentWeekTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'PsCommentWeek' );
	}

	public function getCommentWeekByField($comment_id, $getField = null) {
		
		$query = $this->createQuery () ->select ( $getField != '' ? $getField : '*' );
		
		$query->addWhere ( 'id = ?', $comment_id );
		
		return $query->fetchOne ();
	}

	public function doSelectQuery(Doctrine_Query $query) {

		$query = Doctrine_Query::create ()->
		from ( 'Student s' );

		$query->select ( 'cw.number_push_notication AS number_push_notication,' . 's.ps_customer_id AS ps_customer_id,' . 's.image AS image, ' . 's.id as student_id, s.student_code AS student_code, ' . 's.sex AS sex, ' . 's.birthday AS birthday, ' . 's.year_data AS year_data, ' . 'cus.school_code AS school_code,' . 'CONCAT(s.first_name, " ", s.last_name) AS student_name' );

		$query->innerJoin ( 's.PsCustomer cus' );

		$query->innerJoin ( 's.PsCommentWeek cw' );

		$query->addWhere ( 's.deleted_at IS NULL' );

		if (! myUser::credentialPsCustomers ( 'PS_SYSTEM_FEATURE_BRANCH_SCHOOL' ) && myUser::getPscustomerID () > 0) {
			$query->addWhere ( 's.ps_customer_id = ?', myUser::getPscustomerID () );
		}

		$query->orderBy ( 's.last_name, s.first_name' );

		return $query;
	}

	public function getCommentWeekByWeek($ps_customer_id, $ps_year, $ps_week, $ps_month = null) {

		$query = $this->createQuery ( 'cw' );
		$query->select ( 'cw.*' );
		$query->addSelect ( 'u.id AS u_id, CONCAT(u.first_name, " ", u.last_name) as updated_by' );
		$query->leftJoin ( 'cw.UserUpdated u' );
		$query->addWhere ( 'cw.ps_customer_id =?', $ps_customer_id );
		$query->andWhere ( 'cw.ps_year =?', $ps_year );
		if ($ps_month != '') {
			$query->andWhere ( 'cw.ps_month =?', $ps_month );
		} else {
			$query->andWhere ( 'cw.ps_week =?', $ps_week );
		}

		return $query->execute ();
	}

	public function checkCommentWeekByStudent($student_id, $ps_year, $ps_week, $ps_month = null) {

		$query = $this->createQuery ( 'cw' );
		$query->select ( 'cw.*' );
		$query->addSelect ( 'u.id AS u_id, CONCAT(u.first_name, " ", u.last_name) as updated_by' );
		$query->leftJoin ( 'cw.UserUpdated u' );
		$query->addWhere ( 'cw.student_id =?', $student_id );
		$query->andWhere ( 'cw.ps_year =?', $ps_year );
		if ($ps_month != '') {
			$query->andWhere ( 'cw.ps_month =?', $ps_month );
		} else {
			$query->andWhere ( 'cw.ps_week =?', $ps_week );
		}

		return $query->fetchOne ();
	}

	public function getCommentStudentByStudentId($student_id, $ps_month, $start_week, $end_week) {

		$date_at = '01-' . $ps_month;
		$month = ( int ) date ( 'm', strtotime ( $date_at ) );
		$query = $this->createQuery ( 'cw' );
		$query->select ( 'cw.*' );
		$query->addSelect ( 'u.id AS u_id, CONCAT(u.first_name, " ", u.last_name) as updated_by' );
		$query->leftJoin ( 'cw.UserUpdated u' );
		$query->addWhere ( 'cw.student_id =?', $student_id );

		$query->andWhere ( 'cw.ps_year =?', date ( 'Y', strtotime ( $date_at ) ) );

		$query->andWhere ( '(cw.ps_month is NULL OR cw.ps_month =?) OR ((cw.ps_week >=? and cw.ps_week <= ?))', array (
				$month,
				$start_week,
				$end_week ) );

		return $query->execute ();
	}
}