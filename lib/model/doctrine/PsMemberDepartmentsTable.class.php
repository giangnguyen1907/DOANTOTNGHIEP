<?php

/**
 * PsMemberDepartmentsTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PsMemberDepartmentsTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object PsMemberDepartmentsTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'PsMemberDepartments' );
	}

	/**
	 * Lay ra danh sach phong ban cua giao vien da tung lam
	 */
	public function getMemberDepartmentByMemberId($member_id, $track_at = null) {

		$track_at = $track_at ? $track_at : '';

		$query = $this->createQuery ( 'a' )
			->
		select ( 'a.id AS id,' . 'a.ps_member_id AS ps_member_id,' . 'a.ps_department_id AS ps_department_id,' . 'a.start_at AS start_at,' . 'a.stop_at AS stop_at,' . 'a.ps_function_id AS ps_function_id,' . 'a.note AS note,' . 'a.is_current AS is_current,' . 'a.user_created_id AS user_created_id,' . 'a.user_updated_id AS user_updated_id,' . 'a.created_at AS created_at,' . 'a.updated_at AS updated_at,' . 'fc.title AS fc_title,' . 'd.title AS d_title,' . 'a.updated_at AS updated_at,' . 'CONCAT(uc.first_name, " ", uc.last_name) AS creator_by, ' . 'CONCAT(ud.first_name, " ", ud.last_name) AS updated_by, ' )
			->innerJoin ( 'a.PsFunction fc' )
			->innerJoin ( 'a.PsDepartment d' )
			->innerJoin ( 'a.UserCreated uc' )
			->
		innerJoin ( 'a.UserUpdated ud' )
			->addWhere ( 'fc.is_activated = ?', PreSchool::ACTIVE )
			->addWhere ( 'd.is_activated = ?', PreSchool::ACTIVE )
			->andWhere ( 'a.ps_member_id = ?', $member_id );

		if ($track_at != '') {

			$query->addWhere ( 'DATE_FORMAT(a.start_at,"%Y%m%d") <=?', date ( 'Ymd', strtotime ( $track_at ) ) );
			$query->addWhere ( '(a.stop_at IS NULL OR DATE_FORMAT(a.stop_at,"%Y%m%d") >=?)', date ( 'Ymd', strtotime ( $track_at ) ) );
		}

		$query->orderBy ( 'a.created_at ASC' );

		return $query->execute ();
	}

	/**
	 * Lay ra id co so cua giao vien dang hoat dong trong phong ban
	 */
	public function getDepartmentByPsMemberId($member_id) {

		$query = $this->createQuery ( 'a' )->select ( 'a.id AS id, d.ps_workplace_id AS ps_workplace_id, wp.title as wp_name' )
			->innerJoin ( 'a.PsDepartment d' )
			->leftJoin ( 'd.PsWorkPlaces wp' )
			->andWhere ( 'a.ps_member_id = ?', $member_id )
			->andWhere ( 'a.is_current = ?', PreSchool::ACTIVE );

		$query->orderBy ( 'a.created_at ASC' );

		return $query->fetchOne ();
	}

	/**
	 * Lay ra danh sach giao vien cua phong ban (load ajax)
	 */
	public function setMemberDepartments($ps_department_id) {

		$tracked_at = ($tracked_at == null) ? date ( 'Ymd' ) : $tracked_at;

		$query = $this->createQuery ( 'a' )
			->
		select ( 'mb.id AS id,a.id AS ps_member_department_id ,' . 'CONCAT(mb.first_name, " ", mb.last_name) as title' )
			->innerJoin ( 'a.PsMember mb' );
		$query->andWhere ( 'a.ps_department_id = ?', $ps_department_id );

		$query->orderBy ( 'mb.last_name, mb.first_name' );

		return $query;
	}

	/**
	 * Lay ra danh sach giao vien cua phong ban
	 */
	public function getMemberDepartments($ps_department_id) {

		return $this->setMemberDepartments ( $ps_department_id )
			->execute ();
	}

	/**
	 * Lay ra phong ban cua member
	 */
	public function getDepartmentsMemberId($member_id) {

		$tracked_at = ($tracked_at == null) ? date ( 'Ymd' ) : $tracked_at;

		$query = $this->createQuery ( 'a' )
			->
		select ( 'a.id AS id,' . 'a.ps_member_id AS ps_member_id,' . 'a.ps_department_id AS ps_department_id,' . 'a.start_at AS start_at,' . 'a.stop_at AS stop_at,' . 'a.ps_function_id AS ps_function_id,' . 'a.note AS note,' . 'a.is_current AS is_current,' . 'a.user_created_id AS user_created_id,' . 'a.user_updated_id AS user_updated_id,' . 'a.created_at AS created_at,' . 'a.updated_at AS updated_at,' . 'dp.ps_workplace_id AS ps_workplace_id,' . 'mb.id AS mb_id,' . 'CONCAT(mb.first_name, " ", mb.last_name) as teacher_name' )
			->innerJoin ( 'a.PsMember mb' )
			->innerJoin ( 'a.PsDepartment dp' )
			->andWhere ( 'DATE_FORMAT(a.start_at,"%Y%m%d") <= ?', date ( 'Ymd', strtotime ( $tracked_at ) ) )
			->
		andWhere ( 'a.stop_at IS NULL OR  DATE_FORMAT(a.stop_at,"%Y%m%d") >= ?', date ( 'Ymd', strtotime ( $tracked_at ) ) );

		$query->andWhere ( 'a.ps_member_id = ?', $member_id );

		$query->orderBy ( 'a.created_at ASC' );

		return $query->fetchOne ();
	}

	/**
	 * Set SQL loc ra phong ban theo params truyen vao
	 */
	public function setMemberDepartmentByParams($params) {

		$query = $this->createQuery ( 'md' );

		$query->select ( 'md.id AS id,' . 'm.id AS member_id,' . 'CONCAT(m.first_name, " ", m.last_name) AS member_name,' . 'fc.id AS fc_id,' . 'fc.title AS function_name,' . 'd.id AS department_id, ' . 'd.title AS department_name,' );
		$query->innerJoin ( 'md.PsMember m' );

		$query->innerJoin ( 'md.PsFunction fc' );

		$query->innerJoin ( 'md.PsDepartment d' );

		$query->andWhere ( 'fc.is_activated = ?', PreSchool::ACTIVE );

		$query->andWhere ( 'd.is_activated = ?', PreSchool::ACTIVE );

		if (isset ( $params ['ps_member_id'] ) && $params ['ps_member_id'] > 0) {
			$query->andWhere ( 'md.ps_member_id = ?', $params ['ps_member_id'] );
		}

		if (isset ( $params ['ps_department_id'] ) && $params ['ps_department_id'] > 0) {
			$query->andWhere ( 'md.ps_department_id = ?', $params ['ps_department_id'] );
		}

		if (isset ( $params ['ps_function_id'] ) && $params ['ps_function_id'] > 0) {
			$query->andWhere ( 'md.ps_function_id = ?', $params ['ps_function_id'] );
		}

		return $query;
	}

	// Ham ton tai rang buoc giua MemberDepartment va Department
	public function checkMemberDepartmentExits($ps_department_id, $objid = null) {

		$query = $this->createQuery ()
			->select ( 'id' );

		if (isset ( $ps_department_id )) {

			if (is_array ( $ps_department_id ) > 0)

				$query->whereIn ( 'ps_department_id', $ps_department_id );

			else

				$query->andWhere ( 'ps_department_id=?', $ps_department_id );
		}

		if ($objid > 0)
			$query->andwhere ( 'id <> ?', $objid );

		$records = $query->execute ();

		return count ( $records ) ? true : false;
	}
}