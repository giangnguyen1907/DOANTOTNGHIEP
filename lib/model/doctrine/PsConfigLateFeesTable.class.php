<?php

/**
 * PsConfigLateFeesTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PsConfigLateFeesTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object PsConfigLateFeesTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'PsConfigLateFees' );
	}

	/**
	 * FUNCTION: doSelectQuery(Doctrine_Query $query)
	 *
	 * @param
	 *        	Doctrine SQL
	 * @return string SQL
	 */
	public function doSelectQuery(Doctrine_Query $query) {

		$a = $query->getRootAlias ();

		$query->select ( $a . '.id AS id, ' . $a . '.from_minute AS from_minute, ' . $a . '.to_minute AS to_minute, ' . $a . '.price AS price, ' . $a . '.note AS note, ' . $a . '.updated_at AS updated_at,wp.title AS ps_workplace_title,cus.school_code AS school_code,' . 'CONCAT(u.first_name, " ", u.last_name) AS updated_by' );

		$query->leftJoin ( $a . '.UserUpdated u' );
		$query->leftJoin ( $a . '.PsWorkPlaces wp' );
		$query->innerJoin ( 'wp.PsCustomer cus' );

		if (! myUser::credentialPsCustomers ( 'PS_FEE_CONFIG_LATE_FEES_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0) {
			$query->where ( $a . '.ps_customer_id = ?', myUser::getPscustomerID () );
		}

		return $query;
	}

	/**
	 * Lay khoang gia cua so phut ve muon
	 *
	 * @author Nguyen Chien Thang
	 * @param
	 *        	int - $ps_workplace_id
	 * @param
	 *        	float - $lateTime số phút về muộn
	 */
	public function getLatePriceOfLateTime($ps_workplace_id, $lateTime) {

		$q = $this->createQuery ( 'c' )
			->select ( 'c.price AS price' );

		$q->where ( 'c.ps_workplace_id = ?', $ps_workplace_id );

		$q->andWhere ( ' c.from_minute <= ? AND c.to_minute >= ? ', array (
				$lateTime,
				$lateTime ) );

		return $q->fetchOne ();
	}

	/**
	 * Lay danh sách khoang gia ve muon cua mot co so
	 *
	 * @author Nguyen Chien Thang
	 *        
	 * @param
	 *        	int - $ps_workplace_id
	 * @param
	 *        	float - $lateTime số phút về muộn
	 */
	public function getListLates($ps_workplace_id) {

		$q = $this->createQuery ( 'c' )
			->select ( 'c.price AS price' );

		$q->where ( 'c.ps_workplace_id = ?', $ps_workplace_id );

		$q->orderBy ( ' c.from_minute' );

		return $q->execute ();
	}
}