<?php

/**
 * PsMealsTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PsMealsTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object PsMealsTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'PsMeals' );
	}

	public function doSelectQuery(Doctrine_Query $query) {

		$a = $query->getRootAlias ();

		$query->select ( $a . '.id AS id, ' . $a . '.title AS title, ' . $a . '.note AS note, ' . $a . '.iorder AS iorder, ' . $a . '.ps_customer_id AS ps_customer_id, ' . 'wp.title AS workplace_title, ' . $a . '.is_activated AS is_activated, ' . $a . '.user_updated_id AS user_updated_id, ' . $a . '.updated_at AS updated_at,' . 'CONCAT(u.first_name, " ", u.last_name) AS updated_by' );

		$query->leftJoin ( $a . '.PsCustomer cus' );

		$query->leftJoin ( $a . '.PsWorkPlaces wp' );

		$query->leftJoin ( $a . '.UserUpdated u' );

		if (! myUser::credentialPsCustomers ( 'PS_NUTRITION_MEALS_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0)
			$query->addWhere ( $a . '.ps_customer_id IS NULL or ' . $a . '.ps_customer_id = ?', myUser::getPscustomerID () );
		else {
			$query->addWhere ( ' 1=1' );
		}

		return $query;
	}

	/**
	 * sql lay danh sach bua
	 *
	 * @author
	 *
	 * @param
	 * @return string
	 *
	 */
	public function setSQLByCustomerId($getField = 'id, title', $psCustomerId = null, $is_activated = null) {

		$q = $this->createQuery ()
			->select ( $getField != '' ? $getField : '*' );

		if ($is_activated > 0)
			$q->addWhere ( 'is_activated = ?', $is_activated );

		if ($psCustomerId > 0)
			$q->addWhere ( 'ps_customer_id IS NULL OR ps_customer_id = ?', $psCustomerId );
		else
			$q->addWhere ( 'ps_customer_id IS NULL' );

		$q->addOrderBy ( 'iorder' );

		return $q;
	}

	/**
	 * lay danh sach bua
	 *
	 * @author
	 *
	 * @param
	 * @return $obj
	 *
	 */
	public function getMealByCustomerId($getField = 'id, title', $psCustomerId = null, $is_activated = null) {

		$q = $this->createQuery ()
			->select ( $getField != '' ? $getField : '*' );

		if ($is_activated > 0)
			$q->addWhere ( 'is_activated = ?', $is_activated );

		if ($psCustomerId > 0)
			$q->addWhere ( 'ps_customer_id IS NULL OR ps_customer_id = ?', $psCustomerId );
		else
			$q->addWhere ( 'ps_customer_id IS NULL' );

		$q->addOrderBy ( 'iorder' );

		return $q->execute ();
	}

	/**
	 * sql lay danh sach bua theo params
	 *
	 * @author
	 *
	 * @param
	 * @return string
	 *
	 */
	public function setSQLByParams($params) {

		$q = $this->createQuery ()
			->select ( 'id, title' );

		if ((isset ( $params ['is_activated'] ) && $params ['is_activated'] > 0))

			$q->addWhere ( 'is_activated = ?', $params ['is_activated'] );

		if ((isset ( $params ['ps_customer_id'] ) && $params ['ps_customer_id'] > 0))
			$q->addWhere ( '(ps_customer_id IS NULL OR ps_customer_id = ?)', $params ['ps_customer_id'] );
		else
			$q->addWhere ( 'ps_customer_id IS NULL' );

		if ((isset ( $params ['ps_workplace_id'] ) && $params ['ps_workplace_id'] > 0))
			$q->addWhere ( '(ps_workplace_id IS NULL OR ps_workplace_id = ?)', $params ['ps_workplace_id'] );

		$q->addOrderBy ( 'iorder' );

		return $q;
	}
}