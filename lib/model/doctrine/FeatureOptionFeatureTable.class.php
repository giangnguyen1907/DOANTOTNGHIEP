<?php

/**
 * FeatureOptionFeatureTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class FeatureOptionFeatureTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object FeatureOptionFeatureTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'FeatureOptionFeature' );
	}

	/**
	 * FUNCTION: doSelectQuery(Doctrine_Query $query)
	 *
	 * @param
	 *        	Doctrine SQL
	 * @return string SQL
	 */
	public function doSelectQuery(Doctrine_Query $query) {

		$a = $query->getRootAlias ();

		$query->select ( 
		$a . '.id AS id, ' . $a . '.type AS type, ' . $a . '.order_by AS iorder, ' . 
		$a . '.feature_option_id AS feature_option_id, ' . $a . '.feature_branch_id AS feature_branch_id, ' . 
		$a . '.updated_at AS updated_at,' . $a . '.user_created_id  AS user_created_id ,' . $a.'.is_activated AS is_activated,'.
		'fo.name AS name,' . 'fo.ps_customer_id AS ps_customer_id,' . 'fo.id AS fo_id,'.
		'CONCAT(u.first_name, " ", u.last_name) AS updated_by, sf.id AS sf_id' );

		$query->innerJoin ( $a . '.FeatureOption fo' );

		$query->leftJoin ( $a . '.UserUpdated u' );
		
		$query->leftJoin ( $a . '.StudentFeature sf' );
		
		if (! myUser::credentialPsCustomers ( 'PS_SYSTEM_FEATURE_BRANCH_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0) {
			$query->where ( 'fo.ps_customer_id IS NULL OR fo.ps_customer_id = ?', myUser::getPscustomerID () );
		}

		return $query;
	}

	public function getMaxOrderBy($branch_id = null) {

		$maxOrder = Doctrine_Core::getTable ( 'FeatureOptionFeature' )->createQuery ()
			->select ( 'MAX(order_by) AS cnt_order' )
			->where ( 'feature_branch_id =?', $branch_id )
			->fetchOne ( array () );
		return $maxOrder->getCntOrder ();
	}

	/**
	 *
	 * @method getCountBranchOption($branchId) - int; Ham tinh so branch_id cua mot FeatureOptionFeature
	 *        
	 * @param int $branchId
	 * @return int
	 */
	public function getCountBranchOption($branchId) {

		$q = $this->createQuery ( 's' )
			->select ( 'count(s.id)' )
			->where ( 's.feature_branch_id = ? ', $branchId );
		return $q->count ();
	}

	public function checkOptionFeature($optionId) {
		
		$q = $this->createQuery ( 's' ) 
		->select ( 'count(s.id)' )
		->where ( 's.feature_option_id = ? ', $optionId );
		return $q->count ();
		
	}
	
	/**
	 *
	 * @method getFeatureOptionsByBranchId($branchId) - int; Ham tra ve option
	 *        
	 * @param int $branchId
	 * @return int
	 */
	public function getFeatureOptionsByBranchId($branchId, $tracked_at) {

		$q = Doctrine_Query::create ()->select ( 'fo.name as name, a.type, a.order_by, a.id As a_id,sf.id As student_feature_id, sf.note as note, sf.time_at as time_at, sf.student_id as student_id' )
			->from ( 'FeatureOptionFeature a' )
			->innerJoin ( 'a.FeatureOption fo' )
			->leftJoin ( 'a.StudentFeature sf With DATE_FORMAT(sf.tracked_at,"%Y%m%d")= ?', date ( 'Ymd', strtotime ( $tracked_at ) ) )
			->where ( 'a.feature_branch_id = ?', $branchId )
			->andWhere('a.is_activated=?', PreSchool::ACTIVE)
			->groupBy ( 'a.id' )
			->orderBy ( 'a.order_by' );

		return $q->execute ();
	}

	/**
	 * lấy tên đánh giá hoạt động
	 *
	 * @param int $id
	 * @return obj
	 */
	public function getFeatureOptionNameById($id) {

		$query = $this->createQuery ( 'c' );

		$query->select ( 'fo.name as feature_name' );

		$query->innerJoin ( 'FeatureOption fo' );

		$query->addWhere ( 'c.id = ?', $id );

		$query->featchOne ();
	}

	/**
	 * --------------------------------END VESION 1.5 --------------------------------------------------------*
	 */

	// get list options of branchid
	public function getFeatureOptions($branchId, $tracked_at, $student_id) {

		// die($date);
		// print_r(date('Ymd',$date));die;
		$q = Doctrine_Query::create ()->select ( 'fo.name as name, a.type, a.order_by, sf.id As student_feature_id, sf.note as note, sf.time_at as time_at, fb.mode as mode' )
			->from ( 'FeatureOptionFeature a' )
			->innerJoin ( 'a.FeatureOption fo' )
			->leftJoin ( 'a.FeatureBranch fb' )
			->leftJoin ( 'a.StudentFeature sf With DATE_FORMAT(sf.tracked_at,"%Y%m%d")= ? AND sf.student_id= ?', array (
				date ( 'Ymd', strtotime ( $tracked_at ) ),
				$student_id ) )
			->where ( 'a.feature_branch_id = ?', $branchId )
			->orderBy ( 'a.order_by' );

		return $q->execute ();
	}

	/**
	 * *
	 */
	public function checkBranchOptionExist($branch_id, $option_id) {

		$q = $this->createQuery ( 'c' )
			->select ( "c.id" )
			->addWhere ( 'c.feature_branch_id = ? AND c.feature_option_id = ?', array (
				$branch_id,
				$option_id ) )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	public function countBranchOption($branchId) {

		$q = $this->createQuery ( 's' )
			->where ( 's.feature_branch_id = ? ', $branchId );
		return $q->execute ();
	}
}