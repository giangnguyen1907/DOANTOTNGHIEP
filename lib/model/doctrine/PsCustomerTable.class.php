<?php
/**
 * PsCustomerTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PsCustomerTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object PsCustomerTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'PsCustomer' );

	}

	/**
	 * Lay max id cua Model: PsCustomer
	 *
	 * @return int
	 */
	public function getMaxCustomerId() {

		$q = $this->createQuery ( 's' )->select ( 'MAX(s.id) AS max_id' );

		return $q->fetchOne ()->getMaxId ();

	}

	/**
	 * Tao SQL lay danh sach Customer
	 *
	 * @return list obj
	 */
	public function setSQLCustomers($is_activated = null, $cId = null) {

		$q = $this->createQuery ( 's' )->select ( 's.id AS id, school_name AS title, school_name AS name' );

		if ($is_activated)
			$q->addWhere ( 's.is_activated = ?', $is_activated );

		if ($cId > 0)
			$q->addWhere ( 's.id = ?', $cId );

		$q->orderBy('s.iorder' );

		return $q;

	}

	/**
	 * Lay danh sach Customer
	 *
	 * @return list obj
	 */
	public function getCustomers($is_activated = 1, $cId = null) {

		$q = $this->setSQLCustomers ( $is_activated, $cId );
		return $q->execute ();

	}

	/**
	 * FUNCTION: doSelectQuery(Doctrine_Query $query)
	 *
	 * @param
	 *        	Doctrine SQL
	 * @return string SQL
	 */
	public function doSelectQuery(Doctrine_Query $query) {

		$alias = $query->getRootAlias ();

		$query->addSelect ( $alias . '.id,' . 
		$alias.'.is_root AS is_root,'.
		$alias . '.is_deploy,' . $alias . '.school_code, ' . $alias . '.school_name,' . $alias . '.logo,' . $alias . '.year_data,' . $alias . '.mobile,' . $alias . '.email,' . $alias . '.address,' . $alias . '.principal,' . $alias . '.is_activated, ' . $alias . '.user_updated_id,' . $alias . '.updated_at, CONCAT(u.first_name, " ", u.last_name) AS updated_by' )
		->leftJoin ( $alias . '.UserUpdated u' );
		$query->leftJoin ( $alias . '.PsWard pw' );
		$query->leftJoin ( 'pw.PsDistrict d' );
		$query->leftJoin ( 'd.PsProvince p' );

		if (! myUser::credentialPsCustomers ( 'PS_SYSTEM_WORK_PLACES_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0) {
			$query->addWhere ( $alias . '.id = ?', myUser::getPscustomerID () );
			$query->orWhere ( $alias . '.user_updated_id = ?', myUser::getUserId () );
			$query->orWhere ( $alias . '.user_created_id = ?', myUser::getUserId () );
		}
		
		if (! myUser::isAdministrator()) {
			$query->addWhere ( $alias . '.is_root != ?', PreSchool::ACTIVE );
		}
		return $query;

	}

	/**
	 * FUNCTION: setCustomersByPsWardId($ps_ward_id)
	 *
	 * @param $ps_ward_id -
	 *        	int
	 *        	
	 * @return list obj
	 */
	public function setCustomersByPsWardId($ps_ward_id = null, $is_activated = null) {

		$q = $this->createQuery ()->select ( 'id, CONCAT(school_code, "-", school_name) AS name' );

		if ($ps_ward_id > 0)
			$q->where ( 'ps_ward_id = ?', $ps_ward_id );

		if ($is_activated != null & $is_activated >= 0)
			$q->where ( 'is_activated = ?', $is_activated );

		$q->orderBy ( 'iorder' );

		return $q;

	}

	/**
	 * FUNCTION: getCustomersByPsWardId($ps_ward_id)
	 *
	 * @param $ps_ward_id -
	 *        	int
	 *        	
	 * @return list obj
	 */
	public function getCustomersByPsWardId($ps_ward_id = null, $is_activated = null) {

		return $this->setCustomersByPsWardId ( $ps_ward_id, $is_activated )->execute ();

	}

	public function getCustomerById($customer_id) {

		$query = $this->createQuery ( 'c' );
		$query->select ( 'c.id AS id,' . 'c.school_code AS school_code,' . 'c.school_name AS school_name,' . 'c.title AS title,' . 'c.logo AS logo,' . 'CONCAT(c.year_data, "/", c.logo)  AS path,' . 'c.address AS address,' . 'c.tel AS tel,' . 'c.mobile AS mobile,' . 'c.fax AS fax,' . 'c.email AS email,' . 'c.url AS url,' . 'c.principal AS principal,' . 'ts.title AS type_school,' . 'c.is_activated AS is_activated,' . 'c.description AS description,' . 'c.created_at AS created_at,' . 'c.updated_at AS updated_at,' . 'CONCAT(uc.first_name, " ", uc.last_name) AS created_by,' . 'CONCAT(ud.first_name, " ", ud.last_name) AS updated_by' );

		$query->leftJoin ( 'c.UserCreated AS uc' );
		$query->leftJoin ( 'c.UserUpdated AS ud' );
		$query->leftJoin ( 'c.PsTypeSchool AS ts' );
		$query->addWhere ( 'c.id = ?', $customer_id );

		return $query->fetchOne ();

	}

	public function getChoisCustomer($is_activated = 1, $cId = null) {

		$chois = array ();

		foreach ( $this->getCustomers ( $is_activated, $cId ) as $obj ) {
			$chois [$obj->getId ()] = $obj->getTitle ();
		}
		
		return $chois;
	}

	/**
	 * Lay danh sach truong hoc duoc quan ly
	 */
	public function setSQLPsCustomerAccess($is_deploy = null) {

		$query = $this->createQuery ( 'c' );
		$query->select ( 'c.id AS id,CONCAT(c.school_name, "-", p.name) AS title' );
		$query->innerJoin ( 'c.PsWard pw' );
		$query->innerJoin ( 'pw.PsDistrict d' );
		$query->innerJoin ( 'd.PsProvince p' );

		if (strlen ( $is_deploy ) > 0) {
			$query->addWhere ( 'c.is_deploy = ?', $is_deploy );
		}

		return $query;

	}

	/**
	 * * Lay Don vi goc
	 */
	public function getCustomerRootById($customer_id = null) {

		$query = $this->createQuery ( 'c' );
		$query->select ( 'c.id AS id,' . 'c.school_name AS name','c.school_code AS school_code' );
		$query->addWhere ( 'c.is_root = ?', PreSchool::ACTIVE );

		if ($customer_id > 0)
			$query->addWhere ( 'c.id = ?', $customer_id );

		return $query->fetchOne ();

	}

	/**
	 * * Lay thong tin don vi goc, co so goc
	 */
	public function getInfoRootById($customer_id = null) {

		$query = $this->createQuery ( 'c' );
		$query->select ( 'c.id AS id,' . 'c.school_name AS name, wp.id AS ps_workplace_id' );
		$query->innerJoin ( 'c.PsWorkPlaces wp' );
		$query->addWhere ( 'c.is_root = ?', PreSchool::ACTIVE );

		if ($customer_id > 0)
			$query->addWhere ( 'c.id = ?', $customer_id );

		return $query->fetchOne ();

	}

	/**
	 * SQL lay danh sach truong hoc
	 *
	 * @param	$params
	 *        	
	 * @return string
	**/
	public function setSQLPsCustomerByParams($params = array()) {

		$query = $this->createQuery ( 'c' );
		$query->select ( 'c.id AS id,CONCAT(c.school_name, "-", p.name) AS title' );
		
		$query->innerJoin ( 'c.PsWard pw' );
		$query->innerJoin ( 'pw.PsDistrict d' );
		$query->innerJoin ( 'd.PsProvince p' );
		
		$query->addWhere ( 'c.is_root = ?', PreSchool::NOT_ACTIVE );
		$query->addWhere ( 'c.is_deploy = ?', PreSchool::ACTIVE );
		$query->addWhere ( 'c.is_activated = ?', PreSchool::ACTIVE );
		
		if (isset($params['ps_customer_id']) && $params['ps_customer_id'] > 0) {
			$query->addWhere ( 'c.id = ?', $params['ps_customer_id'] );
		}
		
		if (isset($params['ps_province_id']) && $params['ps_province_id'] > 0) {
			$query->addWhere ( 'p.id = ?', $params['ps_province_id'] );
		}
		
		if (isset($params['ps_district_id']) && $params['ps_district_id'] > 0) {
			$query->addWhere ( 'd.id = ?', $params['ps_district_id'] );
		}
		
		$query->orderBy ( 'p.iorder,c.iorder' );

		return $query;

	}
	
	/**
	 * SQL lay danh sach truong hoc dÆ¡n gian khong  join den cac table
	 *
	 * @param	$params
	 *
	 * @return string
	 **/
	public function setSQLShortPsCustomerByParams() {
		
		$query = $this->createQuery ( 'c' );
		$query->select ( 'c.id AS id,CONCAT(c.school_name, "-", p.name) AS title' );
		$query->addWhere ( 'c.is_root = ?', PreSchool::NOT_ACTIVE );
		$query->addWhere ( 'c.is_deploy = ?', PreSchool::ACTIVE );
		$query->addWhere ( 'c.is_activated = ?', PreSchool::ACTIVE );		
		$query->orderBy ( 'c.school_name' );		
		return $query;		
	}
	
	/**
	* Lay mang danh sach truong
	**/
	public function getChoisCustomerByParams($params = array()) {
		
		$chois = array ();
		
		foreach ( $this->setSQLPsCustomerByParams ($params)->execute() as $obj ) {
			$chois [$obj->getId ()] = $obj->getTitle ();
		}
		
		return $chois;
	}
	
	/**
	 * Lay Column cua table
	 * @author Nguyen Chien Thang
	 *
	 * @param $work_place_id int
	 *
	 * @return mixed
	 */
	public function getColumnById($ps_key_id,$getField = null) {
		
		$query = $this->createQuery ()->select ( $getField != '' ? $getField : '*' )->where ('id = ?', $ps_key_id );
		
		return $query->fetchOne ();
	}

}