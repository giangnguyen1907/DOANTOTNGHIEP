<?php
/**
 * PsCmsArticlesTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PsCmsArticlesTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object PsCmsArticlesTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'PsCmsArticles' );
	}

	/**
	 * SQL Lay danh sach tin bai*
	**/
	public function doSelectQuery(Doctrine_Query $query) {

		$a = $query->getRootAlias ();

		$query->select (
				$a . '.id AS id, ' . 
				$a . '.title AS title, ' .
				$a . '.note AS note, ' .
				$a . '.file_name AS file_name, ' .				
				$a . '.is_publish AS is_publish, '.
				$a . '.is_access AS is_access, '.
				$a . '.is_global AS is_global, ' .
				$a . '.user_updated_id AS user_updated_id, ' .
				$a . '.updated_at AS updated_at,' .
				$a . '.created_at AS created_at,' .
				$a . '.ps_customer_id AS ps_customer_id,CONCAT(u.first_name, " ", u.last_name) AS updated_by, CONCAT(uc.first_name, " ", uc.last_name) AS created_by, cus.title as school_name,'. 'wp.title as wp_title' );

		$query->innerJoin($a . '.PsCustomer cus' );
		
		$query->leftJoin ( $a . '.PsWorkPlaces wp' );
		
		$query->leftJoin ( $a . '.UserCreated uc' );

		$query->leftJoin ( $a . '.UserUpdated u' );
		
		/**
		if (!myUser::credentialPsCustomers('PS_CMS_ARTICLE_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0) {
			$query->addWhere ($a . '.ps_customer_id = ?', myUser::getPscustomerID () );
		}
		**/

		return $query;
	}

	/**
	 * Lấy bài viết theo id
	 *
	 * @param
	 *        	$article_id
	 * @return object
	 */
	public function getArticleById($article_id) {

		$query = $this->createQuery ( 'a' );
		$query->select ( 'a.id AS id,' . 'a.title AS title,' . 'a.description AS description,' . 'a.note AS note,' . 'a.file_name AS file_name,' . 'a.is_publish AS is_publish,' . 'a.created_at AS created_at,' . 'a.updated_at AS updated_at,' . 'CONCAT(uc.first_name, " ", uc.last_name) AS created_by,' . 'CONCAT(ud.first_name, " ", ud.last_name) AS updated_by,
		cus.id AS ps_customer_id, cus.title AS school_name, wp.title AS wp_title' );
		$query->leftJoin ( 'a.PsCustomer AS cus' );
		$query->leftJoin ( 'a.PsWorkPlaces AS wp' );
		$query->leftJoin ( 'a.UserCreated AS uc' );
		$query->leftJoin ( 'a.UserUpdated AS ud' );
		$query->addWhere ( 'a.id = ?', $article_id );

		return $query->fetchOne ();
	}

	/**
	 * Lấy danh sách bài viết với nhất theo trường(nếu có)
	 *
	 * @param int $number
	 *        	số bài viết
	 * @param int $customer_id
	 *        	mã trường
	 * @return object - danh sách bài viết
	 */
	public function getNewestArticles($number, $customer_id = null) {

		$query = $this->createQuery ( 'a' );

		$query->select ( 'a.id AS id,' . 'a.title AS title,' . 'a.description AS description,' . 'a.note AS note,' . 'a.file_name AS file_name,' . 'a.is_publish AS is_publish,' . 'a.created_at AS created_at,' . 'a.updated_at AS updated_at,' . 'CONCAT(uc.first_name, " ", uc.last_name) AS created_by,' . 'CONCAT(ud.first_name, " ", ud.last_name) AS updated_by' );

		$query->leftJoin ( 'a.UserCreated AS uc' );

		$query->leftJoin ( 'a.UserUpdated AS ud' );

		$query->addWhere ( 'a.is_publish = ?', PreSchool::PUBLISH );

		$query->addWhere ( 'a.is_access = ?', PreSchool::ACTIVE );

		$query->andWhere ( 'a.ps_customer_id = ?', $customer_id );

		$query->addOrderBy ( 'a.created_at DESC' );

		$query->limit ( $number );

		return $query->execute ();
	}
	
	/**
	 * Lấy so luong bai viet duoc tao trong ngay
	 *
	 * 
	 * @param $ps_customer_id ,$ps_workplace_id, $date_at
	 * 
	 * @return object - danh sách bài viết
	 */
	public function getNumberArticles($ps_customer_id, $ps_workplace_id, $date_at, $option = null, $class_id = null) {
		
		$date_at = $date_at ? date('Ymd',strtotime($date_at)) : date('Ymd');
		
		$date_at2 = $date_at ? date('Ym',strtotime($date_at)) : date('Ym');
		
		$query = $this->createQuery ( 'a' );
		
		$query->select ( 'a.id AS id,a.updated_at AS updated_at, ac.ps_class_id AS ps_class_id');
		
		$query->leftJoin('a.PsCmsArticlesClass ac');
		
		$query->addWhere ( 'a.ps_customer_id = ?', $ps_customer_id );
		
		$query->andWhere ( 'a.ps_workplace_id IS NULL OR a.ps_workplace_id = ?', $ps_workplace_id );
		
		if($option == 1){
			$query->andWhere ( 'DATE_FORMAT(a.updated_at,"%Y%m%d") = ?', $date_at );
		}else{
			$query->andWhere ( 'DATE_FORMAT(a.updated_at,"%Y%m") = ?', $date_at2 );
		}
		
		if($class_id > 0){
			$query->addWhere ( 'ac.id IS NULL OR ac.ps_class_id = ?', $class_id );
		}
		
		return $query->execute ();
		
	}
}