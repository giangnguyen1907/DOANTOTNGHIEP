<?php
/**
 * ReceivableTempTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ReceivableTempTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object ReceivableTempTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'ReceivableTemp' );
	}

	public function doSelectQuery(Doctrine_Query $query) {

		$a = $query->getRootAlias ();

		$query->select ( $a . '.id AS id, ' . $a . '.amount AS amount, ' . $a . '.note AS note, ' . $a . '.receivable_at AS receivable_at, ' . $a . '.ps_myclass_id AS ps_myclass_id, ' . 'mc.name AS class_name, re.title AS re_title' );

		$query->addSelect ( 'CONCAT(u.first_name, " ", u.last_name) AS updated_by' );

		$query->leftJoin ( $a . '.UserUpdated u' );

		$query->leftJoin ( $a . '.Receivable re' );

		$query->leftJoin ( $a . '.MyClass mc' );

		if (! myUser::credentialPsCustomers ( 'PS_FEE_RECEIVABLE_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0) {
			$query->addWhere ( 're.ps_customer_id = ?', myUser::getPscustomerID () );
		}

		return $query;
	}

	/**
	 * Lay ra cac khoan thu khac cua thang duoc chon va chua duoc luu trong receivable_student cua thang duoc chon
	 *
	 * @version 2.0
	 */
	public function getByDateForBatchFee($student_id, $ps_customer_id, $ps_workplace_id = null, $ps_myclass_id = null, $date = '') {

		$date_at = date ( 'Ymd', $date );

		$query = $this->createQuery ( 'rt' )
			->select ( 'rt.id, r.title AS title, rt.amount AS amount, rt.note AS note, rt.receivable_id AS receivable_id' );

		$query->leftjoin ( 'rt.Receivable r WITH rt.receivable_id = r.id' );

		$query->leftjoin ( "r.ReceivableStudent rs WITH rs.student_id = ? AND DATE_FORMAT(rs.receivable_at,'%Y%m')=?", array (
				$student_id,
				date ( 'Ym', $date ) ) );

		$query->leftjoin ( 'rs.Student s' );

		$query->leftJoin ( 's.StudentClass sc With (rt.ps_myclass_id = sc.myclass_id AND DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND (sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array (
				$date_at,
				$date_at ) );

		// $query->leftJoin('sc.MyClass mc WITH mc.id = rt.ps_myclass_id');

		$query->leftJoin ( 'r.PsSchoolYear y WITH (DATE_FORMAT(y.from_date, "%Y%m%d") <= ? AND DATE_FORMAT(y.to_date,"%Y%m%d") >= ?)', array (
				$date_at,
				$date_at ) );

		$query->where ( "rs.id IS NULL AND DATE_FORMAT(rt.receivable_at,'%Y%m')=? ", array (
				date ( 'Ym', $date ) ) );

		if ($ps_customer_id > 0) {
			$query->andWhere ( 'r.ps_customer_id = ?', $ps_customer_id );
		}

		if ($ps_workplace_id > 0) {
			$query->andWhere ( 'r.ps_workplace_id IS NULL OR r.ps_workplace_id = ?', $ps_workplace_id );
		} else {
			$query->andWhere ( 'r.ps_workplace_id IS NULL' );
		}

		if ($ps_myclass_id > 0) {
			$query->andWhere ( 'rt.ps_myclass_id IS NULL OR rt.ps_myclass_id = ?', $ps_myclass_id );
		} else {
			$query->andWhere ( 'rt.ps_myclass_id IS NULL' );
		}

		// echo 'ps_workplace_id:'.$ps_workplace_id.'ps_myclass_id:'.$ps_myclass_id;

		return $query->execute ();
	}

	/**
	 * Lay chi tiet 1 khoan phai thu cua 1 lop theo thang
	 *
	 * @author Nguyen Chien Thang
	 *        
	 * @param array $params;
	 *        	$params ['receivable_at'] - inttime
	 * @return $list
	 */
	public function getReceivableTempOfClass($params) {

		$query = $this->createQuery ( 'rt' )
			->select ( 'rt.*, r.id AS r_id' );

		$query->innerJoin ( "rt.Receivable r WITH DATE_FORMAT(rt.receivable_at,'%Y%m')=? AND rt.ps_myclass_id = ?", array (
				date ( 'Ym', $params ['receivable_at'] ),
				$params ['ps_myclass_id'] ) );

		$query->where ( 'rt.receivable_id = ?', $params ['receivable_id'] );

		return $query->fetchOne ();
	}

	// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->

	/**
	 * Lay cac khoan co trong ReceivableTemp
	 */
	public function getByDate($date = '') {

		$q = $this->createQuery ( 'c' )
			->select ( 'c.id, r.title AS title, c.amount AS amount, c.note AS note, c.receivable_id AS receivable_id' )
			->leftjoin ( 'c.Receivable r WITH c.receivable_id = r.id' )
			->where ( "DATE_FORMAT(c.receivable_at,'%m%Y')=?", array (
				date ( 'mY', $date ) ) );

		return $q->execute ();
	}

	/**
	 * Lay so da dung
	 *
	 * @author thangnc
	 *        
	 * @param
	 *        	$receivable_id
	 * @return int
	 */
	public function getCountReceivableTempOfReceivableId($receivable_id) {

		return $this->createQuery ( 'a' )
			->select ( 'a.id' )
			->addWhere ( 'a.receivable_id = ?', $receivable_id )
			->count ();
	}
}