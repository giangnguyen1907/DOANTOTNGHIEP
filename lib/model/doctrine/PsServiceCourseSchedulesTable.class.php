<?php

/**
 * PsServiceCourseSchedulesTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PsServiceCourseSchedulesTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object PsServiceCourseSchedulesTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'PsServiceCourseSchedules' );
	}

	/**
	 * Lay danh sach thoi khoa bieu theo tuan
	 *
	 * @author Pham Van Thien
	 * @param
	 *        	date_from, date_to
	 * @return Obj
	 */
	public function getListCourseSchedulesWeek($date_from, $date_to, $ps_customer_id, $ps_service_id = null, $ps_service_course_id = null, $ps_class_room_id = null, $ps_member_id = null, $ps_workplace_id = null) {

		$q = $this->createQuery ( 'cs' )
			->select ( 'cs.id as id, cs.date_at,
            cs.start_time_at, cs.end_time_at, sc.id as courses_id,
            sc.title as courses_title, cr.id as class_room_id,
            cr.title as class_room_title, s.ps_customer_id as ps_customer_id, cs.is_activated,
            cs.note as note, s.title as service_title' );

		$q->addSelect ( 'CONCAT(m.first_name, " ", m.last_name) AS teacher' );

		$q->leftJoin ( 'cs.PsServiceCourses sc' );

		$q->leftJoin ( 'sc.PsService s' );

		$q->leftJoin ( 'sc.PsMember m' );

		$q->where ( 'DATE_FORMAT(cs.date_at,"%Y%m%d") <= ? AND  DATE_FORMAT(cs.date_at,"%Y%m%d") >= ? AND s.ps_customer_id = ?', array (
				date ( 'Ymd', strtotime ( $date_to ) ),
				date ( 'Ymd', strtotime ( $date_from ) ),
				$ps_customer_id ) );

		if ($ps_service_id > 0)
			$q->addWhere ( 'sc.ps_service_id =?', $ps_service_id );

		if ($ps_service_course_id > 0)
			$q->addWhere ( 'cs.ps_service_course_id =?', $ps_service_course_id );

		if ($ps_class_room_id > 0)
			$q->addWhere ( 'cs.ps_class_room_id =?', $ps_class_room_id );
		elseif ($ps_workplace_id > 0) {
			$q->innerJoin ( 'cs.PsClassRooms rom With rom.ps_workplace_id = ?', $ps_workplace_id );
		}

		if ($ps_member_id > 0)
			$q->addWhere ( 'sc.ps_member_id =?', $ps_member_id );

		$q->leftJoin ( 'cs.PsClassRooms cr' );

		$q->orderBy ( 'cs.start_time_at' );

		return $q->execute ();
	}

	public function checkListSchedulesWeek($date_from, $date_to, $ps_customer_id) {

		$q = $this->createQuery ( 'cs' )
			->select ( 'cs.id' );

		$q->leftJoin ( 'cs.PsServiceCourses sc' );
		$q->leftJoin ( 'sc.PsService s' );
		$q->where ( 'DATE_FORMAT(cs.date_at,"%Y%m%d") <= ? AND  DATE_FORMAT(cs.date_at,"%Y%m%d") >= ? AND s.ps_customer_id = ?', array (
				date ( 'Ymd', strtotime ( $date_to ) ),
				date ( 'Ymd', strtotime ( $date_from ) ),
				$ps_customer_id ) );

		$q->execute ();
		if (count ( $q ) > 0)
			return false;
		else
			return true;
	}

	/**
	 * SQL lay lich hoc cua 1 khoa khoa hoc $ps_service_course_id theo ngay
	 * Pham van thien
	 *
	 * @param $ps_service_course_id int
	 * @param $tracked_at date
	 *        	format yyyy-mm-dd
	 *        	
	 */
	public function setPsServiceCourseSchedulesByPsServiceCourse($ps_service_course_id, $tracked_at) {

		$q = $this->createQuery ( 's' )
			->select ( 's.id as id' );

		$q->addSelect ( 'CONCAT(s.start_time_at, "-", s.end_time_at) AS title' );

		$q->addWhere ( 's.ps_service_course_id = ?', $ps_service_course_id );

		$q->addwhere ( 'DATE_FORMAT(s.date_at,"%Y%m%d") = ?', date ( 'Ymd', strtotime ( $tracked_at ) ) );

		return $q;
	}

	// SQL lay tat ca lich cua 1 khoa hoc
	public function setSqlCourseScheduleById($courses_schedule_id) {

		$query = $this->createQuery ( 's' );

		$query->select ( 's.id AS id, ' . 'CONCAT(sc.title,": " ,s.start_time_at, " - ", s.end_time_at) AS name ' );

		$query->innerJoin ( 's.PsServiceCourses sc' );

		$query->addWhere ( 's.id = ?', $courses_schedule_id )
			->orderBy ( 's.start_time_at' );

		return $query;
	}
}