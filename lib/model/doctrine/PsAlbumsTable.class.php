<?php
use phpDocumentor\Reflection\Types\Object_;

/**
 * PsAlbumsTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PsAlbumsTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object PsAlbumsTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'PsAlbums' );
	}

	/**
	 * SQL lay danh sach album
	 */
	public function doSelectQuery(Doctrine_Query $query) {

		$a = $query->getRootAlias ();

		$query->select ( $a . '.id AS id,' . $a . '.ps_customer_id AS ps_customer_id,' . $a . '.title AS title,' . $a . '.is_activated AS is_activated,' . $a . '.note AS note,' . $a . '.number_img AS number_img,' . $a . '.ps_class_id AS ps_class_id,' . $a . '.number_view AS number_view,' . $a . '.number_like AS number_like,' . $a . '.number_dislike AS number_dislike,' . $a . '.ps_service_course_schedule_id AS cs_id,' . $a . '.user_created_id AS user_created_id,' . $a . '.user_updated_id AS user_updated_id,' . $a . '.created_at AS created_at,' . $a . '.updated_at AS updated_at' );
		//$query->select ($a.'.*');
		$query->addSelect('cus.id as cus_id,cus.title as school_name,mc.id as myclass_id, wp.id as ps_workplace_id, wp.title as wp_title,mc.name AS mc_name,' . 'CONCAT(u.first_name, " ", u.last_name) AS updated_by,' . 'CONCAT(uc.first_name, " ", uc.last_name) AS creator_by, at.id as albums_item,at.url_thumbnail as url_thumbnail,at.url_file as url_file');
		
		$query->leftJoin ( $a . '.PsServiceCourseSchedules cs' );

		$query->leftJoin ( $a . '.MyClass mc' );
		
		$query->leftJoin ( $a . '.PsAlbumItems at' );
		
		$query->leftJoin('mc.PsCustomer cus');
		
		$query->leftJoin('mc.PsWorkPlaces wp');

		$query->leftJoin ( $a . '.UserCreated uc' );

		$query->leftJoin ( $a . '.UserUpdated u' );

		if (! myUser::credentialPsCustomers ( 'PS_CMS_ALBUMS_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0) {

			$query->addWhere ( $a . '.ps_customer_id = 0 or ' . $a . '.ps_customer_id = ?', myUser::getPscustomerID () );
		}

		$query->addOrderBy ( $a.'.created_at DESC','at.created_at DESC' );

		return $query;
	}

	/**
	 * Lay album theo class_id
	 *
	 * @param
	 *        	$class_id
	 * @return Object
	 */
	public function getAlbumsByClassId($class_id) {

		$query = $this->createQuery ( 'a' );

		$query->select ( 'a.id AS id,' . 'a.ps_customer_id AS ps_customer_id,' . 'a.title AS title' . 'a.note AS note,' . 'a.number_img AS number_img,' . 'a.number_like AS number_like,' . 'a.number_dislike AS number_dislike,' . 'a.ps_service_course_schedule_id AS cs_id,' . 'a.user_updated_id AS user_updated_id,' . 'a.updated_at AS updated_at,' . 'CONCAT(u.first_name, " ", u.last_name) AS updated_by,' . 'CONCAT(uc.first_name, " ", uc.last_name) AS creator_by,' );

		$query->leftJoin ( 'a.PsServiceCourseSchedules cs' );

		$query->leftJoin ( 'cs.PsClassRooms cr' );

		$query->leftJoin ( 'cr.PsWorkPlaces wp' );

		$query->leftJoin ( 'wp.PsCustomer cus' );

		$query->leftJoin ( 'a.UserCreated uc' );

		$query->leftJoin ( 'a.UserUpdated u' );

		$query->addWhere ( 'a.ps_customer_id =?', $class_id );

		return $query->fetchOne ();
	}

	/**
	 * Lay album theo id
	 *
	 * @param $class_id
	 * @return Object
	 */
	public function getAlbumsById($id) {

		$query = $this->createQuery ( 'a' );

		$query->select ( 'a.*');
		
		$query->addSelect ( 'CONCAT(u.first_name, " ", u.last_name) AS updated_by,' . 'CONCAT(uc.first_name, " ", uc.last_name) AS creator_by,cus.title as school_name, wp.title as wp_title,wp.id as ps_workplace_id, mc.id as mc_id, mc.name as class_name,cus.id AS ps_customer_id' );

		$query->leftJoin ( 'a.PsServiceCourseSchedules cs' );

		$query->innerJoin ( 'a.MyClass mc' );
		
		$query->innerJoin ( 'mc.PsWorkPlaces wp' );

		$query->innerJoin( 'mc.PsCustomer cus' );

		$query->leftJoin ( 'a.UserCreated uc' );

		$query->leftJoin ( 'a.UserUpdated u' );

		$query->addWhere ( 'a.id =?', $id );

		return $query->fetchOne ();
	}
	
	/**
	 * Dem xem co bao nhieu album trong co so duoc tao trong ngay
	 *
	 * @param
	 *        	$ps_customer_id, $ps_workplace_id , $date_at
	 * @return Object
	 */
	public function getNumberAlbumsCreatedByWorkplaceId($ps_workplace_id,$date_at,$option = null,$class_id = null) {
		
		$date_at = $date_at ? date('Ymd',strtotime($date_at)) : date('Ymd');
		
		$date_at2 = $date_at ? date('Ym',strtotime($date_at)) : date('Ym');
		
		$query = $this->createQuery ( 'a' );
		
		$query->select ( 'a.id AS id, a.number_img AS number_img, a.ps_class_id AS ps_class_id');
		
		$query->innerJoin ( 'a.MyClass mc' );
		
		$query->addWhere ( 'mc.ps_workplace_id =?', $ps_workplace_id );
		
		if($option == 1){
			$query->andWhere ( 'DATE_FORMAT(a.created_at,"%Y%m%d") = ?', $date_at );
		}else{
			$query->andWhere ( 'DATE_FORMAT(a.created_at,"%Y%m") = ?', $date_at2 );
		}
		
		if($class_id > 0){
			$query->addWhere ( 'mc.id =?', $class_id );
		}
		
		return $query->execute ();
	}
}