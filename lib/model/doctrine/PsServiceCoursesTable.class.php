<?php

/**
 * PsServiceCoursesTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PsServiceCoursesTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object PsServiceCoursesTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'PsServiceCourses' );
	}

	public function doSelectQuery(Doctrine_Query $query) {

		$a = $query->getRootAlias ();

		$query->select ( $a . '.id AS id, ' . $a . '.title AS course_title, ' . $a . '.ps_service_id AS ps_service_id, ' . $a . '.ps_member_id AS ps_member_id, ' . $a . '.start_at AS start_at, ' . $a . '.end_at AS end_at, ' . $a . '.note AS note, ' . $a . '.is_activated AS is_activated, ' . $a . '.user_updated_id AS user_updated_id, ' . $a . '.updated_at AS updated_at' );

		$query->addSelect ( 'CONCAT(u.first_name, " ", u.last_name) AS updated_by' );
		$query->addSelect ( 'CONCAT(m.first_name, " ", m.last_name) AS teacher' );
		$query->addSelect ( 's.title AS subjects_title' );
		$query->leftJoin ( $a . '.UserUpdated u' );
		$query->innerJoin ( $a . '.PsService s' );
		$query->innerJoin ( $a . '.PsMember m' );

		if (! myUser::credentialPsCustomers ( 'PS_STUDENT_SERVICE_COURSES_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0) {
			$query->where ( 's.ps_customer_id = ?', myUser::getPscustomerID () );
			$query->addWhere ( 'm.ps_customer_id = ?', myUser::getPscustomerID () );
		}

		return $query;
	}

	/**
	 * Lay cac khoa hoc theo $ps_service_id
	 *
	 * @param
	 *        	$ps_service_id
	 */
	public function getPsServiceCoursesByPsServiceId($ps_service_id) {

		$q = $this->createQuery ( 'sc' )
			->select ( 'sc.id AS id, ' . 'sc.title AS course_title, ' . 'sc.ps_service_id AS ps_service_id, ' . 'sc.ps_member_id AS ps_member_id, ' . 'sc.start_at AS start_at, ' . 'sc.end_at AS end_at, ' . 'sc.note AS note, ' . 'sc.is_activated AS is_activated, ' . 'sc.user_updated_id AS user_updated_id, ' . 'sc.updated_at AS updated_at' );

		$q->addSelect ( 'CONCAT(u.first_name, " ", u.last_name) AS updated_by' );
		$q->addSelect ( 'CONCAT(m.first_name, " ", m.last_name) AS teacher' );
		$q->addSelect ( 's.title AS subjects_title' );
		$q->leftJoin ( 'sc.UserUpdated u' );
		$q->innerJoin ( 'sc.PsService s' );
		$q->innerJoin ( 'sc.PsMember m' );
		$q->where ( 'sc.ps_service_id = ?', $ps_service_id );
		$q->addWhere ( 'sc.is_activated = ?', PreSchool::ACTIVE );

		return $q->execute ();
	}

	/**
	 * Lay cac khoa hoc theo ps_customer_id
	 * Pham van thien
	 *
	 * @param
	 *        	ps_customer_id
	 */
	public function setPsServiceCoursesByPsCustomer($getField = 'id, title', $psCustomerId = null, $is_activated = null) {

		$q = $this->createQuery ( 'sc' )
			->select ( $getField != '' ? $getField : '*' );

		$q->leftJoin ( 'sc.PsService s' );

		if ($psCustomerId > 0)
			$q->addWhere ( 's.ps_customer_id = ?', $psCustomerId );

		if ($is_activated > 0)
			$q->addWhere ( 'sc.is_activated = ?', $is_activated );

		$q->addOrderBy ( 'iorder' );

		return $q;
	}

	/**
	 * Lay cac khoa hoc theo ps_service_id
	 * Pham van thien
	 *
	 * @param
	 *        	ps_customer_id
	 */
	public function setPsServiceCoursesByPsService($getField = 'id, title', $ps_service_id = null, $is_activated = null) {

		$q = $this->createQuery ( 'sc' )
			->select ( $getField != '' ? $getField : '*' );

		if ($ps_service_id > 0)
			$q->addWhere ( 'sc.ps_service_id = ?', $ps_service_id );

		if ($is_activated > 0)
			$q->addWhere ( 'sc.is_activated = ?', $is_activated );

		return $q;
	}

	/**
	 * getNumberServiceCoursesByServiceId($service_id)
	 * Lay so luong khoa hoc cua mon hoc
	 *
	 * @author quanlymamnon.vn <contact@quanlymamnon.vn - ntsc279@gmail.com>
	 *        
	 * @param $service_id -
	 *        	int
	 * @return int
	 */
	public function getNumberServiceCoursesByServiceId($service_id) {

		$query = $this->createQuery ( 'a' )
			->where ( 'a.ps_service_id = ?', $service_id );
		return $query->count ();
	}

	/**
	 * getServiceCoursesByUserId($member_id)
	 * Lay cac khoa hoc cua 1 giao vien
	 *
	 * @author quanlymamnon.vn <contact@quanlymamnon.vn - ntsc279@gmail.com>
	 * @param $member_id -
	 *        	int
	 * @return $object
	 */
	public function getServiceCoursesByUserId($user_id, $ps_service_id = null) {

		$query = $this->createQuery ( 'a' )
			->select ( 'a.id, a.ps_service_id, a.title' );

		$query->innerJoin ( 'a.PsMember m' );

		$query->innerJoin ( 'm.sfGuardUser u With u.id = ? AND u.user_type = ?', array (
				$user_id,
				PreSchool::USER_TYPE_TEACHER ) );

		if ($ps_customer_id) {
			$query->addWhere ( 'a.ps_service_id = ?', $ps_service_id );
		}

		return $query->execute ();
	}

	/**
	 * Lấy chi thông tin chi tiết của khóa học
	 *
	 * @param int $service_courses_id
	 * @return @obj
	 */
	public function getServiceCoursesDetail($service_courses_id) {

		$query = $this->createQuery ( 'sc' );

		$query->select ( 'sc.id AS id,' . 'sc.title AS title,' . 'sc.ps_service_id AS ps_service_id,' . 'sc.start_at AS start_at,' . 'sc.end_at AS end_at,' . 'sc.note AS note,' . 'sc.is_activated AS is_activated,' . 'sc.created_at AS created_at,' . 'sc.updated_at AS updated_at,' . 'CONCAT(mb.first_name, " ", mb.last_name) as teacher_name,' . 'CONCAT(uc.first_name, " ", uc.last_name) as created_by,' . 'CONCAT(ud.first_name, " ", ud.last_name) as updated_by,' . 'sv.title AS service_title,' . 'sv.id AS ps_service' );

		$query->leftJoin ( 'sc.UserCreated uc' );

		$query->leftJoin ( 'sc.UserUpdated ud' );

		$query->innerJoin ( 'sc.PsService sv' );

		$query->innerJoin ( 'sc.PsMember mb' );

		$query->addWhere ( 'sc.id = ?', $service_courses_id );

		return $query->fetchOne ();
	}
}