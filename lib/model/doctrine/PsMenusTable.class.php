<?php

/**
 * PsMenusTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PsMenusTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object PsMenusTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'PsMenus' );
	}

	public function doSelectQuery(Doctrine_Query $query) {

		$a = $query->getRootAlias ();

		$query->select ( $a . '.id AS id_menu, ' . $a . '.note AS note, ' . $a . '.date_at AS date_at, ' . $a . '.ps_object_group_id AS ps_object_group_id, og.title AS object_group_title, ' . $a . '.ps_customer_id AS ps_customer_id, ' . 'cus.title AS customer_title, ' . $a . '.ps_food_id AS ps_food_id, F.title AS food_title, ' . $a . '.ps_meal_id AS ps_meal_id, M.title AS meal_title, ' . $a . '.user_updated_id AS user_updated_id, ' . $a . '.updated_at AS updated_at,' . 'CONCAT(u.first_name, " ", u.last_name) AS updated_by' );
		$query->leftJoin ( $a . '.PsCustomer cus' );
		$query->leftJoin ( $a . '.UserUpdated u' );
		$query->leftJoin ( $a . '.PsFoods F' );
		$query->leftJoin ( $a . '.PsMeals M' );
		$query->leftJoin ( $a . '.PsObjectGroups og' );

		if (! myUser::credentialPsCustomers ( 'PS_NUTRITION_MENUS_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0)
			$query->orWhere ( $a . '.ps_customer_id = ?', myUser::getPscustomerID () );
		else
			$query->orWhere ( '1=1' );

		return $query;
	}

	public function checkFood($ps_food_id) {

		$q = $this->createQuery ()
			->select ( 'id' );

		$q->where ( 'ps_food_id = ?', $ps_food_id );

		$records = $q->execute ();

		return count ( $records ) ? true : false;
	}

	public function checkMeal($ps_meal_id) {

		$q = $this->createQuery ()
			->select ( 'id' );

		$q->where ( 'ps_meal_id = ?', $ps_meal_id );

		$records = $q->execute ();

		return count ( $records ) ? true : false;
	}

	/**
	 * Lay danh sach thuc don theo tuan
	 *
	 * @author Pham Van Thien
	 *        
	 * @param
	 *        	date_from, date_to
	 * @return $Obj
	 */
	public function getListMenuWeek($date_from, $date_to, $ps_customer_id, $ps_object_group_id, $ps_workplace_id = null) {

		$q = $this->createQuery ( 'mn' )
			->select ( 'mn.id as id, mn.date_at, m.id as meal_id, m.title as meal_title, f.id as food_id, f.title as food_title,f.file_image as file_image, f.ps_image_id, I.file_name AS file_name, mn.ps_customer_id, mn.ps_object_group_id, mn.note' );

		$q->leftJoin ( 'mn.PsMeals m' );

		$q->where ( 'DATE_FORMAT(mn.date_at,"%Y%m%d") <= ? AND  DATE_FORMAT(mn.date_at,"%Y%m%d") >= ? AND mn.ps_customer_id = ?', array (
				date ( 'Ymd', strtotime ( $date_to ) ),
				date ( 'Ymd', strtotime ( $date_from ) ),
				$ps_customer_id ) );

		if ($ps_workplace_id > 0)
			$q->andWhere ( 'mn.ps_workplace_id = ?', $ps_workplace_id );

		$q->andWhere ( 'mn.ps_object_group_id = ?', $ps_object_group_id );

		$q->leftJoin ( 'mn.PsFoods f' );

		$q->leftJoin ( 'f.PsImages I' );

		return $q->execute ();
	}

	/**
	 * check menu co du lieu hay khong
	 *
	 * @author Pham Van Thien
	 * @uses: thangnc - edit
	 *
	 * @param
	 *        	date_from, date_to
	 * @return boolean
	 */
	public function checkListMenuWeek($date_from, $date_to, $ps_customer_id, $ps_object_group_id, $ps_workplace_id = null) {

		$q = $this->createQuery ()
			->select ( 'id' );

		$q->where ( 'DATE_FORMAT(date_at,"%Y%m%d") <= ? AND  DATE_FORMAT(date_at,"%Y%m%d") >= ?', array (
				date ( 'Ymd', strtotime ( $date_to ) ),
				date ( 'Ymd', strtotime ( $date_from ) ) ) );

		$q->andWhere ( 'ps_customer_id = ?', $ps_customer_id );

		if ($ps_workplace_id > 0)
			$q->andWhere ( 'ps_workplace_id = ?', $ps_workplace_id );

		$q->andWhere ( 'ps_object_group_id = ?', $ps_object_group_id );

		$count = $q->count ();

		return ($count > 0);
	}
}