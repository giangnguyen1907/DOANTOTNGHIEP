<?php

/**
 * BasesfGuardGroup
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ps_customer_id
 * @property string $name
 * @property string $description
 * @property integer $iorder
 * @property boolean $is_super_admin
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property Doctrine_Collection $Users
 * @property Doctrine_Collection $Permissions
 * @property PsCustomer $PsCustomer
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * @property Doctrine_Collection $sfGuardGroupPermission
 * @property Doctrine_Collection $sfGuardUserGroup
 * 
 * @method integer             getPsCustomerId()           Returns the current record's "ps_customer_id" value
 * @method string              getName()                   Returns the current record's "name" value
 * @method string              getDescription()            Returns the current record's "description" value
 * @method integer             getIorder()                 Returns the current record's "iorder" value
 * @method boolean             getIsSuperAdmin()           Returns the current record's "is_super_admin" value
 * @method integer             getUserCreatedId()          Returns the current record's "user_created_id" value
 * @method integer             getUserUpdatedId()          Returns the current record's "user_updated_id" value
 * @method Doctrine_Collection getUsers()                  Returns the current record's "Users" collection
 * @method Doctrine_Collection getPermissions()            Returns the current record's "Permissions" collection
 * @method PsCustomer          getPsCustomer()             Returns the current record's "PsCustomer" value
 * @method sfGuardUser         getUserCreated()            Returns the current record's "UserCreated" value
 * @method sfGuardUser         getUserUpdated()            Returns the current record's "UserUpdated" value
 * @method Doctrine_Collection getSfGuardGroupPermission() Returns the current record's "sfGuardGroupPermission" collection
 * @method Doctrine_Collection getSfGuardUserGroup()       Returns the current record's "sfGuardUserGroup" collection
 * @method sfGuardGroup        setPsCustomerId()           Sets the current record's "ps_customer_id" value
 * @method sfGuardGroup        setName()                   Sets the current record's "name" value
 * @method sfGuardGroup        setDescription()            Sets the current record's "description" value
 * @method sfGuardGroup        setIorder()                 Sets the current record's "iorder" value
 * @method sfGuardGroup        setIsSuperAdmin()           Sets the current record's "is_super_admin" value
 * @method sfGuardGroup        setUserCreatedId()          Sets the current record's "user_created_id" value
 * @method sfGuardGroup        setUserUpdatedId()          Sets the current record's "user_updated_id" value
 * @method sfGuardGroup        setUsers()                  Sets the current record's "Users" collection
 * @method sfGuardGroup        setPermissions()            Sets the current record's "Permissions" collection
 * @method sfGuardGroup        setPsCustomer()             Sets the current record's "PsCustomer" value
 * @method sfGuardGroup        setUserCreated()            Sets the current record's "UserCreated" value
 * @method sfGuardGroup        setUserUpdated()            Sets the current record's "UserUpdated" value
 * @method sfGuardGroup        setSfGuardGroupPermission() Sets the current record's "sfGuardGroupPermission" collection
 * @method sfGuardGroup        setSfGuardUserGroup()       Sets the current record's "sfGuardUserGroup" collection
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardGroup extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_group');
        $this->hasColumn('ps_customer_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('iorder', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('is_super_admin', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             ));


        $this->index('ps_customer_id_group_name_idx', array(
             'fields' => 
             array(
              0 => 'ps_customer_id',
              1 => 'name',
             ),
             'type' => 'unique',
             ));
        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardUser as Users', array(
             'refClass' => 'sfGuardUserGroup',
             'local' => 'group_id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardPermission as Permissions', array(
             'refClass' => 'sfGuardGroupPermission',
             'local' => 'group_id',
             'foreign' => 'permission_id'));

        $this->hasOne('PsCustomer', array(
             'local' => 'ps_customer_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $this->hasMany('sfGuardGroupPermission', array(
             'local' => 'id',
             'foreign' => 'group_id'));

        $this->hasMany('sfGuardUserGroup', array(
             'local' => 'id',
             'foreign' => 'group_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}