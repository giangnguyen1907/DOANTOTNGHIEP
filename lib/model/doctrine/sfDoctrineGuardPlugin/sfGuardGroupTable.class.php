<?php

/**
 * sfGuardGroupTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class sfGuardGroupTable extends PluginsfGuardGroupTable {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object sfGuardGroupTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'sfGuardGroup' );
	}

	/**
	 * FUNCTION: doSelectQuery(Doctrine_Query $query)
	 *
	 * @param
	 *        	Doctrine SQL
	 * @return string SQL
	 */
	public function doSelectQuery(Doctrine_Query $query) {

		$a = $query->getRootAlias ();

		$query->select ( $a . '.id AS id, ' . $a . '.ps_customer_id AS ps_customer_id, ' . $a . '.name AS name, ' . $a . '.description AS description, ' . $a . '.iorder AS iorder, ' . $a . '.updated_at AS updated_at,' . 'cus.title AS customer_title, ' . 'CONCAT(u.first_name, " ", u.last_name) AS updated_by' );

		$query->leftJoin ( $a . '.UserUpdated u' );
		$query->leftJoin ( $a . '.PsCustomer cus' );

		$query->where ( '1=1' );

		if (! myUser::credentialPsCustomers ( 'PS_SYSTEM_GROUP_USER_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0) {
			$query->where ( $a . '.ps_customer_id = ? OR ' . $a . '.ps_customer_id IS NULL', myUser::getPscustomerID () );
		}

		return $query;
	}

	// set SQL groups by ps_customer_id
	public function setSQLGroupsUserByCustomer($ps_customer_id) {

		$query = $this->createQuery ()
			->select ( 'id,name' );

		if ($ps_customer_id > 0)
			$query->addWhere ( 'ps_customer_id = ?', $ps_customer_id );
		else {
			$query->addWhere ( 'ps_customer_id = ?', - 1 );
		}

		$query->orderBy ( 'iorder, name' );

		return $query;
	}

	// get groups by ps_customer_id
	public function getGroupsUserByCustomer($ps_customer_id) {

		return $this->setSQLGroupsUserByCustomer ( $ps_customer_id )
			->execute ();
	}
}