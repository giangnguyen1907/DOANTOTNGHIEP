<?php

/**
 * sfGuardUserTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class sfGuardUserTable extends PluginsfGuardUserTable {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object sfGuardUserTable
	 */
	public static function getInstance() {
		return Doctrine_Core::getTable ( 'sfGuardUser' );
	}

	/**
	 * Retrieves a sfGuardUser object by username and is_active flag
	 *
	 * @param string $username
	 *        	The username
	 * @param boolean $isActive
	 *        	The user's status
	 * @return sfGuardUser
	 */
	public function checkLikeByUsername($username, $is_active = null) {

		// $query = $this->createQuery('u')->select('COUNT(u.id) AS number_user')->where('u.username = ?', $username);
		$query = $this->createQuery ( 'u' )->select ( 'COUNT(u.id) AS number_user' )->where ( " u.username LIKE ? ", $username . '%' );

		if ($is_active !== null)

			$query->addWhere ( 'u.is_active = ?', $is_active );

		return $query->fetchOne ();
	}
	public function checkUsernameExits($username, $user_id = null) {
		$query = $this->createQuery ()->select ( 'id' );

		if ($username != '')
			$query->where ( 'username = ?', $username );

		if ($user_id > 0)
			$query->andwhere ( 'id <> ?', $user_id );

		$records = $query->execute ();

		return count ( $records ) ? true : false;
	}

	/**
	 * FUNCTION: doSelectQuery(Doctrine_Query $query)
	 *
	 * @param
	 *        	Doctrine SQL
	 * @return string SQL
	 */
	public function doSelectQuery(Doctrine_Query $query) {
		$alias = 's'; // $query->getRootAlias();

		$query = $this->createQuery ( $alias );

		$query->addSelect ( $alias . '.id,' . $alias . '.member_id, ' . $alias . '.first_name, ' . $alias . '.last_name,' . $alias . '.username,' . $alias . '.user_type,' . $alias . '.updated_at,' . $alias . '.last_login,' . $alias . '.token_last_login,' . $alias . '.is_active,' . $alias . '.is_super_admin,' . $alias . '.email_address, ' . $alias . '.app_device_id, ' . $alias . '.api_token, ' . $alias . '.notification_token, ' . $alias . '.osname, ' . $alias . '.osvesion, ' . 'CONCAT(u.first_name, " ", u.last_name) AS updated_by, u.user_key AS user_key, ' . $alias . '.id AS user_id' );

		$query->leftJoin ( $alias . '.UserUpdated u' );

		$query->leftJoin ( $alias . '.PsCustomer cus' );

		$query->leftJoin ( 'cus.PsWard pw' );
		$query->leftJoin ( 'pw.PsDistrict d' );
		$query->leftJoin ( 'd.PsProvince p' );

		if (! myUser::credentialPsCustomers ( 'PS_SYSTEM_USER_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0)
			$query->addWhere ( $alias . '.ps_customer_id = ?', myUser::getPscustomerID () );

		if (myUser::getUser ()->getUserType () == PreSchool::USER_TYPE_MANAGER) {
		}

		return $query;
	}

	/**
	 * FUNCTION: loadUsers($ps_customer_id = null)
	 *
	 * @param
	 *        	int - $ps_customer_id, key of Table PsCustomer
	 * @return string $query - SQL
	 */
	public function loadUsersTeacher($ps_customer_id = null) {
		$alias = "gU";

		$query = $this->createQuery ( $alias );

		$query->addSelect ( $alias . '.id,' . $alias . '.member_id, ' . $alias . '.first_name, ' . $alias . '.last_name,' . $alias . '.username' );

		$query->where ( $alias . '.user_type =?', PreSchool::USER_TYPE_TEACHER );

		if ($ps_customer_id > 0) {

			$query->addWhere ( $alias . '.ps_customer_id = ?', $ps_customer_id );
		} else {
			$query->addWhere ( $alias . '.ps_customer_id = ?', - 1 );
		}

		$query->orderBy ( $alias . '.id' );

		return $query;
	}

	/**
	 * FUNCTION: getUsersSentNotification($user_type = null, $ps_customer_id = null, $_userId = null, $user_received_ids = null) Ham lay danh sach user de gui thong bao (Khong lay user đang thuc hien gui)
	 *
	 * @author thangnc
	 * @param
	 *        	Doctrine SQL
	 * @return string SQL
	 */
	public function getUsersSentNotification($user_type = null, $ps_customer_id = null, $_userId = null, $user_received_ids = null, $ps_workplace_id = null) {
		$date_at = date ( "Ymd" );

		$query = $this->createQuery ( 'u' )->select ( 'u.id,u.username, u.user_type as user_type,u.member_id as member_id,CONCAT(u.first_name," ", u.last_name) AS name, CONCAT(u.first_name," ", u.last_name) AS title ' );

		$query->addSelect ( 'u.notification_token AS notification_token, u.osname AS osname, u.osvesion AS osvesion, u.first_name AS first_name, u.last_name AS last_name, u.user_key' );

		$query->where ( 'u.is_active = ?', PreSchool::CUSTOMER_ACTIVATED );

		if ($user_type != null) {

			if ($user_type == PreSchool::USER_TYPE_TEACHER) { // Neu la nhan su

				$query->innerJoin ( "u.PsMember m With u.user_type= ?", PreSchool::USER_TYPE_TEACHER );

				if ($ps_workplace_id > 0) {

					$query->leftJoin ( "m.PsMemberDepartments md" );

					$query->leftJoin ( "md.PsDepartment de With de.ps_workplace_id = ? ", $ps_workplace_id );

					$query->addWhere ( '(md.id IS NOT NULL) OR (md.id IS NULL AND m.ps_workplace_id =?) ', $ps_workplace_id );
				}
			} elseif ($user_type == PreSchool::USER_TYPE_RELATIVE) {

				$query->innerJoin ( 'u.PsRelative r With r.deleted_at IS NULL' );

				$query->innerJoin ( 'r.RelativeStudent rs' );

				$query->innerJoin ( 'rs.Student s' );

				$query->innerJoin ( 's.StudentClass sc With (DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND (sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array (
						$date_at,
						$date_at
				) );

				$query->innerJoin ( 'sc.MyClass mc' );

				//$query->innerJoin ( 'mc.PsClassRooms cr' );

				$query->innerJoin ( 'mc.PsWorkPlaces wp' );

				if ($ps_workplace_id > 0) {
					$query->addWhere ( 'wp.id = ?', $ps_workplace_id );
				}

				$query->whereIn ( 'sc.type', array (
						PreSchool::SC_STATUS_TEST,
						PreSchool::SC_STATUS_OFFICIAL
				) );
			}

			$query->addWhere ( 'u.user_type = ?', $user_type );
		} else {

			$query->leftJoin ( "u.PsMember m With u.user_type= ?", PreSchool::USER_TYPE_TEACHER );

			$query->innerJoin ( 'u.PsRelative r With u.user_type = ?', PreSchool::USER_TYPE_RELATIVE );

			$query->innerJoin ( 'r.RelativeStudent rs' );

			$query->innerJoin ( 'rs.Student s' );

			$query->innerJoin ( 's.StudentClass sc With (DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND (sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array (
					$date_at,
					$date_at
			) );

			$query->innerJoin ( 'sc.MyClass mc' );

			//$query->innerJoin ( 'mc.PsClassRooms cr' );

			$query->innerJoin ( 'mc.PsWorkPlaces wp' );

			$query->addWhere ( 's.deleted_at IS NULL' );

			$query->whereIn ( 'sc.type', array (
					PreSchool::SC_STATUS_TEST,
					PreSchool::SC_STATUS_OFFICIAL
			) );

			if ($ps_workplace_id > 0) {
				$query->addWhere ( 'wp.id = ?', $ps_workplace_id );
			}
		}

		if ($ps_customer_id > 0) {

			$query->addWhere ( 'u.ps_customer_id = ?', $ps_customer_id );
		}

		if ($_userId > 0)
			$query->addWhere ( 'u.id != ?', $_userId );

		if (count ( $user_received_ids ) > 0)
			$query->andWhereIn ( 'u.id', $user_received_ids );

		$query->orderBy ( 'u.last_name,u.first_name' );

		return $query;
	}

	/**
	 * Lấy danh sách tổng tài khoản phụ huynh phục vụ đối soát tài khoản của phụ huynh
	 *
	 * @param array $param
	 * @param int $param['ps_customer_id']
	 * @param int $param['ps_workplace_id']
	 * @param date(Ymd) $param['from_date']
	 * @param date(Ymd) $param['to_date']
	 *        	@date_created: 1-11-2018 Tam NT
	 */
	public function getTotalRelativeAccountForCrossChecking($param, $id_arr = null) {
		$q = $this->createQuery ( 'u' );
		$q->select ( 'count(u.id) AS count, DATE_FORMAT(u.created_at,"%m-%Y") AS month' );
		if (isset ( $param ['ps_customer_id'] ) && $param ['ps_customer_id'] > 0) {
			$q->andWhere ( 'u.ps_customer_id=?', $param ['ps_customer_id'] );
		}

		$q->andWhere ( 'u.is_active !=?', PreSchool::CUSTOMER_NOT_ACTIVATED );

		$q->andWhere ( 'u.user_type =?', PreSchool::USER_TYPE_RELATIVE );

		if (isset ( $id_arr )) {

			$q->andWhereIn ( 'u.id', $id_arr );
		}

		$q->groupBy ( 'DATE_FORMAT(u.created_at,"%Y%m")' );

		$q->orderBy ( 'u.created_at ASC' );

		return $q->fetchArray ();
	}

	/**
	 * Lấy số lượng tài khoản phụ huynh khóa phục vụ đối soát tài khoản của phụ huynh
	 *
	 * @param array $param
	 * @param int $param['ps_customer_id']
	 * @param int $param['ps_workplace_id']
	 * @param date(Ymd) $param['from_date']
	 * @param date(Ymd) $param['to_date']
	 *        	@date_created: 1-11-2018 Tam NT
	 */
	public function getCountRelativeAccountLockedForCrossChecking($param, $id_arr = null) {
		$q = $this->createQuery ( 'u' );
		$q->select ( 'count(u.id) AS count' );
		if (isset ( $param ['ps_customer_id'] ) && $param ['ps_customer_id'] > 0) {
			$q->andWhere ( 'u.ps_customer_id=?', $param ['ps_customer_id'] );
		}

		$q->andWhere ( 'u.is_active =?', PreSchool::CUSTOMER_LOCK );

		$q->andWhere ( 'u.user_type =?', PreSchool::USER_TYPE_RELATIVE );

		if (isset ( $id_arr )) {

			$q->andWhereIn ( 'u.id', $id_arr );
		}

		// $q->groupBy('DATE_FORMAT(u.created_at,"%Y%m")');

		// $q->orderBy('u.created_at ASC');

		return $q->count ();
	}

	/**
	 * Phung Van Thanh gui thong bao cho toan truong
	 */
	public function getUsersSentNotificationByCustomer($ps_customer_id) {
		$date_at = date ( "Ymd" );

		$query = $this->createQuery ( 'u' )->select ( 'u.id,u.username, u.user_type as user_type,u.member_id as member_id,CONCAT(u.first_name," ", u.last_name) AS name, CONCAT(u.first_name," ", u.last_name) AS title ' );

		$query->addSelect ( 'u.notification_token AS notification_token, u.osname AS osname, u.osvesion AS osvesion, u.first_name AS first_name, u.last_name AS last_name, u.user_key' );

		$query->where ( 'u.is_active = ?', PreSchool::CUSTOMER_ACTIVATED );

		if ($ps_customer_id > 0) {

			$query->addWhere ( 'u.ps_customer_id = ?', $ps_customer_id );
		}

		$query->orderBy ( 'u.last_name,u.first_name' );

		return $query;
	}

	/**
	 * kiem tra xem phu huynh da co  
	 **/
	
	public function checkAccountRelative($member_id) {
		$date_at = date ( "Ymd" );
		
		$query = $this->createQuery ( 'u' ) ->select ( 'u.id,u.is_active,user_updated_id' );
		
		$query->addWhere ( 'u.user_type = ?', PreSchool::USER_TYPE_RELATIVE );
		
		$query->addWhere ( 'u.member_id = ?', $member_id );
		
		$query->orderBy ( 'u.last_name,u.first_name' );
		
		return $query->fetchOne();
	}
	
	/**
	 * Phung Van Thanh gui thong bao theo doi tuong la giao vien
	 */
	public function getUsersSentNotificationByTeacher($ps_customer_id = null, $ps_workplace_id = null, $user_id, $array_class_id = null) {
		
		$date_at = date ( "Ymd" );

		$query = $this->createQuery ( 'u' )->select ( 'u.id,u.username, u.user_type as user_type,u.member_id as member_id,CONCAT(u.first_name," ", u.last_name) AS name, CONCAT(u.first_name," ", u.last_name) AS title ' );

		$query->addSelect ( 'u.notification_token AS notification_token, u.osname AS osname, u.osvesion AS osvesion, u.first_name AS first_name, u.last_name AS last_name, u.user_key' );

		$query->where ( 'u.is_active = ?', PreSchool::CUSTOMER_ACTIVATED );

		//$query->leftJoin ( "u.PsMember m With u.user_type= ?", PreSchool::USER_TYPE_TEACHER );
		
		$query->innerJoin ( "u.PsMember m With u.user_type= ?", PreSchool::USER_TYPE_TEACHER );

		if ($ps_workplace_id > 0) {

			$query->leftJoin ( "m.PsMemberDepartments md" );

			$query->leftJoin ( "md.PsDepartment de With de.ps_workplace_id = ? ", $ps_workplace_id );

			$query->addWhere ( '(md.id IS NOT NULL) OR (md.id IS NULL AND m.ps_workplace_id =?) ', $ps_workplace_id );
		}

		if ($ps_customer_id > 0) {
			$query->addWhere ( 'u.ps_customer_id = ?', $ps_customer_id );
		}
		
		if(count($array_class_id) > 0){
			$query->innerJoin ( "m.PsTeacherClass tc");
			$query->whereIn('tc.ps_myclass_id', $array_class_id);
		}

		$query->addWhere ( 'u.id != ?', $user_id );

		$query->orderBy ( 'u.last_name,u.first_name' );

		return $query->execute ();
	}

	/**
	 * Phung Van Thanh
	 * gui thong bao theo doi tuong la phu huynh
	 */
	public function getUsersSentNotificationByRelative($ps_customer_id = null, $ps_workplace_id = null,$array_class_id = null) {
		
		$date_at = date ( "Ymd" );

		$query = $this->createQuery ( 'u' )->select ( 'u.id,u.username, u.user_type as user_type,u.member_id as member_id,CONCAT(u.first_name," ", u.last_name) AS name, CONCAT(u.first_name," ", u.last_name) AS title ' );

		$query->addSelect ( 'u.notification_token AS notification_token, u.osname AS osname, u.osvesion AS osvesion, u.first_name AS first_name, u.last_name AS last_name, u.user_key,s.id AS student_id, r.id as r_id, rs.id as rs_id' );

		$query->where ( 'u.is_active = ?', PreSchool::CUSTOMER_ACTIVATED );

		$query->innerJoin ( 'u.PsRelative r With u.user_type = ?', PreSchool::USER_TYPE_RELATIVE );

		$query->innerJoin ( 'r.RelativeStudent rs' );

		$query->innerJoin ( 'rs.Student s' );

		$query->innerJoin ( 's.StudentClass sc With (DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND (sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array (
				$date_at,
				$date_at
		) );

		$query->innerJoin ( 'sc.MyClass mc' );

		//$query->innerJoin ( 'mc.PsClassRooms cr' );

		$query->innerJoin ( 'mc.PsWorkPlaces wp' );

		if (isset($ps_workplace_id) && $ps_workplace_id > 0) {
			$query->addWhere ( 'wp.id = ?', $ps_workplace_id );
		}

		$query->whereIn ( 'sc.type', array (
				PreSchool::SC_STATUS_TEST,
				PreSchool::SC_STATUS_OFFICIAL
		) );

		if (isset($ps_customer_id) && $ps_customer_id > 0) {
			$query->addWhere ( 'u.ps_customer_id = ?', $ps_customer_id );
		}

		if(count($array_class_id) > 0){
			$query->andWhereIn('mc.id',$array_class_id);
		}
		
		$query->orderBy ( 'u.last_name,u.first_name' );

		return $query->execute ();
	}

	/**
	 * FUNCTION: getUsersRelativeSentNotification($ps_customer_id = null, $_userId = null, $class_id, $service_id)
	 * Ham lay danh sach user phu huynh de gui thong bao (Khong lay user đang thuc hien gui)
	 *
	 * @author thangnc
	 * @param
	 *        	Doctrine SQL
	 * @return string SQL
	 *        
	 */
	public function getUsersRelativeSentNotification($ps_customer_id = null, $_userId = null, $arr_myclass_id, $arr_service_id, $access_full = false, $ps_workplace_id = null) {
		$date_at = date ( "Ymd" );

		$query = $this->createQuery ( 'u' )->select ( 'u.id,u.username, CONCAT(u.first_name," ", u.last_name) AS name, CONCAT(u.first_name," ", u.last_name) AS title, u.notification_token AS notification_token, u.osname AS osname, u.osvesion AS osvesion' );

		$query->where ( 'u.is_active = ?', PreSchool::ACTIVE );

		$query->addWhere ( 'u.user_type = ?', PreSchool::USER_TYPE_RELATIVE );

		if ($ps_customer_id > 0) {

			$query->addWhere ( 'u.ps_customer_id = ?', $ps_customer_id );
		}

		if ($_userId > 0)
			$query->addWhere ( 'u.id != ?', $_userId );

		// $query->leftJoin('u.PsRelative r');

		$query->innerJoin ( 'u.PsRelative r' );
		$query->innerJoin ( 'r.RelativeStudent rs' );
		$query->innerJoin ( 'rs.Student s' );

		$query->innerJoin ( 's.StudentClass sc With (DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND (sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array (
				$date_at,
				$date_at
		) );

		$query->innerJoin ( 'sc.MyClass mc' );

		$query->innerJoin ( 'mc.PsClassRooms cr' );

		$query->innerJoin ( 'cr.PsWorkPlaces wp' );

		$query->leftJoin ( 's.StudentService ss' );

		$query->addWhere ( 's.deleted_at IS NULL' );

		$query->whereIn ( 'sc.type', array (
				PreSchool::SC_STATUS_TEST,
				PreSchool::SC_STATUS_OFFICIAL
		) );

		if (! $access_full) {

			$arr_myclass_id = ($arr_myclass_id) ? $arr_myclass_id : null;

			$arr_service_id = ($arr_service_id) ? $arr_service_id : null;

			$query->addWhere ( '(sc.myclass_id IN ? OR ss.service_id IN ?)', array (
					$arr_myclass_id,
					$arr_service_id
			) );
		}

		/*
		 * if ($ps_workplace_id > 0) {
		 * $query->addWhere('(r.ps_workplace_id = ? OR wp.id = ?)', array($ps_workplace_id,$ps_workplace_id));
		 * }
		 */

		if ($ps_workplace_id > 0) {
			$query->addWhere ( 'wp.id = ?', $ps_workplace_id );
		}

		$query->orderBy ( 'r.last_name,r.first_name' );

		return $query;
	}

	/**
	 * FUNCTION: doSelectQuery(Doctrine_Query $query)
	 *
	 * @param
	 *        	Doctrine SQL
	 * @return string SQL
	 */
	public function doUsesList($user_type = '', $ps_customer_id = null) {
		$query = $this->createQuery ()->select ( '*' );

		$query->where ( 'user_type = ?', $user_type );

		if ($ps_customer_id > 0) {
			$query->where ( 'ps_customer_id = ?', $ps_customer_id );
		}

		return $query;
	}

	/**
	 * Gui thong bao cho phu huynh theo $student_id
	 *
	 * @author PhungVanThanh
	 */
	public function getRelativeSentNotificationByStudent($ps_customer_id = null, $ps_class_id = null, $student_id) {
		$date_at = date ( "Ymd" );

		$query = $this->createQuery ( 'u' )->select ( 'u.id,u.username, u.user_type as user_type,u.member_id as member_id,CONCAT(u.first_name," ", u.last_name) AS name, CONCAT(u.first_name," ", u.last_name) AS title ' );

		$query->addSelect ( 'u.notification_token AS notification_token, u.osname AS osname, u.osvesion AS osvesion, u.first_name AS first_name, u.last_name AS last_name, u.user_key' );

		$query->addSelect ( 'CONCAT(s.first_name," ", s.last_name) AS student_name, s.id AS student_id, s.student_code AS student_code,rs.id AS rs_id, r.id AS r_id' );
		
		$query->addWhere ( 'u.is_active = ?', PreSchool::CUSTOMER_ACTIVATED );

		$query->addWhere ( 'u.user_type = ?', PreSchool::USER_TYPE_RELATIVE );

		$query->innerJoin ( 'u.PsRelative r With r.deleted_at IS NULL' );

		$query->leftJoin ( 'r.RelativeStudent rs' );

		$query->innerJoin ( 'rs.Student s' );

		$query->innerJoin ( 's.StudentClass sc With (DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND (sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array (
				$date_at,
				$date_at
		) );

		$query->innerJoin ( 'sc.MyClass mc' );

		$query->whereIn ( 'sc.type', array (
				PreSchool::SC_STATUS_TEST,
				PreSchool::SC_STATUS_OFFICIAL
		) );

		$query->addWhere ( 'rs.is_parent_main = 1' ); // quyen dua don chinh

		if ($ps_customer_id > 0) {
			$query->addWhere ( 'u.ps_customer_id = ?', $ps_customer_id );
		}
		
		if ($ps_class_id > 0) {
			$query->addWhere ( 'mc.id = ?', $ps_class_id );
		}
		
		// Moi them phan
		if(is_array($student_id)){ // Neu la mang
			$query->andWhereIn('s.id',$student_id);
		}else if ($student_id > 0) {
			$query->addWhere ( 's.id = ?', $student_id );
		}
		
		/*
		if ($student_id > 0) {
			$query->addWhere ( 's.id = ?', $student_id );
		}
		*/
		$query->orderBy ( 'u.last_name,u.first_name' );

		return $query->execute ();
	}

	/**
	 * Lay danh sach phu huynh nhan: Tin tuc; Album tu nha truong
	 *
	 * @author Nguyen Chien Thang
	 */
	public function getRelativeSentNotificationMsg($ps_customer_id = null, $ps_class_id = null, $student_id = null) {
		$date_at = date ( "Ymd" );

		$query = $this->createQuery ( 'u' )->select ( 'u.id,u.username, u.user_type as user_type,u.member_id as member_id,CONCAT(u.first_name," ", u.last_name) AS name, CONCAT(u.first_name," ", u.last_name) AS title ' );

		$query->addSelect ( 'u.notification_token AS notification_token, u.osname AS osname, u.osvesion AS osvesion, u.first_name AS first_name, u.last_name AS last_name, u.user_key' );

		$query->addWhere ( 'u.is_active = ?', PreSchool::CUSTOMER_ACTIVATED );

		$query->addWhere ( 'u.user_type = ?', PreSchool::USER_TYPE_RELATIVE );

		$query->innerJoin ( 'u.PsRelative r With r.deleted_at IS NULL' );

		$query->innerJoin ( 'r.RelativeStudent rs' );

		$query->innerJoin ( 'rs.Student s' );

		$query->innerJoin ( 's.StudentClass sc With sc.is_activated = ?', array (
				PreSchool::ACTIVE
		) );

		$query->innerJoin ( 'sc.MyClass mc' );

		$query->whereIn ( 'sc.type', array (
				PreSchool::SC_STATUS_TEST,
				PreSchool::SC_STATUS_OFFICIAL
		) );

		if ($ps_customer_id > 0) {
			$query->addWhere ( 'u.ps_customer_id = ?', $ps_customer_id );
		}

		if ($ps_class_id > 0) {
			$query->addWhere ( 'mc.id = ?', $ps_class_id );
		}

		if ($student_id > 0) {
			$query->addWhere ( 's.id = ?', $student_id );
		}

		$query->orderBy ( 'u.last_name,u.first_name' );

		return $query->execute ();
	}

	/**
	 * Xoa bo ham nay
	 * Gui thong bao cho phu huynh theo id phu huynh
	 *
	 * @author PhungVanThanh
	 */
	public function getRelativeSentNotification($ps_customer_id = null, $ps_workplace_id = null, $ps_class_id = null, $relative_ids = null) {
		$date_at = date ( "Ymd" );

		$query = $this->createQuery ( 'u' )->select ( 'u.id,u.username, u.user_type as user_type,u.member_id as member_id,CONCAT(u.first_name," ", u.last_name) AS name, CONCAT(u.first_name," ", u.last_name) AS title ' );

		$query->addSelect ( 'u.notification_token AS notification_token, u.osname AS osname, u.osvesion AS osvesion, u.first_name AS first_name, u.last_name AS last_name, u.user_key' );

		$query->where ( 'u.is_active = ?', PreSchool::CUSTOMER_ACTIVATED );

		$query->where ( 'u.user_type = ?', PreSchool::USER_TYPE_RELATIVE );

		$query->innerJoin ( 'u.Relative r With r.deleted_at IS NULL' );

		$query->innerJoin ( 'r.RelativeStudent rs' );

		$query->innerJoin ( 'rs.Student s' );

		$query->innerJoin ( 's.StudentClass sc With (DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND (sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array (
				$date_at,
				$date_at
		) );

		$query->innerJoin ( 'sc.MyClass mc' );

		$query->innerJoin ( 'mc.PsClassRooms cr' );

		$query->innerJoin ( 'cr.PsWorkPlaces wp' );

		if ($ps_workplace_id > 0) {
			$query->addWhere ( 'wp.id = ?', $ps_workplace_id );
		}

		$query->whereIn ( 'sc.type', array (
				PreSchool::SC_STATUS_TEST,
				PreSchool::SC_STATUS_OFFICIAL
		) );

		if ($ps_customer_id > 0) {
			$query->addWhere ( 'u.ps_customer_id = ?', $ps_customer_id );
		}
		if ($ps_class_id > 0) {
			$query->addWhere ( 'mc.id = ?', $ps_class_id );
		}

		if (count ( $relative_ids ) > 0)
			$query->andWhereIn ( 'u.member_id', $relative_ids );

		$query->orderBy ( 'u.last_name,u.first_name' );

		return $query->execute ();
	}

	/**
	 * Lay thong tin nguoi dung
	 * Phung Van Thanh
	 */
	public function getUserInfoNotification($user_id, $user_type) {
		$query = $this->createQuery ( 'u' )->select ( 'u.id,u.username, u.user_type as user_type,u.member_id as member_id,CONCAT(u.first_name," ", u.last_name) AS name, CONCAT(u.first_name," ", u.last_name) AS title ' );

		$query->addSelect ( 'u.notification_token AS notification_token, u.osname AS osname, u.osvesion AS osvesion, u.first_name AS first_name, u.last_name AS last_name, u.user_key' );

		$query->andWhere ( 'u.user_type = ?', $user_type );

		$query->addWhere ( 'u.member_id = ?', $user_id );

		return $query->fetchOne ();
	}

	/**
	 * Lay thong tin nguoi dung: ma don vi, anh ca nhan
	 */
	public function getUserInfoCustomer($user_id, $user_type) {
		$query = $this->createQuery ( 'a' );

		$query->innerJoin ( 'a.PsCustomer cus' );

		if ($user_type == PreSchool::USER_TYPE_TEACHER) {

			$query->select ( 'a.id,cus.school_code AS school_code,m.avatar, CONCAT("hr/thumb/",m.avatar) AS file_avatar' );

			$query->innerJoin ( 'a.PsMember m With a.user_type = ?', $user_type );
		} elseif ($user_type == PreSchool::USER_TYPE_RELATIVE) {

			$query->select ( 'a.id,cus.school_code AS school_code,r.avatar, CONCAT("relative/thumb/",r.avatar) AS file_avatar' );

			$query->innerJoin ( 'a.Relative r With a.user_type = ?', $user_type );
		}

		$query->where ( 'a.id = ?', $user_id );

		return $query->limit ( 1 )->fetchOne ();
	}

	/**
	 * Lay thong tin nguoi dung theo mang $user_id
	 * Phung Van Thanh
	 */
	public function getUserNotification($user_id) {
		
		$query = $this->createQuery ( 'a' );

		$query->select ( 'a.id,a.user_type AS user_type, a.username AS username, CONCAT(a.first_name," ", a.last_name) AS fullname' );

		// Add thêm
		$query->addSelect ( 'a.notification_token AS notification_token, a.osname AS osname, a.osvesion AS osvesion, a.first_name AS first_name, a.last_name AS last_name, a.user_key' );

		$query->whereIn ( 'a.id', $user_id );

		return $query->execute ();
	}

	/**
	 * Lay thong tin nguoi dung theo mang $user_id: ma don vi, anh ca nhan
	 */
	public function getUserInfo($user_id) {
		
		$query = $this->createQuery ( 'a' );

		$query->select ( 'a.id, a.username AS username, CONCAT(a.first_name," ", a.last_name) AS fullname' );

		$query->whereIn ( 'a.id', $user_id );

		// echo $query->buildSqlQuery();

		return $query->execute ();
	}
	
	public function findOneByMemberId($member_id, $user_type) {
		
		if ($member_id > 0 && $user_type != '') {
			
			$q = $this->createQuery ()->select ( '*' );

			$q->where ( 'member_id = ?', $member_id );

			$q->andWhere ( 'user_type = ?', $user_type );

			return $q->limit ( 1 )->fetchOne ();
		}

		return null;
	}
	
	public function checkUniqueMemberUserTypeExits($member_id, $user_type, $user_id = null) {
		
		$query = $this->createQuery ()->select ( 'id' );
		
		$query->andWhere ( 'member_id = ?', $member_id );
		
		$query->andWhere ( 'user_type = ?', $user_type );

		if ($user_id > 0)
			$query->andwhere ( 'id != ?', $user_id );

		return $query->limit ( 1 )->fetchOne ();
	}

	//
	/**
	 * Lay thong tin nguoi dung + thong tin ma truong
	 */
	public function getUserAndPsCustomer($user_id) {
		$query = $this->createQuery ( 'a' )->select ( 'a.*', 'cus.school_code AS school_code' );

		$query->leftJoin ( 'a.PsCustomer cus' );

		$query->where ( 'a.id = ?', $user_id );

		return $query->limit ( 1 )->fetchOne ();
	}

	/**
	 * [getUserDetail] lấy thông tin chi tiết người dùng
	 *
	 * @param int $user_id
	 * @return obj
	 */
	public function getUserDetail($user_id) {
		$query = $this->createQuery ( 'a' );

		$query->select ( 'a.id as id, a.username as username, CONCAT(a.first_name," ", a.last_name) AS full_name, a.email_address as email, a.user_type AS user_type ,a.is_active as is_active, a.is_super_admin as is_super_admin, a.last_login as last_login, a.member_id as member_id, cus.school_name AS school_name ,cus.id AS customer_id,ward.name as ward, dist.name as district, province.name as province, a.is_global_super_admin AS is_global_super_admin, a.created_at, a.updated_at, CONCAT(uc.first_name," ", uc.last_name) AS created_by, CONCAT(ud.first_name," ", ud.last_name) AS updated_by' );

		$query->leftJoin ( 'a.PsCustomer cus' );

		$query->leftJoin ( 'cus.PsWard ward' );

		$query->leftJoin ( 'ward.PsDistrict dist' );

		$query->leftJoin ( 'dist.PsProvince province' );

		$query->leftJoin ( 'a.UserCreated uc' );

		$query->leftJoin ( 'a.UserUpdated ud' );

		$query->addWhere ( 'a.id = ?', $user_id );

		// echo $query->buildSqlQuery();

		return $query->fetchOne ();
	}

	/**
	 * Tao SQL lay danh sach theo ps_customer_id
	 *
	 * @param string $getField
	 * @param int $psCustomerId
	 * @param int $is_activated
	 */
	public function setSQLRelativeByCustomerId($psCustomerId = null, $is_activated = null) {
		$q = $this->createQuery ()->select ( 'id, CONCAT(first_name, " ", last_name) AS fullname' );

		if ($psCustomerId > 0)
			$q->addWhere ( 'ps_customer_id = ?', $psCustomerId );

		if ($is_activated > 0)
			$q->addWhere ( 'is_active = ?', $is_activated );

		$q->addWhere ( 'user_type = ?', PreSchool::USER_TYPE_RELATIVE );
		$q->addOrderBy ( 'last_name', 'first_name' );

		return $q;
	}

	/**
	 * Dem so luong phu huynh kich hoat app theo co so
	 *
	 * @author Phung Van Thanh
	 *        
	 * @param int $ps_customer_id,$ps_workplace_id
	 *        	
	 * @return obj
	 */
	public function countUserActivityAppByWorkplace($ps_customer_id, $ps_workplace_id) {
		$date_at = date ( "Ymd" );

		$query = $this->createQuery ( 'u' )->select ( 'u.id AS user_id, u.username AS username, u.app_device_id AS app_device_id, u.api_token AS api_token, u.token_last_login AS token_last_login,' );

		$query->leftJoin ( 'u.PsRelative r With u.user_type = ?', PreSchool::USER_TYPE_RELATIVE );

		$query->leftJoin ( 'r.RelativeStudent rs' );

		$query->leftJoin ( 'rs.Student s WITH s.deleted_at IS NULL' );

		$query->leftJoin( 's.StudentClass sc With (DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND (sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array (
				$date_at,
				$date_at
		) );

		$query->andWhere ( 'r.deleted_at IS NULL' );

// 		$query->andWhereIn ( 'sc.type', array (
// 				PreSchool::SC_STATUS_TEST,
// 				PreSchool::SC_STATUS_OFFICIAL
// 		) );

		$query->addwhere ( 'r.ps_customer_id = ?', $ps_customer_id );

		$query->addwhere ( 'r.ps_workplace_id = ?', $ps_workplace_id );

		$query->addwhere ( 'u.user_type = ?', PreSchool::USER_TYPE_RELATIVE );

		$query->addWhere ( 'u.is_active = ?', PreSchool::CUSTOMER_ACTIVATED );

		return $query->execute ();
	}

	/**
	 * Tai khoan phu huynh co con da ket thuc hoc, da xoa hs và phu huynh ma chua khoa tai khoan
	 *
	 * @author Phung Van Thanh
	 *
	 * @param int $ps_customer_id,$ps_workplace_id
	 *        	
	 * @return obj
	 */
	public function checkAccountRelativeByStudentStop($ps_customer_id, $ps_workplace_id) {
		
		$date_at = date ( "Ymd" );
		
		$query = $this->createQuery ( 'u' )->select ( 'u.id AS user_id, u.username AS username, u.app_device_id AS app_device_id, u.api_token AS api_token, u.token_last_login AS token_last_login, u.first_name AS first_name, u.last_name AS last_name' );
		
		$query->addSelect('s.id AS student_id, CONCAT(s.first_name, " ", s.last_name) AS student_name, s.birthday AS birthday,s.student_code AS student_code, mc.name AS class_name');
		
		$query->addSelect('r.id AS relative_id,rs.id AS rs_id,mc.id AS class_id, sc.id AS sc_id');
		
		$query->innerJoin( 'u.PsRelative r With u.user_type = ?', PreSchool::USER_TYPE_RELATIVE );
		
		$query->innerJoin ( 'r.RelativeStudent rs' );
		
		$query->innerJoin ( 'rs.Student s' );
		
		$query->leftJoin ( 's.StudentClass sc ' );
		
		$query->leftJoin ( 'sc.MyClass mc ' );
		
		$query->andWhere ( 'sc.is_activated =?', PreSchool::ACTIVE );
		
		$query->andWhereIn( 'sc.type', array (
				PreSchool::SC_STATUS_PAUSE,
				PreSchool::SC_STATUS_GRADUATION,
				PreSchool::SC_STATUS_STOP_STUDYING,
				PreSchool::SC_STATUS_HOLD
		) );
		
		//$query->andWhere ( '(r.deleted_at IS NOT NULL) OR (s.deleted_at IS NOT NULL) OR (sc.stop_at IS NOT NULL AND DATE_FORMAT(sc.stop_at,"%Y%m%d") <= ?)', $date_at );
		
		$query->addWhere ( 'r.ps_customer_id = ?', $ps_customer_id );
		
		$query->andWhere ( 'r.ps_workplace_id = ?', $ps_workplace_id );
		
		$query->andWhere ( 'u.user_type = ?', PreSchool::USER_TYPE_RELATIVE );
		
		$query->andWhere ( 'u.is_active = ?', PreSchool::CUSTOMER_ACTIVATED );
		
		return $query->execute ();
	}
	
	// Lay ra tai khoan chua gan voi hoc sinh nào ma co tai khoan
	public function checkAccountRelativeNotJoinStudent($ps_customer_id, $ps_workplace_id) {
		
		$date_at = date ( "Ymd" );
		
		$query = $this->createQuery ( 'u' )->select ( 'u.id AS user_id, u.username AS username, u.app_device_id AS app_device_id, u.api_token AS api_token, u.token_last_login AS token_last_login, u.first_name AS first_name, u.last_name AS last_name' );
		
		$query->addSelect('s.id AS student_id, CONCAT(s.first_name, " ", s.last_name) AS student_name, s.birthday AS birthday,s.student_code AS student_code, mc.name AS class_name');
		
		$query->addSelect('r.id AS relative_id,rs.id AS rs_id,mc.id AS class_id, sc.id AS sc_id');
		
		$query->leftJoin ( 'u.PsRelative r With u.user_type = ?', PreSchool::USER_TYPE_RELATIVE );
		
		$query->leftJoin ( 'r.RelativeStudent rs' );
		
		$query->leftJoin ( 'rs.Student s' );
		
		$query->leftJoin ( 's.StudentClass sc ' );
		
		$query->leftJoin ( 'sc.MyClass mc ' );
		
		$query->andWhere ( '(r.deleted_at IS NOT NULL) OR (s.deleted_at IS NOT NULL) OR (rs.id IS NULL)' );
		
		$query->addWhere ( 'r.ps_customer_id = ?', $ps_customer_id );
		
		$query->andWhere ( 'r.ps_workplace_id = ?', $ps_workplace_id );
		
		$query->andWhere ( 'u.user_type = ?', PreSchool::USER_TYPE_RELATIVE );
		
		$query->andWhere ( 'u.is_active = ?', PreSchool::CUSTOMER_ACTIVATED );
		
		return $query->execute ();
	}
	
	/**
	 * Thong ke so luong user kích hoạt đã cấp
	 *
	 * @author Nguyen Chien Thang
	 *        
	 * @param
	 *        	Doctrine SQL
	 * @return int
	 */
	public function totalUser($ps_customer_id, $user_type = '') {
		$query = $this->createQuery ( 'u' )->select ( 'u.id' );

		$query->where ( 'u.is_active = ?', PreSchool::CUSTOMER_ACTIVATED );

		$query->addwhere ( 'u.ps_customer_id = ?', $ps_customer_id );

		$query->addwhere ( 'u.user_type = ?', $user_type );

		return $query->count ();
	}

	/**
	 * Thong ke so luong user da active su dung app
	 *
	 * @author Nguyen Chien Thang
	 *        
	 * @param
	 *        	Doctrine SQL
	 * @return int
	 */
	public function totalUserActivityApp($ps_customer_id, $user_type = '') {
		
		$date_at = date ( "Ymd" );

		$query = $this->createQuery ( 'u' )->select ( 'u.id' );

		$query->innerJoin ( 'u.PsRelative r With u.user_type = ?', $user_type );

		$query->innerJoin ( 'r.RelativeStudent rs' );

		$query->innerJoin ( 'rs.Student s WITH s.deleted_at IS NULL' );
		
		/*

		$query->innerJoin ( 's.StudentClass sc With (DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND (sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array (
				$date_at,
				$date_at
		) );
		
		*/

		$query->andWhere ( 'r.deleted_at IS NULL' );
		
		/*
		$query->andWhereIn ( 'sc.type', array (
				PreSchool::SC_STATUS_TEST,
				PreSchool::SC_STATUS_OFFICIAL
		) );
		*/
		
		$query->addWhere ( 'u.is_active = ?', PreSchool::CUSTOMER_ACTIVATED );

		$query->addwhere ( 'u.app_device_id != "" ' );

		$query->addwhere ( 'u.ps_customer_id = ?', $ps_customer_id );

		$query->addwhere ( 'u.user_type = ?', $user_type );

		return $query->count ();
	}

	/**
	 * Thong ke so luong user đang login app
	 *
	 * @author Nguyen Chien Thang
	 *        
	 * @param
	 *        	Doctrine SQL
	 * @return int
	 */
	public function totalUserOnlineApp($ps_customer_id, $user_type = '') {
		
		if (! myUser::isAdministrator ()) {

			$query = $this->createQuery ()->select ( 'id' );

			$query->where ( 'is_active = ?', PreSchool::CUSTOMER_ACTIVATED );

			$query->addwhere ( 'api_token !="" ' );

			$query->addwhere ( 'ps_customer_id = ?', $ps_customer_id );

			$query->addwhere ( 'user_type = ?', $user_type );
		} else {

			$query = $this->createQuery ( 'u' )->select ( 'u.id' );

			$query->where ( 'u.is_active = ?', PreSchool::CUSTOMER_ACTIVATED );

			$query->addwhere ( 'u.api_token !="" ' );

			$query->addwhere ( 'u.ps_customer_id = ?', $ps_customer_id );

			$query->addwhere ( 'u.user_type = ?', $user_type );
		}

		return $query->count ();
	}

	/**
	 * lấy các cột trong bang
	 *
	 * @param int $student_id
	 * @return obj
	 */
	public function getsfGuardUserByField($id,$getField = null) {
		
		$query = $this->createQuery () ->select ( $getField != '' ? $getField : '*' );
		
		$query->addWhere ( 'id = ?', $id );
		
		return $query->fetchOne ();
	}
}