<?php

/**
 * ReceiptTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ReceiptTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object ReceiptTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'Receipt' );
	}

	public function doSelectQuery(Doctrine_Query $query) {

		$query = Doctrine_Query::create ()->
		from ( 'Student s' );

		$query->select ( 's.ps_customer_id AS ps_customer_id,' . 's.image AS image, ' . 's.id as student_id, s.student_code AS student_code, ' . 's.sex AS sex, ' . 's.birthday AS birthday, ' . 's.year_data AS year_data, ' . 'cus.school_code AS school_code,' . 'CONCAT(s.first_name, " ", s.last_name) AS student_name' );

		$query->innerJoin ( 's.PsCustomer cus' );

		$query->addWhere ( 's.deleted_at IS NULL' );

		if (! myUser::credentialPsCustomers ( 'PS_SYSTEM_FEATURE_BRANCH_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0) {
			$query->addWhere ( 's.ps_customer_id = ?', myUser::getPscustomerID () );
		}

		$query->orderBy ( 's.last_name, s.first_name' );

		return $query;
	}

	public function getReceiptByField($receipt_id, $getField = null) {
		
		$query = $this->createQuery () ->select ( $getField != '' ? $getField : '*' );
		
		$query->addWhere ( 'id = ?', $receipt_id );
		
		return $query->fetchOne ();
	}
	
	
	/**
	 * Lay ra danh sach hoc sinh co phieu thu trong thang
	 *
	 * @author ThanhPV
	 *        
	 * @return $obj
	 *
	 */
	public function getListStudentFeeReceiptOfMonth($ps_customer_id, $ps_workplace_id, $ps_class_id, $is_payment, $ps_month) {

		$date_at = '01-' . $ps_month;

		$query = $this->createQuery ()
			->from ( 'Student s' );

		$query->select ( 's.ps_customer_id AS ps_customer_id,' . 's.image AS image, ' . 's.id as student_id, s.student_code AS student_code, ' . 's.sex AS sex, ' . 's.birthday AS birthday, ' . 's.year_data AS year_data, ' . 'cus.school_code AS school_code,' . 'CONCAT(s.first_name, " ", s.last_name) AS student_name' );

		$query->addSelect ( 'sc.myclass_id AS class_id,mc.id AS mc_id,mc.name AS mc_name,fr.receivable AS receivable,fr.id AS fr_id, 
        re.id AS id ,re.id AS re_id,re.receipt_no AS receipt_no, re.receipt_date AS receipt_date,re.balance_last_month_amount as balance_last_month_amount, re.payment_status AS payment_status,re.cashier_name AS cashier_name, re.collected_amount AS collected_amount,re.balance_amount AS balance_amount, re.payment_date AS payment_date,re.late_payment_amount as late_payment_amount, re.is_public AS is_public,re.number_push_notication AS number_push_notication' );

		$query->addSelect ( 'CONCAT(u.first_name, " ", u.last_name) AS updated_by' );

		$query->innerJoin ( 's.Receipt re' );

		$query->innerJoin ( 's.PsFeeReports fr With DATE_FORMAT(fr.receivable_at,"%Y%m%d") = ?', date ( 'Ymd', strtotime ( $date_at ) ) );

		$query->innerJoin ( 's.PsCustomer cus' );

		$query->addWhere ( 's.deleted_at IS NULL' );

		$query->innerJoin ( 're.UserUpdated u' );

		$query->innerJoin ( 's.StudentClass sc With (DATE_FORMAT(sc.start_at,"%Y%m") <= ? AND (sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array (
				date ( 'Ym', strtotime ( $date_at ) ),
				date ( 'Ym', strtotime ( $date_at ) ) ) );

		$query->leftJoin ( 'sc.MyClass mc' );

		if ($ps_workplace_id > 0) {
			$query->innerJoin ( 'mc.PsClassRooms cr With cr.ps_workplace_id = ?', $ps_workplace_id );
		}

		$query->andWhereIn ( 'sc.type', array (
				PreSchool::SC_STATUS_OFFICIAL,
				PreSchool::SC_STATUS_TEST ) );

		if ($ps_class_id > 0) {
			$query->andWhere ( 'sc.myclass_id = ?', $ps_class_id );
		}

		if ($is_payment == 0) { // chua thanh toan
			$query->andWhere ( 're.payment_status = 0' );
		} elseif ($is_payment == 1) { // da thanh toan
			$query->andWhere ( 're.payment_status = 1' );
		}

		$query->andWhere ( 's.ps_customer_id =?', $ps_customer_id );

		$query->andWhere ( 'DATE_FORMAT(re.receipt_date,"%Y%m") = ?', date ( 'Ym', strtotime ( $date_at ) ) );

		$query->orderBy ( 'mc.name, s.last_name, s.first_name' );

		return $query->execute ();
	}

	/**
	 * Thong ke hoc sinh nop tien theo ngay
	 *
	 * @author ThanhPV
	 *
	 * @return $obj
	 *
	 */
	public function getListStudentFeeReceiptPayment($ps_customer_id, $ps_workplace_id, $date_at) {
		
		$query = $this->createQuery ()
		->from ( 'Student s' );
		
		$query->select ( 's.ps_customer_id AS ps_customer_id,' . 's.image AS image, ' . 's.id as student_id, s.student_code AS student_code, ' . 's.sex AS sex, ' . 's.birthday AS birthday, ' . 's.year_data AS year_data, ' . 'cus.school_code AS school_code,' . 'CONCAT(s.first_name, " ", s.last_name) AS student_name' );
		
		$query->addSelect ( 'sc.myclass_id AS class_id,mc.id AS mc_id,mc.name AS mc_name,fr.receivable AS receivable,fr.id AS fr_id,
        re.id AS re_id,re.receipt_no AS receipt_no, re.receipt_date AS receipt_date,re.cashier_name AS cashier_name, re.collected_amount AS collected_amount,
		re.payment_type as payment_type,re.payment_relative_name as payment_relative_name,re.note as note
		' );
		
		$query->addSelect ( 'CONCAT(u.first_name, " ", u.last_name) AS updated_by' );
		
		$query->innerJoin ( 's.Receipt re' );
		
		$query->innerJoin ( 's.PsFeeReports fr' );
		
		$query->innerJoin ( 's.PsCustomer cus' );
		
		$query->addWhere ( 's.deleted_at IS NULL' );
		
		$query->innerJoin ( 're.UserUpdated u' );
		
		/*
		$query->innerJoin ( 's.StudentClass sc ');
		
		$query->leftJoin ( 'sc.MyClass mc' );
		
		
		if ($ps_workplace_id > 0) {
			$query->innerJoin ( 'mc.PsClassRooms cr With mc.ps_workplace_id = ?', $ps_workplace_id );
		}
		
		
		$query->andWhereIn ( 'sc.type', array (
				PreSchool::SC_STATUS_OFFICIAL,
				PreSchool::SC_STATUS_TEST ) );
		
		*/
		
		$receivable_at = date ( 'Ymd', strtotime ( $date_at ) );
		
		$query->innerJoin ( 's.StudentClass sc With (DATE_FORMAT(sc.start_at,"%Y%m") <= ? AND (sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array ($receivable_at,$receivable_at ) );
		$query->innerJoin ( 'sc.MyClass mc' );		
		
		$query->andWhere ( 're.payment_status = ?', PreSchool::ACTIVE );
		
		$query->andWhere ( 's.ps_customer_id =?', $ps_customer_id );
		
		$query->andWhere ( 'DATE_FORMAT(re.payment_date,"%Y%m%d") = ?', date ( 'Ymd', strtotime ( $date_at ) ) );
		
		$query->orderBy ( 're.receipt_no ASC ,mc.name ASC, s.last_name, s.first_name' );
		
		return $query->execute ();
	}
	
	/**
	 * Lay phieu thu $date cua hoc sinh( gồm cả đã thanh toán và chưa thanh toán)
	 *
	 * @param $student_id int
	 *        	ma hoc sinh
	 * @param $date strtime
	 *        	thoi gian
	 * @return $obj
	 */
	public function findOfStudentByDate($student_id, $date) {

		$q = $this->createQuery ( 'r' )
			->select ( 'r.*' )
			->where ( "r.student_id = ? AND DATE_FORMAT(r.receipt_date,'%Y%m') = ? ", array (
				$student_id,
				date ( 'Ym', $date ) ) )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Lay ra nhung gi can lay de xuat phieu thu
	 * Phung Van Thanh
	 *
	 * @param unknown $student_id
	 * @param unknown $date
	 * @return mixed|boolean|Doctrine_Record|Doctrine_Collection
	 */
	public function findOfStudentByDate2($student_id, $date) {

		$q = $this->createQuery ( 'r' )
			->select ( 'r.id as id, r.balance_last_month_amount as balance_last_month_amount,r.payment_status as payment_status,r.balance_amount as balance_amount,r.receipt_date as receipt_date' )
			->where ( "r.student_id = ? AND DATE_FORMAT(r.receipt_date,'%Y%m') = ? ", array (
				$student_id,
				date ( 'Ym', $date ) ) )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Tim phieu thu ke tiep $intdate nhat
	 *
	 * @author Nguyen Chien Thang - thangnc@ithanoicom
	 * @param
	 *        	int - $student_id, ma hoc sinh
	 * @param
	 *        	strtime - $intdate, thoi gian
	 * @return $obj
	 *
	 */
	public function findReceiptOfStudentNextMonth($student_id, $intdate) {

		$q = $this->createQuery ( 'r' )
			->addWhere ( "r.student_id = ? ", $student_id )
			->andWhere ( "DATE_FORMAT(r.receipt_date,'%Y%m') > ?", date ( 'Ym', $intdate ) )
			->orderBy ( 'r.receipt_date DESC' )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Tim phieu thu da thanh toan gan nhat
	 *
	 * @author Phung Van Thanh
	 * @param
	 *        	int - $student_id, ma hoc sinh
	 * @return $obj
	 *
	 */
	public function findReceiptOfStudentIsPayment($student_id) {

		$q = $this->createQuery ( 'r' )
			->select ( 'r.id as id, r.receipt_date as receipt_date' )
			->addWhere ( "r.student_id = ? ", $student_id )
			->andWhere ( "r.payment_status = ? ", PreSchool::ACTIVE )
			->orderBy ( 'r.receipt_date DESC' )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Dem xem co bao nhieu thang chua thanh toan
	 *
	 * @author Phung Van Thanh
	 * @param
	 *        	int - $student_id, ma hoc sinh
	 * @return $obj
	 *
	 */
	public function countReceiptOfStudentIsPayment($student_id, $intdate) {

		$q = $this->createQuery ( 'r' )
			->select ( 'r.id' )
			->addWhere ( "r.student_id = ? ", $student_id )
			->andWhere ( "DATE_FORMAT(r.receipt_date,'%Y%m') < ?", date ( 'Ym', $intdate ) )
			->orderBy ( 'r.receipt_date DESC' );

		return $q->execute ();
	}

	/**
	 * Tim phieu thu >= $intdate nhat
	 *
	 * @author Nguyen Chien Thang - thangnc@ithanoicom
	 * @param
	 *        	int - $student_id, ma hoc sinh
	 * @param
	 *        	strtime - $intdate, thoi gian
	 * @return $obj
	 *
	 */
	public function findReceiptOfStudentNearDate($student_id, $intdate) {

		$q = $this->createQuery ( 'r' )
			->addWhere ( "r.student_id = ? ", $student_id )
			->andWhere ( "DATE_FORMAT(r.receipt_date,'%Y%m') >= ?", date ( 'Ym', $intdate ) )
			->orderBy ( 'r.receipt_date ASC' )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Lay phieu thu $intdate co trang thai Da thanh toan cua hoc sinh
	 *
	 * @param $student_id int
	 *        	ma hoc sinh
	 * @param $intdate strtime
	 *        	thoi gian
	 * @return $obj
	 */
	public function findReceiptOfStudentByDate($student_id, $intdate) {

		$q = $this->createQuery ( 'r' );

		$q->where ( "r.student_id = ? AND DATE_FORMAT(r.receipt_date,'%Y%m') = ? ", array (
				$student_id,
				PsDateTime::psTimetoDate ( $intdate, "Ym" ) ) );
		$q->andWhere ( 'r.payment_status = ?', PreSchool::ACTIVE );
		$q->orderBy ( 'r.receipt_date DESC' )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Kiem tra xem phieu thu va hoc sinh co dung hay khong
	 */
	public function checkStudentAndReceiptNo($student_code, $receipt_no) {

		$q = $this->createQuery ( 'r' );
		$q->select ( 'r.*' );

		$q->innerJoin ( 'r.Student s' );
		$q->addWhere ( "r.receipt_no = ?", $receipt_no );
		$q->andWhere ( "s.student_code = ?", $student_code );

		$q->orderBy ( 'r.receipt_date DESC' )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Tim phieu thu gan $intdate nhat(bao gồm cả trạng thai chua thanh toan)
	 *
	 * @author Nguyen Chien Thang - thangnc@ithanoicom
	 * @param
	 *        	int - $student_id, ma hoc sinh
	 * @param
	 *        	strtime - $intdate, thoi gian
	 * @return $obj
	 *
	 */
	public function findPrevOfStudentByDate($student_id, $intdate) {

		$q = $this->createQuery ( 'r' )
			->where ( "r.student_id = ? AND DATE_FORMAT(r.receipt_date,'%Y%m') < ? ", array (
				$student_id,
				date ( 'Ym', $intdate ) ) )
			->orderBy ( 'r.receipt_date DESC' )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Tim phieu thu da thanh toan gan $intdate nhat
	 *
	 * @author Nguyen Chien Thang - thangnc@ithanoicom
	 * @param $student_id int
	 *        	ma hoc sinh
	 * @param $intdate strtime
	 *        	thang so sanh
	 * @return $obj
	 *
	 */
	public function findReceiptPrevOfStudentByDate($student_id, $intdate) {

		$q = $this->createQuery ( 'r' );

		$q->where ( "r.student_id = ? AND DATE_FORMAT(r.receipt_date,'%Y%m') < ? ", array (
				$student_id,
				PsDateTime::psTimetoDate ( $intdate, "Ym" ) ) );
		$q->andWhere ( 'r.payment_status = ?', PreSchool::ACTIVE );
		$q->orderBy ( 'r.receipt_date DESC' )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Tinh so luong thang tinh tu phieu thu đã thanh toán gần $intdate nhất
	 *
	 * @param $student_id int
	 *        	ma hoc sinh
	 * @param $date intdate
	 *        	thang xu ly
	 * @param $config_start_date_system_fee date
	 *        	format: yyyy-mm-dd
	 * @return $obj
	 */
	public function getNumberMonthFromPrevOfStudent($student_id, $intdate, $config_start_date_system_fee) {

		$q = $this->createQuery ( 'r' );

		$q->select ( "r.id ,r.receipt_date AS max_receipt_date, r.collected_amount ,r.balance_amount AS balance_amount, r.chietkhau_thangtruoc AS chietkhau_thangtruoc, r.hoantra_thangtruoc AS hoantra_thangtruoc, r.balance_last_month_amount AS balance_last_month_amount , PERIOD_DIFF(" . date ( 'Ym', $intdate ) . ",DATE_FORMAT(r.receipt_date,'%Y%m')) AS number_month" );

		// $q->where ( 'r.student_id = ? AND r.payment_status =?', array ($student_id,PreSchool::ACTIVE ) );

		// $q->where('r.student_id = ?', array($student_id));

		/*
		 * if (myUser::isAdministrator()) {
		 * $q->where('r.student_id = ?', array($student_id));
		 * } else {
		 * $q->where ( 'r.student_id = ? AND r.payment_status =?', array (
		 * $student_id,
		 * PreSchool::ACTIVE ) );
		 * }
		 */

		$q->andWhere ( 'r.student_id = ?', array (
				$student_id ) );

		$q->andWhere ( "DATE_FORMAT(r.receipt_date,'%Y%m') < ? ", PsDateTime::psTimetoDate ( $intdate, "Ym" ) );

		$q->andWhere ( "DATE_FORMAT(r.receipt_date,'%Y%m') >= ? ", PsDateTime::psTimetoDate ( PsDateTime::psDatetoTime ( $config_start_date_system_fee ), "Ym" ) );

		$q->orderBy ( "r.receipt_date DESC" );

		$q->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Lay danh sach hoc sinh cua lop con no hoc phi tai thoi diem date
	 *
	 * @author Nguyen Chien Thang (ntsc279@gmail.com)
	 *        
	 * @param $ps_customer_id int
	 *        	Ma truong
	 * @param $class_id int
	 *        	Ma lop
	 * @param $intdate int
	 *        	Thang thong ke no
	 * @return $list
	 */
	public function findStudentDebtByDate($ps_customer_id, $class_id, $intdate) {

		$receipt_date_at = date ( 'Ym', strtotime ( $intdate ) );

		$receivable_at = date ( 'Ymd', strtotime ( $intdate ) );

		$query = Doctrine_Query::create ()->from ( 'Student s' );

		$query->select ( 's.id as student_id, s.student_code AS student_code, ' . 's.sex AS sex, ' . 's.birthday AS birthday, CONCAT(s.first_name, " ", s.last_name) AS student_name' );

		$query->addSelect ( 're.id AS re_id,re.receipt_no AS receipt_no, re.collected_amount AS collected_amount,re.balance_amount AS balance_amount' );

		$query->leftJoin ( 's.Receipt re With (re.payment_status = ? AND DATE_FORMAT(re.receipt_date,"%Y%m") = ? )', array (
				PreSchool::NOT_ACTIVE,
				$receipt_date_at ) );

		// $query->innerJoin ( 's.StudentClass sc With (sc.myclass_id = ? AND DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND (sc.stop_at IS NULL OR DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array ($class_id,$receivable_at,$receivable_at ) );

		$query->innerJoin ( 's.StudentClass sc With (sc.myclass_id = ? AND DATE_FORMAT(sc.start_at,"%Y%m") <= ? AND (sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array (
				$class_id,
				$receipt_date_at,
				$receivable_at ) );

		$query->innerJoin ( 's.PsCustomer cus' );

		$query->where ( 's.ps_customer_id =? ', $ps_customer_id );

		$query->andWhereIn ( 'sc.type', array (
				PreSchool::SC_STATUS_OFFICIAL,
				PreSchool::SC_STATUS_TEST ) );

		$query->addWhere ( 's.deleted_at IS NULL' );

		$query->orderBy ( 's.last_name, s.first_name' );

		return $query->execute ();
	}

	// ########### END VESION 2.0 ###############33333

	/**
	 * Function: getNumberMonthFromPrev($student_id, $intdate) Tinh so luong thang tinh tu phieu thu gan datime nhat
	 *
	 * @param
	 *        	int - $student_id, ma hoc sinh
	 * @param
	 *        	int time - $date, thoi gian
	 * @return $obj
	 *
	 */
	public function getNumberMonthFromPrev($student_id, $intdate) {

		$q = $this->createQuery ( 'r' )
			->select ( "r.id ,r.receipt_date AS max_receipt_date, r.balance_amount AS balance_amount , PERIOD_DIFF(" . date ( 'Ym', $intdate ) . ",DATE_FORMAT(r.receipt_date,'%Y%m')) AS number_month" )
			->where ( 'r.student_id = ?', $student_id )
			->andWhere ( "DATE_FORMAT(r.receipt_date,'%Y%m') < ? ", date ( "Ym", $intdate ) )
			->orderBy ( "r.receipt_date DESC" )
			->limit ( 1 );

		return $q->fetchOne ();
	}
}