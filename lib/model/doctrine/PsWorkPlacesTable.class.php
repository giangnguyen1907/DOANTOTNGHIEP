<?php

/**
 * PsWorkPlacesTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PsWorkPlacesTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object PsWorkPlacesTable
	*/
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'PsWorkPlaces' );

	}

	/**
	 * FUNCTION: doSelectQuery(Doctrine_Query $query)
	 *
	 * @param
	 *        	Doctrine SQL
	 * @return string SQL
	 *        
	*/
	public function doSelectQuery(Doctrine_Query $query) {
		
		$a = $query->getRootAlias ();

		$query->select ( $a . '.id AS id,' .$a . '.email AS email ,'.$a . '.address AS address,'.$a . '.phone AS phone,'.$a . '.principal AS principal, ' . $a . '.title AS title, ' . $a . '.is_activated AS is_activated, ' . $a . '.updated_at AS updated_at,' . $a . '.ps_customer_id AS ps_customer_id, ' . 'cus.title AS customer_title, ' . 'CONCAT(u.first_name, " ", u.last_name) AS updated_by' );

		$query->leftJoin ( $a . '.PsCustomer cus' );
		$query->leftJoin ( $a . '.UserUpdated u' );

		$query->innerJoin ( 'cus.PsWard pw' );
		$query->innerJoin ( 'pw.PsDistrict d' );
		$query->innerJoin ( 'd.PsProvince p' );

		if (! myUser::credentialPsCustomers ( 'PS_SYSTEM_WORK_PLACES_FILTER_SCHOOL' ) && myUser::getPscustomerID ()) {

			$query->where ( $a . '.ps_customer_id = ? ', myUser::getPscustomerID () );
		}

		return $query;
	}
	
	
	/**
	 * Lấy 1 co so nam trong don vị goc
	 *
	 * @return mixed
	**/
	public function getPsWorkPlaceRoot() {
		
		$q = $this->createQuery ('a')->select ("a.id, a.title as name" )->innerJoin ( 'a.PsCustomer b' );
		
		$q->addWhere ( 'b.is_root = ?', PreSchool::ACTIVE );
		$q->andWhere ( 'a.is_activated = ?', PreSchool::ACTIVE );
		$q->andWhere ( 'a.is_activated = ?', PreSchool::ACTIVE )->limit(1);
		$q->orderBy ( 'a.iorder' );
		
		return $q->fetchOne ();
	}

	/**
	 * Tao SQL lay danh sach co so dao tao trong: Tỉnh hoặc Quận/Huyện
	 *
	 * @return mixed
	**/
	public function sqlListByWhere($ps_district_id = null, $ps_province_id = null, $is_activated = null) {

		$q = $this->createQuery ('w')->select ( 'w.id as id, w.title as name' );

		$q->innerJoin ( 'w.PsWard pw' );
		$q->innerJoin ( 'pw.PsDistrict d' );
		$q->innerJoin ( 'd.PsProvince p' );
		
		if ($ps_district_id > 0) {
			$q->andWhere ( 'd.id = ?', $ps_district_id );
		}
		
		if ($ps_province_id > 0) {
			$q->andWhere ( 'p.id = ?', $ps_province_id );
		}
		
		if ($is_activated > 0)
			$q->andWhere ( 'w.is_activated = ?', $is_activated );

		$q->orderBy('w.iorder');

		return $q;
	}

	/**
	 * Tao SQL lay danh sach co so theo theo ps_customer_id
	 *
	 * @return mixed	 
	*/
	public function sqlGetLisstByCustomerId($ps_customer_id, $ps_workplace_id = null, $is_activated = null) {

		$q = $this->createQuery ()->select ( 'id, title' );

		if ($ps_customer_id > 0)
			$q->andWhere ( 'ps_customer_id = ?', $ps_customer_id );

		if (is_array ( $ps_workplace_id ))
			$q->andWhereIn ( 'id', $ps_workplace_id );
		elseif ($ps_workplace_id > 0)
			$q->andWhere ( 'id = ?', $ps_workplace_id );

		if ($is_activated > 0)
			$q->andWhere ( 'is_activated = ?', $is_activated );

		$q->orderBy ( 'iorder' );

		return $q;

	}

	/**
	 * Tao SQL lay danh sach theo ps_customer_id
	 *
	 * @return $list obj
	*/
	public function setSQLByCustomerId($getField = 'id, title', $psCustomerId = null, $is_activated = null) {

		$q = $this->createQuery ()->select ( $getField != '' ? $getField : '*' );

		if ($psCustomerId > 0)
			$q->addWhere ( 'ps_customer_id = ?', $psCustomerId );

		if ($is_activated > 0)
			$q->addWhere ( 'is_activated = ?', $is_activated );

		$q->orderBy ( 'iorder' );

		return $q;

	}

	public function getSQLByCustomerId($getField = 'id, title', $psCustomerId = null, $is_activated = null) {

		$chois = array ();

		foreach ( $this->setSQLByCustomerId ( $getField, $psCustomerId, $is_activated )->execute () as $obj ) {
			$chois [$obj->getId ()] = $obj->getTitle ();
		}

		return $chois;

	}

	/**
	 * Lay danh sach theo params
	 *
	 * @return $list group obj by ps_workplace_id
	**/
	public function getGroupPsClassRooms($ps_customer_id) {

		$ps_class_rooms = $this->createQuery ( 'a' )->select ( 'a.title AS title, a.id ,b.id AS ps_class_room_id, b.title AS ps_class_room_title' )->leftJoin ( 'a.PsClassRooms b' )->where ( 'a.ps_customer_id = ?', $ps_customer_id )->execute ();

		$chois = array ();

		$count_ps_class_room = count ( $ps_class_rooms );

		for($i = 0; $i < $count_ps_class_room - 1; $i ++) {
			for($j = 1; $j < $count_ps_class_room; $j ++) {
				if ($ps_class_rooms [$i]->getId () == $ps_class_rooms [$j]->getId ()) {
					$chois [$ps_class_rooms [$i]->getTitle ()] [$ps_class_rooms [$i]->get ( 'ps_class_room_id' )] = $ps_class_rooms [$i]->get ( 'ps_class_room_title' );
				}
			}
		}

		return $chois;

	}

	/**
	 * Lay so co so cua truong hoc
	 *
	 * @author thangnc
	 *        
	 * @param ps_customer_id
	 * @return int
	**/
	public function getNumberWorkPlacesByCustomerId($ps_customer_id) {

		$query = $this->createQuery ( 'a' )->select ( 'a.id' )->addWhere ( 'a.ps_customer_id = ?', $ps_customer_id )->count ();

		return $query;

	}

	/**
	 * Lay danh sach co so cua truong hoc
	 *
	 * @author ndviet
	 *        
	 * @param ps_customer_id
	 * @return mixed
	**/
	public function getWorkPlacesByCustomerId($ps_customer_id, $is_activated = null) {

		$query = $this->createQuery ( 'a' );
		$query->select ( 'a.id AS id,' . 'a.title AS title,' . 'a.address AS address,' . 'a.phone AS phone,' . 'a.description AS description,' . 'a.note AS note,' . 'a.is_activated AS is_activated' );

		$query->addWhere ( 'a.ps_customer_id = ?', $ps_customer_id );
		
		if (PreString::length($is_activated) > 0) {
			$query->addWhere ( 'a.is_activated = ?', $is_activated );
		}

		$query->orderBy ( 'a.iorder' );

		return $query->execute ();

	}

	/**
	 * Lay thong tin co so
	 *
	 * @author Phung Van Thanh
	 *        
	 * @param $workplace_id
	**/
	public function getWorkPlacesByWorkPlacesId($ps_workplace_id) {

		$query = $this->createQuery ( 'wp' );
		$query->select ( 'wp.title AS name,
        wp.id AS wp_id, wp.title AS title,wp.address as address, wp.config_template_receipt_export as config_template_receipt_export,wp.ps_customer_id AS ps_customer_id,
        wp.config_template_report_export as config_template_report_export,wp.config_start_date_system_fee as config_start_date_system_fee,
        wp.phone as tel, wp.email as email,wp.config_choose_charge_showlate as config_choose_charge_showlate,wp.config_time_receive_valid as config_time_receive_valid,
		wp.config_choose_attendances_relative as config_choose_attendances_relative,wp.from_time_notication_attendances as from_time_notication_attendances,wp.to_time_notication_attendances as to_time_notication_attendances,
        cus.id as cus_id,cus.title as cus_title, cus.year_data as year_data, cus.logo as logo,cus.mobile as mobile' );
		$query->innerJoin ( 'wp.PsCustomer cus' );
		$query->addWhere ( 'wp.id = ?', $ps_workplace_id );

		return $query->fetchOne ();

	}

	/**
	 * Lay ten cac co so cua truong hoc
	 *
	 * @author Nguyen Chien Thang(ntsc279@gmail.com)
	 *        
	 * @param
	 *        	int-$ps_customer_id
	 * @return $list
	 */
	public function getListShortWorkPlacesByCustomerId($ps_customer_id) {

		$query = $this->createQuery ( 'a' )->select ( 'a.id,a.title' )->where ( 'a.ps_customer_id = ?', $ps_customer_id )->addOrderBy ( 'a.iorder ASC' );
		return $query->execute ();

	}

	/**
	 * Lay chi tiet co so
	 *
	 * @author ndviet
	 *        
	 * @param
	 *        	work_place_id
	 * @return $obj
	 */
	public function getWorkPlaceById($ps_work_place_id) {

		$query = $this->createQuery ( 'w' );
		$query->select ( 'w.title AS title,' . 'w.address AS address,' . 'w.phone AS phone,' . 'w.description AS description,' . 'w.note AS note,' . 'w.is_activated AS is_activated,' . 'w.created_at AS created_at,' . 'w.updated_at AS updated_at,' . 'CONCAT(uc.first_name, " ", uc.last_name) AS created_by,' . 'CONCAT(ud.first_name, " ", ud.last_name) AS updated_by' );

		$query->leftJoin ( 'w.UserCreated as uc' );
		$query->leftJoin ( 'w.UserUpdated as ud' );
		$query->addWhere ( 'w.id = ?', $ps_work_place_id );

		return $query->fetchOne ();

	}

	/**
	 * Lay chi tiet co so
	 *
	 * @author Nguyen Chien Thang
	 * update ThanhPV - 15/07/2019
	 * $getField = null
	 * 
	 * @param
	 *        	work_place_id
	 * @return mixed 
	 */
	public function getWorkPlaceActivatedById($ps_work_place_id,$getField = null) {

		$query = $this->createQuery ( 'w' )->select ( $getField != '' ? $getField : '*' )->where ( 'w.is_activated =?', PreSchool::ACTIVE )->andWhere ( 'w.id = ?', $ps_work_place_id );

		return $query->fetchOne ();
	}
	
	/**
	 * Lay Column cua co so
	 * @author Nguyen Chien Thang
	 *
	 * @param $work_place_id int
	 * 
	 * @return mixed
	 */
	public function getColumnWorkPlaceById($ps_work_place_id,$getField = null) {
		
		$query = $this->createQuery ( 'w' )->select ( $getField != '' ? $getField : '*' )->where ('w.id = ?', $ps_work_place_id );
		
		return $query->fetchOne ();
	}

	/**
	 * lay danh sach lop va co so
	 *
	 * @param int $ps_customer_id
	 * @return mixed
	 */
	public function getWorkPlaceClass($ps_customer_id) {

		$query = $this->createQuery ( 'w' );

		$query->select ( 'w.id AS work_place_id,' . 'w.title AS work_place_title,' . 'cl.id AS class_id,' . 'cl.name AS class_name,' . 'cl.student_student AS student_number' );

		$query->innerJoin ( 'w.PsClassRooms cr ON w.id = cr.ps_workplace_id' );

		$query->innerJoin ( 'cr.MyClass cl ON cr.id = cl.ps_class_room_id' );

		$query->addWhere ( 'w.ps_customer_id = ?', $ps_customer_id );

		return $query->execute ();

	}

}