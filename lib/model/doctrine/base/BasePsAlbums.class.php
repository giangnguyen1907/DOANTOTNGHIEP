<?php

/**
 * BasePsAlbums
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ps_customer_id
 * @property string $album_key
 * @property string $url_album
 * @property string $title
 * @property integer $is_activated
 * @property string $note
 * @property integer $number_push_activated
 * @property integer $number_view
 * @property integer $number_like
 * @property integer $number_dislike
 * @property integer $number_img
 * @property integer $ps_class_id
 * @property integer $ps_service_course_schedule_id
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property PsServiceCourseSchedules $PsServiceCourseSchedules
 * @property MyClass $MyClass
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * @property Doctrine_Collection $PsAlbumItems
 * @property Doctrine_Collection $PsAlbumComments
 * @property Doctrine_Collection $PsAlbumLikes
 * 
 * @method integer                  getPsCustomerId()                  Returns the current record's "ps_customer_id" value
 * @method string                   getAlbumKey()                      Returns the current record's "album_key" value
 * @method string                   getUrlAlbum()                      Returns the current record's "url_album" value
 * @method string                   getTitle()                         Returns the current record's "title" value
 * @method integer                  getIsActivated()                   Returns the current record's "is_activated" value
 * @method string                   getNote()                          Returns the current record's "note" value
 * @method integer                  getNumberPushActivated()           Returns the current record's "number_push_activated" value
 * @method integer                  getNumberView()                    Returns the current record's "number_view" value
 * @method integer                  getNumberLike()                    Returns the current record's "number_like" value
 * @method integer                  getNumberDislike()                 Returns the current record's "number_dislike" value
 * @method integer                  getNumberImg()                     Returns the current record's "number_img" value
 * @method integer                  getPsClassId()                     Returns the current record's "ps_class_id" value
 * @method integer                  getPsServiceCourseScheduleId()     Returns the current record's "ps_service_course_schedule_id" value
 * @method integer                  getUserCreatedId()                 Returns the current record's "user_created_id" value
 * @method integer                  getUserUpdatedId()                 Returns the current record's "user_updated_id" value
 * @method PsServiceCourseSchedules getPsServiceCourseSchedules()      Returns the current record's "PsServiceCourseSchedules" value
 * @method MyClass                  getMyClass()                       Returns the current record's "MyClass" value
 * @method sfGuardUser              getUserCreated()                   Returns the current record's "UserCreated" value
 * @method sfGuardUser              getUserUpdated()                   Returns the current record's "UserUpdated" value
 * @method Doctrine_Collection      getPsAlbumItems()                  Returns the current record's "PsAlbumItems" collection
 * @method Doctrine_Collection      getPsAlbumComments()               Returns the current record's "PsAlbumComments" collection
 * @method Doctrine_Collection      getPsAlbumLikes()                  Returns the current record's "PsAlbumLikes" collection
 * @method PsAlbums                 setPsCustomerId()                  Sets the current record's "ps_customer_id" value
 * @method PsAlbums                 setAlbumKey()                      Sets the current record's "album_key" value
 * @method PsAlbums                 setUrlAlbum()                      Sets the current record's "url_album" value
 * @method PsAlbums                 setTitle()                         Sets the current record's "title" value
 * @method PsAlbums                 setIsActivated()                   Sets the current record's "is_activated" value
 * @method PsAlbums                 setNote()                          Sets the current record's "note" value
 * @method PsAlbums                 setNumberPushActivated()           Sets the current record's "number_push_activated" value
 * @method PsAlbums                 setNumberView()                    Sets the current record's "number_view" value
 * @method PsAlbums                 setNumberLike()                    Sets the current record's "number_like" value
 * @method PsAlbums                 setNumberDislike()                 Sets the current record's "number_dislike" value
 * @method PsAlbums                 setNumberImg()                     Sets the current record's "number_img" value
 * @method PsAlbums                 setPsClassId()                     Sets the current record's "ps_class_id" value
 * @method PsAlbums                 setPsServiceCourseScheduleId()     Sets the current record's "ps_service_course_schedule_id" value
 * @method PsAlbums                 setUserCreatedId()                 Sets the current record's "user_created_id" value
 * @method PsAlbums                 setUserUpdatedId()                 Sets the current record's "user_updated_id" value
 * @method PsAlbums                 setPsServiceCourseSchedules()      Sets the current record's "PsServiceCourseSchedules" value
 * @method PsAlbums                 setMyClass()                       Sets the current record's "MyClass" value
 * @method PsAlbums                 setUserCreated()                   Sets the current record's "UserCreated" value
 * @method PsAlbums                 setUserUpdated()                   Sets the current record's "UserUpdated" value
 * @method PsAlbums                 setPsAlbumItems()                  Sets the current record's "PsAlbumItems" collection
 * @method PsAlbums                 setPsAlbumComments()               Sets the current record's "PsAlbumComments" collection
 * @method PsAlbums                 setPsAlbumLikes()                  Sets the current record's "PsAlbumLikes" collection
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePsAlbums extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ps_albums');
        $this->hasColumn('ps_customer_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('album_key', 'string', 100, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('url_album', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_activated', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('note', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('number_push_activated', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('number_view', 'integer', 11, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 11,
             ));
        $this->hasColumn('number_like', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('number_dislike', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('number_img', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('ps_class_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('ps_service_course_schedule_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             ));


        $this->index('album_key_idx', array(
             'fields' => 
             array(
              0 => 'album_key',
             ),
             ));
        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8mb4_unicode_ci');
        $this->option('charset', 'utf8mb4');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PsServiceCourseSchedules', array(
             'local' => 'ps_service_course_schedule_id',
             'foreign' => 'id'));

        $this->hasOne('MyClass', array(
             'local' => 'ps_class_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $this->hasMany('PsAlbumItems', array(
             'local' => 'id',
             'foreign' => 'album_id'));

        $this->hasMany('PsAlbumComments', array(
             'local' => 'id',
             'foreign' => 'album_id'));

        $this->hasMany('PsAlbumLikes', array(
             'local' => 'id',
             'foreign' => 'album_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}