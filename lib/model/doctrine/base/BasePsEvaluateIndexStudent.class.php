<?php

/**
 * BasePsEvaluateIndexStudent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $evaluate_index_criteria_id
 * @property integer $ps_student_id
 * @property integer $evaluate_index_symbol_id
 * @property date $date_at
 * @property boolean $is_public
 * @property boolean $is_awaiting_approval
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property Student $Student
 * @property PsEvaluateIndexCriteria $PsEvaluateIndexCriteria
 * @property PsEvaluateIndexSymbol $PsEvaluateIndexSymbol
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * 
 * @method integer                 getEvaluateIndexCriteriaId()    Returns the current record's "evaluate_index_criteria_id" value
 * @method integer                 getPsStudentId()                Returns the current record's "ps_student_id" value
 * @method integer                 getEvaluateIndexSymbolId()      Returns the current record's "evaluate_index_symbol_id" value
 * @method date                    getDateAt()                     Returns the current record's "date_at" value
 * @method boolean                 getIsPublic()                   Returns the current record's "is_public" value
 * @method boolean                 getIsAwaitingApproval()         Returns the current record's "is_awaiting_approval" value
 * @method integer                 getUserCreatedId()              Returns the current record's "user_created_id" value
 * @method integer                 getUserUpdatedId()              Returns the current record's "user_updated_id" value
 * @method Student                 getStudent()                    Returns the current record's "Student" value
 * @method PsEvaluateIndexCriteria getPsEvaluateIndexCriteria()    Returns the current record's "PsEvaluateIndexCriteria" value
 * @method PsEvaluateIndexSymbol   getPsEvaluateIndexSymbol()      Returns the current record's "PsEvaluateIndexSymbol" value
 * @method sfGuardUser             getUserCreated()                Returns the current record's "UserCreated" value
 * @method sfGuardUser             getUserUpdated()                Returns the current record's "UserUpdated" value
 * @method PsEvaluateIndexStudent  setEvaluateIndexCriteriaId()    Sets the current record's "evaluate_index_criteria_id" value
 * @method PsEvaluateIndexStudent  setPsStudentId()                Sets the current record's "ps_student_id" value
 * @method PsEvaluateIndexStudent  setEvaluateIndexSymbolId()      Sets the current record's "evaluate_index_symbol_id" value
 * @method PsEvaluateIndexStudent  setDateAt()                     Sets the current record's "date_at" value
 * @method PsEvaluateIndexStudent  setIsPublic()                   Sets the current record's "is_public" value
 * @method PsEvaluateIndexStudent  setIsAwaitingApproval()         Sets the current record's "is_awaiting_approval" value
 * @method PsEvaluateIndexStudent  setUserCreatedId()              Sets the current record's "user_created_id" value
 * @method PsEvaluateIndexStudent  setUserUpdatedId()              Sets the current record's "user_updated_id" value
 * @method PsEvaluateIndexStudent  setStudent()                    Sets the current record's "Student" value
 * @method PsEvaluateIndexStudent  setPsEvaluateIndexCriteria()    Sets the current record's "PsEvaluateIndexCriteria" value
 * @method PsEvaluateIndexStudent  setPsEvaluateIndexSymbol()      Sets the current record's "PsEvaluateIndexSymbol" value
 * @method PsEvaluateIndexStudent  setUserCreated()                Sets the current record's "UserCreated" value
 * @method PsEvaluateIndexStudent  setUserUpdated()                Sets the current record's "UserUpdated" value
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePsEvaluateIndexStudent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ps_evaluate_index_student');
        $this->hasColumn('evaluate_index_criteria_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('ps_student_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('evaluate_index_symbol_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('date_at', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('is_awaiting_approval', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Student', array(
             'local' => 'ps_student_id',
             'foreign' => 'id'));

        $this->hasOne('PsEvaluateIndexCriteria', array(
             'local' => 'evaluate_index_criteria_id',
             'foreign' => 'id'));

        $this->hasOne('PsEvaluateIndexSymbol', array(
             'local' => 'evaluate_index_symbol_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}