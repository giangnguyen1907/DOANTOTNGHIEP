<?php

/**
 * BasePsUserCustomers
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $ps_customer_id
 * @property string $ps_workplace_text
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property sfGuardUser $Users
 * @property PsCustomer $PsCustomer
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * 
 * @method integer         getUserId()            Returns the current record's "user_id" value
 * @method integer         getPsCustomerId()      Returns the current record's "ps_customer_id" value
 * @method string          getPsWorkplaceText()   Returns the current record's "ps_workplace_text" value
 * @method integer         getUserCreatedId()     Returns the current record's "user_created_id" value
 * @method integer         getUserUpdatedId()     Returns the current record's "user_updated_id" value
 * @method sfGuardUser     getUsers()             Returns the current record's "Users" value
 * @method PsCustomer      getPsCustomer()        Returns the current record's "PsCustomer" value
 * @method sfGuardUser     getUserCreated()       Returns the current record's "UserCreated" value
 * @method sfGuardUser     getUserUpdated()       Returns the current record's "UserUpdated" value
 * @method PsUserCustomers setUserId()            Sets the current record's "user_id" value
 * @method PsUserCustomers setPsCustomerId()      Sets the current record's "ps_customer_id" value
 * @method PsUserCustomers setPsWorkplaceText()   Sets the current record's "ps_workplace_text" value
 * @method PsUserCustomers setUserCreatedId()     Sets the current record's "user_created_id" value
 * @method PsUserCustomers setUserUpdatedId()     Sets the current record's "user_updated_id" value
 * @method PsUserCustomers setUsers()             Sets the current record's "Users" value
 * @method PsUserCustomers setPsCustomer()        Sets the current record's "PsCustomer" value
 * @method PsUserCustomers setUserCreated()       Sets the current record's "UserCreated" value
 * @method PsUserCustomers setUserUpdated()       Sets the current record's "UserUpdated" value
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePsUserCustomers extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ps_user_customers');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('ps_customer_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('ps_workplace_text', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as Users', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('PsCustomer', array(
             'local' => 'ps_customer_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}