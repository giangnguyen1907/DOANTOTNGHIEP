<?php

/**
 * BasePsCronSettings
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $cron_code
 * @property string $title
 * @property integer $ioffset
 * @property integer $last_id
 * @property timestamp $last_runtime
 * @property boolean $is_activated
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * 
 * @method string         getCronCode()        Returns the current record's "cron_code" value
 * @method string         getTitle()           Returns the current record's "title" value
 * @method integer        getIoffset()         Returns the current record's "ioffset" value
 * @method integer        getLastId()          Returns the current record's "last_id" value
 * @method timestamp      getLastRuntime()     Returns the current record's "last_runtime" value
 * @method boolean        getIsActivated()     Returns the current record's "is_activated" value
 * @method integer        getUserCreatedId()   Returns the current record's "user_created_id" value
 * @method integer        getUserUpdatedId()   Returns the current record's "user_updated_id" value
 * @method sfGuardUser    getUserCreated()     Returns the current record's "UserCreated" value
 * @method sfGuardUser    getUserUpdated()     Returns the current record's "UserUpdated" value
 * @method PsCronSettings setCronCode()        Sets the current record's "cron_code" value
 * @method PsCronSettings setTitle()           Sets the current record's "title" value
 * @method PsCronSettings setIoffset()         Sets the current record's "ioffset" value
 * @method PsCronSettings setLastId()          Sets the current record's "last_id" value
 * @method PsCronSettings setLastRuntime()     Sets the current record's "last_runtime" value
 * @method PsCronSettings setIsActivated()     Sets the current record's "is_activated" value
 * @method PsCronSettings setUserCreatedId()   Sets the current record's "user_created_id" value
 * @method PsCronSettings setUserUpdatedId()   Sets the current record's "user_updated_id" value
 * @method PsCronSettings setUserCreated()     Sets the current record's "UserCreated" value
 * @method PsCronSettings setUserUpdated()     Sets the current record's "UserUpdated" value
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePsCronSettings extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ps_cron_settings');
        $this->hasColumn('cron_code', 'string', 50, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('title', 'string', 155, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 155,
             ));
        $this->hasColumn('ioffset', 'integer', 11, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 5000,
             'length' => 11,
             ));
        $this->hasColumn('last_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('last_runtime', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('is_activated', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}