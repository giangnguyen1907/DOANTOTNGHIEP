<?php

/**
 * BasePsFeeNewsLetters
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ps_workplace_id
 * @property integer $ps_year_month
 * @property string $title
 * @property string $note
 * @property boolean $is_public
 * @property integer $number_push_notication
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property PsWorkPlaces $PsWorkPlaces
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * 
 * @method integer          getPsWorkplaceId()          Returns the current record's "ps_workplace_id" value
 * @method integer          getPsYearMonth()            Returns the current record's "ps_year_month" value
 * @method string           getTitle()                  Returns the current record's "title" value
 * @method string           getNote()                   Returns the current record's "note" value
 * @method boolean          getIsPublic()               Returns the current record's "is_public" value
 * @method integer          getNumberPushNotication()   Returns the current record's "number_push_notication" value
 * @method integer          getUserCreatedId()          Returns the current record's "user_created_id" value
 * @method integer          getUserUpdatedId()          Returns the current record's "user_updated_id" value
 * @method PsWorkPlaces     getPsWorkPlaces()           Returns the current record's "PsWorkPlaces" value
 * @method sfGuardUser      getUserCreated()            Returns the current record's "UserCreated" value
 * @method sfGuardUser      getUserUpdated()            Returns the current record's "UserUpdated" value
 * @method PsFeeNewsLetters setPsWorkplaceId()          Sets the current record's "ps_workplace_id" value
 * @method PsFeeNewsLetters setPsYearMonth()            Sets the current record's "ps_year_month" value
 * @method PsFeeNewsLetters setTitle()                  Sets the current record's "title" value
 * @method PsFeeNewsLetters setNote()                   Sets the current record's "note" value
 * @method PsFeeNewsLetters setIsPublic()               Sets the current record's "is_public" value
 * @method PsFeeNewsLetters setNumberPushNotication()   Sets the current record's "number_push_notication" value
 * @method PsFeeNewsLetters setUserCreatedId()          Sets the current record's "user_created_id" value
 * @method PsFeeNewsLetters setUserUpdatedId()          Sets the current record's "user_updated_id" value
 * @method PsFeeNewsLetters setPsWorkPlaces()           Sets the current record's "PsWorkPlaces" value
 * @method PsFeeNewsLetters setUserCreated()            Sets the current record's "UserCreated" value
 * @method PsFeeNewsLetters setUserUpdated()            Sets the current record's "UserUpdated" value
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePsFeeNewsLetters extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ps_fee_news_letters');
        $this->hasColumn('ps_workplace_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('ps_year_month', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('note', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('number_push_notication', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             ));


        $this->index('ps_year_month_idx', array(
             'fields' => 
             array(
              0 => 'ps_year_month',
             ),
             ));
        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PsWorkPlaces', array(
             'local' => 'ps_workplace_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}