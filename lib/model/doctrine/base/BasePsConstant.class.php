<?php

/**
 * BasePsConstant
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $c_code
 * @property string $title
 * @property string $value_default
 * @property string $note
 * @property integer $iorder
 * @property boolean $is_notremove
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * @property Doctrine_Collection $PsCustomers
 * 
 * @method string              getCCode()           Returns the current record's "c_code" value
 * @method string              getTitle()           Returns the current record's "title" value
 * @method string              getValueDefault()    Returns the current record's "value_default" value
 * @method string              getNote()            Returns the current record's "note" value
 * @method integer             getIorder()          Returns the current record's "iorder" value
 * @method boolean             getIsNotremove()     Returns the current record's "is_notremove" value
 * @method integer             getUserCreatedId()   Returns the current record's "user_created_id" value
 * @method integer             getUserUpdatedId()   Returns the current record's "user_updated_id" value
 * @method sfGuardUser         getUserCreated()     Returns the current record's "UserCreated" value
 * @method sfGuardUser         getUserUpdated()     Returns the current record's "UserUpdated" value
 * @method Doctrine_Collection getPsCustomers()     Returns the current record's "PsCustomers" collection
 * @method PsConstant          setCCode()           Sets the current record's "c_code" value
 * @method PsConstant          setTitle()           Sets the current record's "title" value
 * @method PsConstant          setValueDefault()    Sets the current record's "value_default" value
 * @method PsConstant          setNote()            Sets the current record's "note" value
 * @method PsConstant          setIorder()          Sets the current record's "iorder" value
 * @method PsConstant          setIsNotremove()     Sets the current record's "is_notremove" value
 * @method PsConstant          setUserCreatedId()   Sets the current record's "user_created_id" value
 * @method PsConstant          setUserUpdatedId()   Sets the current record's "user_updated_id" value
 * @method PsConstant          setUserCreated()     Sets the current record's "UserCreated" value
 * @method PsConstant          setUserUpdated()     Sets the current record's "UserUpdated" value
 * @method PsConstant          setPsCustomers()     Sets the current record's "PsCustomers" collection
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePsConstant extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ps_constant');
        $this->hasColumn('c_code', 'string', 100, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('value_default', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('note', 'string', 300, array(
             'type' => 'string',
             'length' => 300,
             ));
        $this->hasColumn('iorder', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('is_notremove', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $this->hasMany('PsConstantOption as PsCustomers', array(
             'local' => 'id',
             'foreign' => 'ps_constant_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}