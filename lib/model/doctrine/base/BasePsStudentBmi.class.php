<?php

/**
 * BasePsStudentBmi
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property double $min_height1
 * @property double $max_height1
 * @property double $medium_height
 * @property double $min_height
 * @property double $max_height
 * @property double $min_weight1
 * @property double $max_weight1
 * @property double $medium_weight
 * @property double $min_weight
 * @property double $max_weight
 * @property boolean $sex
 * @property integer $is_month
 * @property string $note
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * 
 * @method double       getMinHeight1()      Returns the current record's "min_height1" value
 * @method double       getMaxHeight1()      Returns the current record's "max_height1" value
 * @method double       getMediumHeight()    Returns the current record's "medium_height" value
 * @method double       getMinHeight()       Returns the current record's "min_height" value
 * @method double       getMaxHeight()       Returns the current record's "max_height" value
 * @method double       getMinWeight1()      Returns the current record's "min_weight1" value
 * @method double       getMaxWeight1()      Returns the current record's "max_weight1" value
 * @method double       getMediumWeight()    Returns the current record's "medium_weight" value
 * @method double       getMinWeight()       Returns the current record's "min_weight" value
 * @method double       getMaxWeight()       Returns the current record's "max_weight" value
 * @method boolean      getSex()             Returns the current record's "sex" value
 * @method integer      getIsMonth()         Returns the current record's "is_month" value
 * @method string       getNote()            Returns the current record's "note" value
 * @method integer      getUserCreatedId()   Returns the current record's "user_created_id" value
 * @method integer      getUserUpdatedId()   Returns the current record's "user_updated_id" value
 * @method sfGuardUser  getUserCreated()     Returns the current record's "UserCreated" value
 * @method sfGuardUser  getUserUpdated()     Returns the current record's "UserUpdated" value
 * @method PsStudentBmi setMinHeight1()      Sets the current record's "min_height1" value
 * @method PsStudentBmi setMaxHeight1()      Sets the current record's "max_height1" value
 * @method PsStudentBmi setMediumHeight()    Sets the current record's "medium_height" value
 * @method PsStudentBmi setMinHeight()       Sets the current record's "min_height" value
 * @method PsStudentBmi setMaxHeight()       Sets the current record's "max_height" value
 * @method PsStudentBmi setMinWeight1()      Sets the current record's "min_weight1" value
 * @method PsStudentBmi setMaxWeight1()      Sets the current record's "max_weight1" value
 * @method PsStudentBmi setMediumWeight()    Sets the current record's "medium_weight" value
 * @method PsStudentBmi setMinWeight()       Sets the current record's "min_weight" value
 * @method PsStudentBmi setMaxWeight()       Sets the current record's "max_weight" value
 * @method PsStudentBmi setSex()             Sets the current record's "sex" value
 * @method PsStudentBmi setIsMonth()         Sets the current record's "is_month" value
 * @method PsStudentBmi setNote()            Sets the current record's "note" value
 * @method PsStudentBmi setUserCreatedId()   Sets the current record's "user_created_id" value
 * @method PsStudentBmi setUserUpdatedId()   Sets the current record's "user_updated_id" value
 * @method PsStudentBmi setUserCreated()     Sets the current record's "UserCreated" value
 * @method PsStudentBmi setUserUpdated()     Sets the current record's "UserUpdated" value
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePsStudentBmi extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ps_student_bmi');
        $this->hasColumn('min_height1', 'double', null, array(
             'type' => 'double',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('max_height1', 'double', null, array(
             'type' => 'double',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('medium_height', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             ));
        $this->hasColumn('min_height', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             ));
        $this->hasColumn('max_height', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             ));
        $this->hasColumn('min_weight1', 'double', null, array(
             'type' => 'double',
             'notnull' => false,
             ));
        $this->hasColumn('max_weight1', 'double', null, array(
             'type' => 'double',
             'notnull' => false,
             ));
        $this->hasColumn('medium_weight', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             ));
        $this->hasColumn('min_weight', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             ));
        $this->hasColumn('max_weight', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             ));
        $this->hasColumn('sex', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('is_month', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('note', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}