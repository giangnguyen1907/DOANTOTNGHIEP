<?php

/**
 * BasePsAdvices
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $student_id
 * @property integer $user_id
 * @property integer $category_id
 * @property string $title
 * @property string $content
 * @property boolean $is_activated
 * @property integer $relative_id
 * @property integer $user_created_id
 * @property datetime $date_at
 * @property Student $PsStudent
 * @property Relative $Relative
 * @property PsAdviceCategories $PsAdviceCategories
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserId
 * @property Doctrine_Collection $PsAdviceFeedbacks
 * 
 * @method integer             getStudentId()          Returns the current record's "student_id" value
 * @method integer             getUserId()             Returns the current record's "user_id" value
 * @method integer             getCategoryId()         Returns the current record's "category_id" value
 * @method string              getTitle()              Returns the current record's "title" value
 * @method string              getContent()            Returns the current record's "content" value
 * @method boolean             getIsActivated()        Returns the current record's "is_activated" value
 * @method integer             getRelativeId()         Returns the current record's "relative_id" value
 * @method integer             getUserCreatedId()      Returns the current record's "user_created_id" value
 * @method datetime            getDateAt()             Returns the current record's "date_at" value
 * @method Student             getPsStudent()          Returns the current record's "PsStudent" value
 * @method Relative            getRelative()           Returns the current record's "Relative" value
 * @method PsAdviceCategories  getPsAdviceCategories() Returns the current record's "PsAdviceCategories" value
 * @method sfGuardUser         getUserCreated()        Returns the current record's "UserCreated" value
 * @method sfGuardUser         getUserId()             Returns the current record's "UserId" value
 * @method Doctrine_Collection getPsAdviceFeedbacks()  Returns the current record's "PsAdviceFeedbacks" collection
 * @method PsAdvices           setStudentId()          Sets the current record's "student_id" value
 * @method PsAdvices           setUserId()             Sets the current record's "user_id" value
 * @method PsAdvices           setCategoryId()         Sets the current record's "category_id" value
 * @method PsAdvices           setTitle()              Sets the current record's "title" value
 * @method PsAdvices           setContent()            Sets the current record's "content" value
 * @method PsAdvices           setIsActivated()        Sets the current record's "is_activated" value
 * @method PsAdvices           setRelativeId()         Sets the current record's "relative_id" value
 * @method PsAdvices           setUserCreatedId()      Sets the current record's "user_created_id" value
 * @method PsAdvices           setDateAt()             Sets the current record's "date_at" value
 * @method PsAdvices           setPsStudent()          Sets the current record's "PsStudent" value
 * @method PsAdvices           setRelative()           Sets the current record's "Relative" value
 * @method PsAdvices           setPsAdviceCategories() Sets the current record's "PsAdviceCategories" value
 * @method PsAdvices           setUserCreated()        Sets the current record's "UserCreated" value
 * @method PsAdvices           setUserId()             Sets the current record's "UserId" value
 * @method PsAdvices           setPsAdviceFeedbacks()  Sets the current record's "PsAdviceFeedbacks" collection
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePsAdvices extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ps_advices');
        $this->hasColumn('student_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('content', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_activated', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('relative_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('date_at', 'datetime', null, array(
             'type' => 'datetime',
             ));


        $this->index('title_idx', array(
             'fields' => 
             array(
              0 => 'title',
             ),
             ));
        $this->index('student_idx', array(
             'fields' => 
             array(
              0 => 'student_id',
             ),
             ));
        $this->index('category_idx', array(
             'fields' => 
             array(
              0 => 'category_id',
             ),
             ));
        $this->index('user_idx', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             ));
        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Student as PsStudent', array(
             'local' => 'student_id',
             'foreign' => 'id'));

        $this->hasOne('Relative', array(
             'local' => 'relative_id',
             'foreign' => 'id'));

        $this->hasOne('PsAdviceCategories', array(
             'local' => 'category_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserId', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('PsAdviceFeedbacks', array(
             'local' => 'id',
             'foreign' => 'advice_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}