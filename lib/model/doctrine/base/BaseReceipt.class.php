<?php

/**
 * BaseReceipt
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ps_customer_id
 * @property integer $student_id
 * @property string $title
 * @property string $receipt_no
 * @property datetime $receipt_date
 * @property integer $payment_order
 * @property string $file_name
 * @property double $collected_amount
 * @property double $balance_amount
 * @property double $balance_last_month_amount
 * @property double $late_payment_amount
 * @property integer $is_current
 * @property integer $is_import
 * @property boolean $payment_status
 * @property integer $relative_id
 * @property string $payment_relative_name
 * @property datetime $payment_date
 * @property string $payment_type
 * @property string $cashier_name
 * @property string $note
 * @property boolean $is_public
 * @property integer $number_push_notication
 * @property string $note_edit
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property Student $Student
 * @property CollectedReceipt $CollectedReceipt
 * @property Relative $Relative
 * @property PsCustomer $PsCustomer
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * 
 * @method integer          getPsCustomerId()              Returns the current record's "ps_customer_id" value
 * @method integer          getStudentId()                 Returns the current record's "student_id" value
 * @method string           getTitle()                     Returns the current record's "title" value
 * @method string           getReceiptNo()                 Returns the current record's "receipt_no" value
 * @method datetime         getReceiptDate()               Returns the current record's "receipt_date" value
 * @method integer          getPaymentOrder()              Returns the current record's "payment_order" value
 * @method string           getFileName()                  Returns the current record's "file_name" value
 * @method double           getCollectedAmount()           Returns the current record's "collected_amount" value
 * @method double           getBalanceAmount()             Returns the current record's "balance_amount" value
 * @method double           getBalanceLastMonthAmount()    Returns the current record's "balance_last_month_amount" value
 * @method double           getLatePaymentAmount()         Returns the current record's "late_payment_amount" value
 * @method integer          getIsCurrent()                 Returns the current record's "is_current" value
 * @method integer          getIsImport()                  Returns the current record's "is_import" value
 * @method boolean          getPaymentStatus()             Returns the current record's "payment_status" value
 * @method integer          getRelativeId()                Returns the current record's "relative_id" value
 * @method string           getPaymentRelativeName()       Returns the current record's "payment_relative_name" value
 * @method datetime         getPaymentDate()               Returns the current record's "payment_date" value
 * @method string           getPaymentType()               Returns the current record's "payment_type" value
 * @method string           getCashierName()               Returns the current record's "cashier_name" value
 * @method string           getNote()                      Returns the current record's "note" value
 * @method boolean          getIsPublic()                  Returns the current record's "is_public" value
 * @method integer          getNumberPushNotication()      Returns the current record's "number_push_notication" value
 * @method string           getNoteEdit()                  Returns the current record's "note_edit" value
 * @method integer          getUserCreatedId()             Returns the current record's "user_created_id" value
 * @method integer          getUserUpdatedId()             Returns the current record's "user_updated_id" value
 * @method Student          getStudent()                   Returns the current record's "Student" value
 * @method CollectedReceipt getCollectedReceipt()          Returns the current record's "CollectedReceipt" value
 * @method Relative         getRelative()                  Returns the current record's "Relative" value
 * @method PsCustomer       getPsCustomer()                Returns the current record's "PsCustomer" value
 * @method sfGuardUser      getUserCreated()               Returns the current record's "UserCreated" value
 * @method sfGuardUser      getUserUpdated()               Returns the current record's "UserUpdated" value
 * @method Receipt          setPsCustomerId()              Sets the current record's "ps_customer_id" value
 * @method Receipt          setStudentId()                 Sets the current record's "student_id" value
 * @method Receipt          setTitle()                     Sets the current record's "title" value
 * @method Receipt          setReceiptNo()                 Sets the current record's "receipt_no" value
 * @method Receipt          setReceiptDate()               Sets the current record's "receipt_date" value
 * @method Receipt          setPaymentOrder()              Sets the current record's "payment_order" value
 * @method Receipt          setFileName()                  Sets the current record's "file_name" value
 * @method Receipt          setCollectedAmount()           Sets the current record's "collected_amount" value
 * @method Receipt          setBalanceAmount()             Sets the current record's "balance_amount" value
 * @method Receipt          setBalanceLastMonthAmount()    Sets the current record's "balance_last_month_amount" value
 * @method Receipt          setLatePaymentAmount()         Sets the current record's "late_payment_amount" value
 * @method Receipt          setIsCurrent()                 Sets the current record's "is_current" value
 * @method Receipt          setIsImport()                  Sets the current record's "is_import" value
 * @method Receipt          setPaymentStatus()             Sets the current record's "payment_status" value
 * @method Receipt          setRelativeId()                Sets the current record's "relative_id" value
 * @method Receipt          setPaymentRelativeName()       Sets the current record's "payment_relative_name" value
 * @method Receipt          setPaymentDate()               Sets the current record's "payment_date" value
 * @method Receipt          setPaymentType()               Sets the current record's "payment_type" value
 * @method Receipt          setCashierName()               Sets the current record's "cashier_name" value
 * @method Receipt          setNote()                      Sets the current record's "note" value
 * @method Receipt          setIsPublic()                  Sets the current record's "is_public" value
 * @method Receipt          setNumberPushNotication()      Sets the current record's "number_push_notication" value
 * @method Receipt          setNoteEdit()                  Sets the current record's "note_edit" value
 * @method Receipt          setUserCreatedId()             Sets the current record's "user_created_id" value
 * @method Receipt          setUserUpdatedId()             Sets the current record's "user_updated_id" value
 * @method Receipt          setStudent()                   Sets the current record's "Student" value
 * @method Receipt          setCollectedReceipt()          Sets the current record's "CollectedReceipt" value
 * @method Receipt          setRelative()                  Sets the current record's "Relative" value
 * @method Receipt          setPsCustomer()                Sets the current record's "PsCustomer" value
 * @method Receipt          setUserCreated()               Sets the current record's "UserCreated" value
 * @method Receipt          setUserUpdated()               Sets the current record's "UserUpdated" value
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReceipt extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('receipt');
        $this->hasColumn('ps_customer_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('ps_workplace_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('receipt_number', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('student_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('receipt_no', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('receipt_date', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('payment_order', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('file_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('collected_amount', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('balance_amount', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('chietkhau', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('hoantra', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('chietkhau_thangtruoc', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('hoantra_thangtruoc', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('balance_last_month_amount', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('late_payment_amount', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('is_current', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('is_import', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('payment_status', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('relative_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('payment_relative_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('payment_date', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('payment_type', 'string', 2, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 2,
             ));
        $this->hasColumn('cashier_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('note', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('number_push_notication', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('note_edit', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             ));


        $this->index('title_idx', array(
             'fields' => 
             array(
              0 => 'title',
             ),
             ));
        $this->index('student_id_idx', array(
             'fields' => 
             array(
              0 => 'student_id',
             ),
             ));
        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Student', array(
             'local' => 'student_id',
             'foreign' => 'id'));

        $this->hasOne('CollectedReceipt', array(
             'local' => 'id',
             'foreign' => 'receipt_id'));

        $this->hasOne('Relative', array(
             'local' => 'relative_id',
             'foreign' => 'id'));

        $this->hasOne('PsCustomer', array(
             'local' => 'ps_customer_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}