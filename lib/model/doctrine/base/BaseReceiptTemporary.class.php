<?php

/**
 * BaseReceiptTemporary
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ps_customer_id
 * @property integer $student_id
 * @property string $title
 * @property datetime $receipt_date
 * @property double $receivable
 * @property double $collected_amount
 * @property double $balance_amount
 * @property integer $is_current
 * @property integer $is_import
 * @property boolean $payment_status
 * @property integer $relative_id
 * @property string $note
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property Student $Student
 * @property Relative $Relative
 * @property PsCustomer $PsCustomer
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * 
 * @method integer          getPsCustomerId()     Returns the current record's "ps_customer_id" value
 * @method integer          getStudentId()        Returns the current record's "student_id" value
 * @method string           getTitle()            Returns the current record's "title" value
 * @method datetime         getReceiptDate()      Returns the current record's "receipt_date" value
 * @method double           getReceivable()       Returns the current record's "receivable" value
 * @method double           getCollectedAmount()  Returns the current record's "collected_amount" value
 * @method double           getBalanceAmount()    Returns the current record's "balance_amount" value
 * @method integer          getIsCurrent()        Returns the current record's "is_current" value
 * @method integer          getIsImport()         Returns the current record's "is_import" value
 * @method boolean          getPaymentStatus()    Returns the current record's "payment_status" value
 * @method integer          getRelativeId()       Returns the current record's "relative_id" value
 * @method string           getNote()             Returns the current record's "note" value
 * @method integer          getUserCreatedId()    Returns the current record's "user_created_id" value
 * @method integer          getUserUpdatedId()    Returns the current record's "user_updated_id" value
 * @method Student          getStudent()          Returns the current record's "Student" value
 * @method Relative         getRelative()         Returns the current record's "Relative" value
 * @method PsCustomer       getPsCustomer()       Returns the current record's "PsCustomer" value
 * @method sfGuardUser      getUserCreated()      Returns the current record's "UserCreated" value
 * @method sfGuardUser      getUserUpdated()      Returns the current record's "UserUpdated" value
 * @method ReceiptTemporary setPsCustomerId()     Sets the current record's "ps_customer_id" value
 * @method ReceiptTemporary setStudentId()        Sets the current record's "student_id" value
 * @method ReceiptTemporary setTitle()            Sets the current record's "title" value
 * @method ReceiptTemporary setReceiptDate()      Sets the current record's "receipt_date" value
 * @method ReceiptTemporary setReceivable()       Sets the current record's "receivable" value
 * @method ReceiptTemporary setCollectedAmount()  Sets the current record's "collected_amount" value
 * @method ReceiptTemporary setBalanceAmount()    Sets the current record's "balance_amount" value
 * @method ReceiptTemporary setIsCurrent()        Sets the current record's "is_current" value
 * @method ReceiptTemporary setIsImport()         Sets the current record's "is_import" value
 * @method ReceiptTemporary setPaymentStatus()    Sets the current record's "payment_status" value
 * @method ReceiptTemporary setRelativeId()       Sets the current record's "relative_id" value
 * @method ReceiptTemporary setNote()             Sets the current record's "note" value
 * @method ReceiptTemporary setUserCreatedId()    Sets the current record's "user_created_id" value
 * @method ReceiptTemporary setUserUpdatedId()    Sets the current record's "user_updated_id" value
 * @method ReceiptTemporary setStudent()          Sets the current record's "Student" value
 * @method ReceiptTemporary setRelative()         Sets the current record's "Relative" value
 * @method ReceiptTemporary setPsCustomer()       Sets the current record's "PsCustomer" value
 * @method ReceiptTemporary setUserCreated()      Sets the current record's "UserCreated" value
 * @method ReceiptTemporary setUserUpdated()      Sets the current record's "UserUpdated" value
 * 
 * @package    kidsschool.vn
 * @subpackage model
 * @author     kidsschool.vn <contact@kidsschool.vn - ntsc279@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReceiptTemporary extends sfDoctrineRecord {

	public function setTableDefinition() {

		$this->setTableName ( 'receipt_temporary' );
		$this->hasColumn ( 'ps_customer_id', 'integer', null, array (
				'type' => 'integer',
				'notnull' => false ) );
		$this->hasColumn ( 'student_id', 'integer', null, array (
				'type' => 'integer',
				'notnull' => true ) );
		$this->hasColumn ( 'title', 'string', 255, array (
				'type' => 'string',
				'length' => 255 ) );
		$this->hasColumn ( 'receipt_date', 'datetime', null, array (
				'type' => 'datetime' ) );
		$this->hasColumn ( 'receivable', 'double', null, array (
				'type' => 'double' ) );
		$this->hasColumn ( 'collected_amount', 'double', null, array (
				'type' => 'double' ) );
		$this->hasColumn ( 'balance_amount', 'double', null, array (
				'type' => 'double' ) );
		$this->hasColumn ( 'is_current', 'integer', 1, array (
				'type' => 'integer',
				'notnull' => true,
				'default' => 0,
				'length' => 1 ) );
		$this->hasColumn ( 'is_import', 'integer', 1, array (
				'type' => 'integer',
				'notnull' => true,
				'default' => 0,
				'length' => 1 ) );
		$this->hasColumn ( 'payment_status', 'boolean', null, array (
				'type' => 'boolean',
				'notnull' => true,
				'default' => 0 ) );
		$this->hasColumn ( 'relative_id', 'integer', null, array (
				'type' => 'integer' ) );
		$this->hasColumn ( 'note', 'string', 255, array (
				'type' => 'string',
				'length' => 255 ) );
		$this->hasColumn ( 'user_created_id', 'integer', null, array (
				'type' => 'integer' ) );
		$this->hasColumn ( 'user_updated_id', 'integer', null, array (
				'type' => 'integer' ) );

		$this->index ( 'title_idx', array (
				'fields' => array (
						0 => 'title' ) ) );
		$this->index ( 'student_id_idx', array (
				'fields' => array (
						0 => 'student_id' ) ) );
		$this->option ( 'type', 'InnoDB' );
		$this->option ( 'collate', 'utf8_unicode_ci' );
		$this->option ( 'charset', 'utf8' );
	}

	public function setUp() {

		parent::setUp ();
		$this->hasOne ( 'Student', array (
				'local' => 'student_id',
				'foreign' => 'id' ) );

		$this->hasOne ( 'Relative', array (
				'local' => 'relative_id',
				'foreign' => 'id' ) );

		$this->hasOne ( 'PsCustomer', array (
				'local' => 'ps_customer_id',
				'foreign' => 'id' ) );

		$this->hasOne ( 'sfGuardUser as UserCreated', array (
				'local' => 'user_created_id',
				'foreign' => 'id' ) );

		$this->hasOne ( 'sfGuardUser as UserUpdated', array (
				'local' => 'user_updated_id',
				'foreign' => 'id' ) );

		$timestampable0 = new Doctrine_Template_Timestampable ();
		$this->actAs ( $timestampable0 );
	}
}