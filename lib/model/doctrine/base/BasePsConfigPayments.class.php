<?php

/**
 * BasePsConfigPayments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ps_customer_id
 * @property string $title
 * @property double $price
 * @property integer $number_month
 * @property string $note
 * @property integer $is_activated
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property PsCustomer $PsCustomer
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * 
 * @method integer          getPsCustomerId()    Returns the current record's "ps_customer_id" value
 * @method string           getTitle()           Returns the current record's "title" value
 * @method double           getPrice()           Returns the current record's "price" value
 * @method integer          getNumberMonth()     Returns the current record's "number_month" value
 * @method string           getNote()            Returns the current record's "note" value
 * @method integer          getIsActivated()     Returns the current record's "is_activated" value
 * @method integer          getUserCreatedId()   Returns the current record's "user_created_id" value
 * @method integer          getUserUpdatedId()   Returns the current record's "user_updated_id" value
 * @method PsCustomer       getPsCustomer()      Returns the current record's "PsCustomer" value
 * @method sfGuardUser      getUserCreated()     Returns the current record's "UserCreated" value
 * @method sfGuardUser      getUserUpdated()     Returns the current record's "UserUpdated" value
 * @method PsConfigPayments setPsCustomerId()    Sets the current record's "ps_customer_id" value
 * @method PsConfigPayments setTitle()           Sets the current record's "title" value
 * @method PsConfigPayments setPrice()           Sets the current record's "price" value
 * @method PsConfigPayments setNumberMonth()     Sets the current record's "number_month" value
 * @method PsConfigPayments setNote()            Sets the current record's "note" value
 * @method PsConfigPayments setIsActivated()     Sets the current record's "is_activated" value
 * @method PsConfigPayments setUserCreatedId()   Sets the current record's "user_created_id" value
 * @method PsConfigPayments setUserUpdatedId()   Sets the current record's "user_updated_id" value
 * @method PsConfigPayments setPsCustomer()      Sets the current record's "PsCustomer" value
 * @method PsConfigPayments setUserCreated()     Sets the current record's "UserCreated" value
 * @method PsConfigPayments setUserUpdated()     Sets the current record's "UserUpdated" value
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePsConfigPayments extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ps_config_payments');
        $this->hasColumn('ps_customer_id', 'integer', null, array(
             'type' => 'integer',
             'unique' => false,
             'notnull' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('price', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('number_month', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('note', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_activated', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PsCustomer', array(
             'local' => 'ps_customer_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}