<?php

/**
 * BasePsLogtimes
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $student_id
 * @property timestamp $login_at
 * @property integer $login_relative_id
 * @property integer $login_member_id
 * @property timestamp $logout_at
 * @property integer $logout_member_id
 * @property integer $logout_relative_id
 * @property integer $log_value
 * @property string $note
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property Student $Student
 * @property Relative $RelativeLogin
 * @property PsMember $PsMemberLogin
 * @property Relative $RelativeLogout
 * @property PsMember $PsMemberLogout
 * @property DayInMonth $DayInMonth
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * @property Doctrine_Collection $PsLogtimess
 * 
 * @method integer             getStudentId()          Returns the current record's "student_id" value
 * @method timestamp           getLoginAt()            Returns the current record's "login_at" value
 * @method integer             getLoginRelativeId()    Returns the current record's "login_relative_id" value
 * @method integer             getLoginMemberId()      Returns the current record's "login_member_id" value
 * @method timestamp           getLogoutAt()           Returns the current record's "logout_at" value
 * @method integer             getLogoutMemberId()     Returns the current record's "logout_member_id" value
 * @method integer             getLogoutRelativeId()   Returns the current record's "logout_relative_id" value
 * @method integer             getLogValue()           Returns the current record's "log_value" value
 * @method string              getNote()               Returns the current record's "note" value
 * @method integer             getUserCreatedId()      Returns the current record's "user_created_id" value
 * @method integer             getUserUpdatedId()      Returns the current record's "user_updated_id" value
 * @method Student             getStudent()            Returns the current record's "Student" value
 * @method Relative            getRelativeLogin()      Returns the current record's "RelativeLogin" value
 * @method PsMember            getPsMemberLogin()      Returns the current record's "PsMemberLogin" value
 * @method Relative            getRelativeLogout()     Returns the current record's "RelativeLogout" value
 * @method PsMember            getPsMemberLogout()     Returns the current record's "PsMemberLogout" value
 * @method DayInMonth          getDayInMonth()         Returns the current record's "DayInMonth" value
 * @method sfGuardUser         getUserCreated()        Returns the current record's "UserCreated" value
 * @method sfGuardUser         getUserUpdated()        Returns the current record's "UserUpdated" value
 * @method Doctrine_Collection getPsLogtimess()        Returns the current record's "PsLogtimess" collection
 * @method PsLogtimes          setStudentId()          Sets the current record's "student_id" value
 * @method PsLogtimes          setLoginAt()            Sets the current record's "login_at" value
 * @method PsLogtimes          setLoginRelativeId()    Sets the current record's "login_relative_id" value
 * @method PsLogtimes          setLoginMemberId()      Sets the current record's "login_member_id" value
 * @method PsLogtimes          setLogoutAt()           Sets the current record's "logout_at" value
 * @method PsLogtimes          setLogoutMemberId()     Sets the current record's "logout_member_id" value
 * @method PsLogtimes          setLogoutRelativeId()   Sets the current record's "logout_relative_id" value
 * @method PsLogtimes          setLogValue()           Sets the current record's "log_value" value
 * @method PsLogtimes          setNote()               Sets the current record's "note" value
 * @method PsLogtimes          setUserCreatedId()      Sets the current record's "user_created_id" value
 * @method PsLogtimes          setUserUpdatedId()      Sets the current record's "user_updated_id" value
 * @method PsLogtimes          setStudent()            Sets the current record's "Student" value
 * @method PsLogtimes          setRelativeLogin()      Sets the current record's "RelativeLogin" value
 * @method PsLogtimes          setPsMemberLogin()      Sets the current record's "PsMemberLogin" value
 * @method PsLogtimes          setRelativeLogout()     Sets the current record's "RelativeLogout" value
 * @method PsLogtimes          setPsMemberLogout()     Sets the current record's "PsMemberLogout" value
 * @method PsLogtimes          setDayInMonth()         Sets the current record's "DayInMonth" value
 * @method PsLogtimes          setUserCreated()        Sets the current record's "UserCreated" value
 * @method PsLogtimes          setUserUpdated()        Sets the current record's "UserUpdated" value
 * @method PsLogtimes          setPsLogtimess()        Sets the current record's "PsLogtimess" collection
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePsLogtimes extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ps_logtimes');
        $this->hasColumn('student_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('login_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('login_relative_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('login_member_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('logout_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('logout_member_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('logout_relative_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('log_value', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('log_code', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('note', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('log_code', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             ));


        $this->index('student_idx', array(
             'fields' => 
             array(
              0 => 'student_id',
             ),
             ));
        $this->index('login_member_idx', array(
             'fields' => 
             array(
              0 => 'login_member_id',
             ),
             ));
        $this->index('logout_member_idx', array(
             'fields' => 
             array(
              0 => 'logout_member_id',
             ),
             ));
        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Student', array(
             'local' => 'student_id',
             'foreign' => 'id'));

        $this->hasOne('Relative as RelativeLogin', array(
             'local' => 'login_relative_id',
             'foreign' => 'id'));

        $this->hasOne('PsMember as PsMemberLogin', array(
             'local' => 'login_member_id',
             'foreign' => 'id'));

        $this->hasOne('Relative as RelativeLogout', array(
             'local' => 'logout_relative_id',
             'foreign' => 'id'));

        $this->hasOne('PsMember as PsMemberLogout', array(
             'local' => 'logout_member_id',
             'foreign' => 'id'));

        $this->hasOne('DayInMonth', array(
             'local' => 'login_at',
             'foreign' => 'iday'));

        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $this->hasMany('PsHistoryLogtimes as PsLogtimess', array(
             'local' => 'id',
             'foreign' => 'ps_logtime_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}