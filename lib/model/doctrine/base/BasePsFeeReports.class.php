<?php

/**
 * BasePsFeeReports
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $ps_fee_report_no
 * @property integer $student_id
 * @property double $receivable
 * @property datetime $receivable_at
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property Student $Student
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * 
 * @method string       getPsFeeReportNo()    Returns the current record's "ps_fee_report_no" value
 * @method integer      getStudentId()        Returns the current record's "student_id" value
 * @method double       getReceivable()       Returns the current record's "receivable" value
 * @method datetime     getReceivableAt()     Returns the current record's "receivable_at" value
 * @method integer      getUserCreatedId()    Returns the current record's "user_created_id" value
 * @method integer      getUserUpdatedId()    Returns the current record's "user_updated_id" value
 * @method Student      getStudent()          Returns the current record's "Student" value
 * @method sfGuardUser  getUserCreated()      Returns the current record's "UserCreated" value
 * @method sfGuardUser  getUserUpdated()      Returns the current record's "UserUpdated" value
 * @method PsFeeReports setPsFeeReportNo()    Sets the current record's "ps_fee_report_no" value
 * @method PsFeeReports setStudentId()        Sets the current record's "student_id" value
 * @method PsFeeReports setReceivable()       Sets the current record's "receivable" value
 * @method PsFeeReports setReceivableAt()     Sets the current record's "receivable_at" value
 * @method PsFeeReports setUserCreatedId()    Sets the current record's "user_created_id" value
 * @method PsFeeReports setUserUpdatedId()    Sets the current record's "user_updated_id" value
 * @method PsFeeReports setStudent()          Sets the current record's "Student" value
 * @method PsFeeReports setUserCreated()      Sets the current record's "UserCreated" value
 * @method PsFeeReports setUserUpdated()      Sets the current record's "UserUpdated" value
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePsFeeReports extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ps_fee_reports');
        $this->hasColumn('ps_fee_report_no', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('ps_workplace_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('receipt_number', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('student_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('receivable', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('receivable_at', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));

        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Student', array(
             'local' => 'student_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}