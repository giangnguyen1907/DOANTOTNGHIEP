<?php

/**
 * BasePsDistrict
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ps_province_id
 * @property string $s_code
 * @property string $name
 * @property string $description
 * @property integer $iorder
 * @property boolean $is_activated
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property PsProvince $PsProvince
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * @property Doctrine_Collection $PsWard
 * @property Doctrine_Collection $PsUserDistricts
 * @property Doctrine_Collection $PsMember
 * 
 * @method integer             getPsProvinceId()    Returns the current record's "ps_province_id" value
 * @method string              getSCode()           Returns the current record's "s_code" value
 * @method string              getName()            Returns the current record's "name" value
 * @method string              getDescription()     Returns the current record's "description" value
 * @method integer             getIorder()          Returns the current record's "iorder" value
 * @method boolean             getIsActivated()     Returns the current record's "is_activated" value
 * @method integer             getUserCreatedId()   Returns the current record's "user_created_id" value
 * @method integer             getUserUpdatedId()   Returns the current record's "user_updated_id" value
 * @method PsProvince          getPsProvince()      Returns the current record's "PsProvince" value
 * @method sfGuardUser         getUserCreated()     Returns the current record's "UserCreated" value
 * @method sfGuardUser         getUserUpdated()     Returns the current record's "UserUpdated" value
 * @method Doctrine_Collection getPsWard()          Returns the current record's "PsWard" collection
 * @method Doctrine_Collection getPsUserDistricts() Returns the current record's "PsUserDistricts" collection
 * @method Doctrine_Collection getPsMember()        Returns the current record's "PsMember" collection
 * @method PsDistrict          setPsProvinceId()    Sets the current record's "ps_province_id" value
 * @method PsDistrict          setSCode()           Sets the current record's "s_code" value
 * @method PsDistrict          setName()            Sets the current record's "name" value
 * @method PsDistrict          setDescription()     Sets the current record's "description" value
 * @method PsDistrict          setIorder()          Sets the current record's "iorder" value
 * @method PsDistrict          setIsActivated()     Sets the current record's "is_activated" value
 * @method PsDistrict          setUserCreatedId()   Sets the current record's "user_created_id" value
 * @method PsDistrict          setUserUpdatedId()   Sets the current record's "user_updated_id" value
 * @method PsDistrict          setPsProvince()      Sets the current record's "PsProvince" value
 * @method PsDistrict          setUserCreated()     Sets the current record's "UserCreated" value
 * @method PsDistrict          setUserUpdated()     Sets the current record's "UserUpdated" value
 * @method PsDistrict          setPsWard()          Sets the current record's "PsWard" collection
 * @method PsDistrict          setPsUserDistricts() Sets the current record's "PsUserDistricts" collection
 * @method PsDistrict          setPsMember()        Sets the current record's "PsMember" collection
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePsDistrict extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ps_district');
        $this->hasColumn('ps_province_id', 'integer', 11, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 11,
             ));
        $this->hasColumn('s_code', 'string', 10, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('iorder', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('is_activated', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             ));


        $this->index('name_idx', array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PsProvince', array(
             'local' => 'ps_province_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $this->hasMany('PsWard', array(
             'local' => 'id',
             'foreign' => 'ps_district_id'));

        $this->hasMany('PsUserDistricts', array(
             'local' => 'id',
             'foreign' => 'ps_district_id'));

        $this->hasMany('PsMember', array(
             'local' => 'id',
             'foreign' => 'ps_district_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}