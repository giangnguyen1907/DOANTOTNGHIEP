<?php

/**
 * BasePsFeeReceipt
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ps_customer_id
 * @property integer $student_id
 * @property string $title
 * @property string $receipt_no
 * @property datetime $receipt_date
 * @property double $receivable_amount
 * @property double $collected_amount
 * @property double $balance_amount
 * @property boolean $payment_status
 * @property string $payment_relative
 * @property datetime $payment_date
 * @property integer $number_push_notication
 * @property string $note
 * @property boolean $is_public
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property Student $Student
 * @property PsCustomer $PsCustomer
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * 
 * @method integer      getPsCustomerId()           Returns the current record's "ps_customer_id" value
 * @method integer      getStudentId()              Returns the current record's "student_id" value
 * @method string       getTitle()                  Returns the current record's "title" value
 * @method string       getReceiptNo()              Returns the current record's "receipt_no" value
 * @method datetime     getReceiptDate()            Returns the current record's "receipt_date" value
 * @method double       getReceivableAmount()       Returns the current record's "receivable_amount" value
 * @method double       getCollectedAmount()        Returns the current record's "collected_amount" value
 * @method double       getBalanceAmount()          Returns the current record's "balance_amount" value
 * @method boolean      getPaymentStatus()          Returns the current record's "payment_status" value
 * @method string       getPaymentRelative()        Returns the current record's "payment_relative" value
 * @method datetime     getPaymentDate()            Returns the current record's "payment_date" value
 * @method integer      getNumberPushNotication()   Returns the current record's "number_push_notication" value
 * @method string       getNote()                   Returns the current record's "note" value
 * @method boolean      getIsPublic()               Returns the current record's "is_public" value
 * @method integer      getUserCreatedId()          Returns the current record's "user_created_id" value
 * @method integer      getUserUpdatedId()          Returns the current record's "user_updated_id" value
 * @method Student      getStudent()                Returns the current record's "Student" value
 * @method PsCustomer   getPsCustomer()             Returns the current record's "PsCustomer" value
 * @method sfGuardUser  getUserCreated()            Returns the current record's "UserCreated" value
 * @method sfGuardUser  getUserUpdated()            Returns the current record's "UserUpdated" value
 * @method PsFeeReceipt setPsCustomerId()           Sets the current record's "ps_customer_id" value
 * @method PsFeeReceipt setStudentId()              Sets the current record's "student_id" value
 * @method PsFeeReceipt setTitle()                  Sets the current record's "title" value
 * @method PsFeeReceipt setReceiptNo()              Sets the current record's "receipt_no" value
 * @method PsFeeReceipt setReceiptDate()            Sets the current record's "receipt_date" value
 * @method PsFeeReceipt setReceivableAmount()       Sets the current record's "receivable_amount" value
 * @method PsFeeReceipt setCollectedAmount()        Sets the current record's "collected_amount" value
 * @method PsFeeReceipt setBalanceAmount()          Sets the current record's "balance_amount" value
 * @method PsFeeReceipt setPaymentStatus()          Sets the current record's "payment_status" value
 * @method PsFeeReceipt setPaymentRelative()        Sets the current record's "payment_relative" value
 * @method PsFeeReceipt setPaymentDate()            Sets the current record's "payment_date" value
 * @method PsFeeReceipt setNumberPushNotication()   Sets the current record's "number_push_notication" value
 * @method PsFeeReceipt setNote()                   Sets the current record's "note" value
 * @method PsFeeReceipt setIsPublic()               Sets the current record's "is_public" value
 * @method PsFeeReceipt setUserCreatedId()          Sets the current record's "user_created_id" value
 * @method PsFeeReceipt setUserUpdatedId()          Sets the current record's "user_updated_id" value
 * @method PsFeeReceipt setStudent()                Sets the current record's "Student" value
 * @method PsFeeReceipt setPsCustomer()             Sets the current record's "PsCustomer" value
 * @method PsFeeReceipt setUserCreated()            Sets the current record's "UserCreated" value
 * @method PsFeeReceipt setUserUpdated()            Sets the current record's "UserUpdated" value
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePsFeeReceipt extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ps_fee_receipt');
        $this->hasColumn('ps_customer_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('student_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('receipt_no', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('receipt_date', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('receivable_amount', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('collected_amount', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('balance_amount', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('payment_status', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('payment_relative', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('payment_date', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('number_push_notication', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('note', 'string', 500, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 500,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             ));


        $this->index('title_idx', array(
             'fields' => 
             array(
              0 => 'title',
             ),
             ));
        $this->index('student_id_idx', array(
             'fields' => 
             array(
              0 => 'student_id',
             ),
             ));
        $this->index('receipt_no_idx', array(
             'fields' => 
             array(
              0 => 'receipt_no',
             ),
             ));
        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Student', array(
             'local' => 'student_id',
             'foreign' => 'id'));

        $this->hasOne('PsCustomer', array(
             'local' => 'ps_customer_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}