<?php

/**
 * BaseStudentServiceDiary
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $service_id
 * @property integer $student_id
 * @property timestamp $tracked_at
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property Student $Student
 * @property Service $Service
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * 
 * @method integer             getServiceId()       Returns the current record's "service_id" value
 * @method integer             getStudentId()       Returns the current record's "student_id" value
 * @method timestamp           getTrackedAt()       Returns the current record's "tracked_at" value
 * @method integer             getUserCreatedId()   Returns the current record's "user_created_id" value
 * @method integer             getUserUpdatedId()   Returns the current record's "user_updated_id" value
 * @method Student             getStudent()         Returns the current record's "Student" value
 * @method Service             getService()         Returns the current record's "Service" value
 * @method sfGuardUser         getUserCreated()     Returns the current record's "UserCreated" value
 * @method sfGuardUser         getUserUpdated()     Returns the current record's "UserUpdated" value
 * @method StudentServiceDiary setServiceId()       Sets the current record's "service_id" value
 * @method StudentServiceDiary setStudentId()       Sets the current record's "student_id" value
 * @method StudentServiceDiary setTrackedAt()       Sets the current record's "tracked_at" value
 * @method StudentServiceDiary setUserCreatedId()   Sets the current record's "user_created_id" value
 * @method StudentServiceDiary setUserUpdatedId()   Sets the current record's "user_updated_id" value
 * @method StudentServiceDiary setStudent()         Sets the current record's "Student" value
 * @method StudentServiceDiary setService()         Sets the current record's "Service" value
 * @method StudentServiceDiary setUserCreated()     Sets the current record's "UserCreated" value
 * @method StudentServiceDiary setUserUpdated()     Sets the current record's "UserUpdated" value
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStudentServiceDiary extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('student_service_diary');
        $this->hasColumn('service_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('student_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('tracked_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('service_code', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Student', array(
             'local' => 'student_id',
             'foreign' => 'id'));

        $this->hasOne('Service', array(
             'local' => 'service_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}