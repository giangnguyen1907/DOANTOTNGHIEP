<?php

/**
 * BasePsAlbumComments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $album_id
 * @property integer $album_item_id
 * @property string $content
 * @property boolean $type
 * @property boolean $is_activated
 * @property integer $number_like
 * @property integer $number_dislike
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property PsAlbums $PsAlbums
 * @property PsAlbumItems $PsAlbumItems
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * 
 * @method integer         getAlbumId()         Returns the current record's "album_id" value
 * @method integer         getAlbumItemId()     Returns the current record's "album_item_id" value
 * @method string          getContent()         Returns the current record's "content" value
 * @method boolean         getType()            Returns the current record's "type" value
 * @method boolean         getIsActivated()     Returns the current record's "is_activated" value
 * @method integer         getNumberLike()      Returns the current record's "number_like" value
 * @method integer         getNumberDislike()   Returns the current record's "number_dislike" value
 * @method integer         getUserCreatedId()   Returns the current record's "user_created_id" value
 * @method integer         getUserUpdatedId()   Returns the current record's "user_updated_id" value
 * @method PsAlbums        getPsAlbums()        Returns the current record's "PsAlbums" value
 * @method PsAlbumItems    getPsAlbumItems()    Returns the current record's "PsAlbumItems" value
 * @method sfGuardUser     getUserCreated()     Returns the current record's "UserCreated" value
 * @method sfGuardUser     getUserUpdated()     Returns the current record's "UserUpdated" value
 * @method PsAlbumComments setAlbumId()         Sets the current record's "album_id" value
 * @method PsAlbumComments setAlbumItemId()     Sets the current record's "album_item_id" value
 * @method PsAlbumComments setContent()         Sets the current record's "content" value
 * @method PsAlbumComments setType()            Sets the current record's "type" value
 * @method PsAlbumComments setIsActivated()     Sets the current record's "is_activated" value
 * @method PsAlbumComments setNumberLike()      Sets the current record's "number_like" value
 * @method PsAlbumComments setNumberDislike()   Sets the current record's "number_dislike" value
 * @method PsAlbumComments setUserCreatedId()   Sets the current record's "user_created_id" value
 * @method PsAlbumComments setUserUpdatedId()   Sets the current record's "user_updated_id" value
 * @method PsAlbumComments setPsAlbums()        Sets the current record's "PsAlbums" value
 * @method PsAlbumComments setPsAlbumItems()    Sets the current record's "PsAlbumItems" value
 * @method PsAlbumComments setUserCreated()     Sets the current record's "UserCreated" value
 * @method PsAlbumComments setUserUpdated()     Sets the current record's "UserUpdated" value
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePsAlbumComments extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ps_album_comments');
        $this->hasColumn('album_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('album_item_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('content', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('type', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('is_activated', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('number_like', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('number_dislike', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8mb4_unicode_ci');
        $this->option('charset', 'utf8mb4');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PsAlbums', array(
             'local' => 'album_id',
             'foreign' => 'id'));

        $this->hasOne('PsAlbumItems', array(
             'local' => 'album_item_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}