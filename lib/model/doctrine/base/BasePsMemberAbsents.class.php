<?php

/**
 * BasePsMemberAbsents
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $member_id
 * @property timestamp $absent_at
 * @property integer $absent_type
 * @property string $description
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property PsMember $PsMember
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * 
 * @method integer         getMemberId()        Returns the current record's "member_id" value
 * @method timestamp       getAbsentAt()        Returns the current record's "absent_at" value
 * @method integer         getAbsentType()      Returns the current record's "absent_type" value
 * @method string          getDescription()     Returns the current record's "description" value
 * @method integer         getUserCreatedId()   Returns the current record's "user_created_id" value
 * @method integer         getUserUpdatedId()   Returns the current record's "user_updated_id" value
 * @method PsMember        getPsMember()        Returns the current record's "PsMember" value
 * @method sfGuardUser     getUserCreated()     Returns the current record's "UserCreated" value
 * @method sfGuardUser     getUserUpdated()     Returns the current record's "UserUpdated" value
 * @method PsMemberAbsents setMemberId()        Sets the current record's "member_id" value
 * @method PsMemberAbsents setAbsentAt()        Sets the current record's "absent_at" value
 * @method PsMemberAbsents setAbsentType()      Sets the current record's "absent_type" value
 * @method PsMemberAbsents setDescription()     Sets the current record's "description" value
 * @method PsMemberAbsents setUserCreatedId()   Sets the current record's "user_created_id" value
 * @method PsMemberAbsents setUserUpdatedId()   Sets the current record's "user_updated_id" value
 * @method PsMemberAbsents setPsMember()        Sets the current record's "PsMember" value
 * @method PsMemberAbsents setUserCreated()     Sets the current record's "UserCreated" value
 * @method PsMemberAbsents setUserUpdated()     Sets the current record's "UserUpdated" value
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePsMemberAbsents extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ps_member_absents');
        $this->hasColumn('member_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('absent_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('absent_type', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             ));


        $this->index('date_at_idx', array(
             'fields' => 
             array(
              0 => 'member_id',
              1 => 'absent_at',
             ),
             'type' => 'unique',
             ));
        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PsMember', array(
             'local' => 'member_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}