<?php

/**
 * BasePsAdviceFeedbacks
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $advice_id
 * @property integer $umember_id
 * @property integer $urelative_id
 * @property boolean $is_teacher
 * @property string $content
 * @property boolean $is_activated
 * @property integer $user_created_id
 * @property integer $user_updated_id
 * @property PsAdvices $PsAdvices
 * @property sfGuardUser $UMember
 * @property sfGuardUser $URelative
 * @property sfGuardUser $UserCreated
 * @property sfGuardUser $UserUpdated
 * 
 * @method integer           getAdviceId()        Returns the current record's "advice_id" value
 * @method integer           getUmemberId()       Returns the current record's "umember_id" value
 * @method integer           getUrelativeId()     Returns the current record's "urelative_id" value
 * @method boolean           getIsTeacher()       Returns the current record's "is_teacher" value
 * @method string            getContent()         Returns the current record's "content" value
 * @method boolean           getIsActivated()     Returns the current record's "is_activated" value
 * @method integer           getUserCreatedId()   Returns the current record's "user_created_id" value
 * @method integer           getUserUpdatedId()   Returns the current record's "user_updated_id" value
 * @method PsAdvices         getPsAdvices()       Returns the current record's "PsAdvices" value
 * @method sfGuardUser       getUMember()         Returns the current record's "UMember" value
 * @method sfGuardUser       getURelative()       Returns the current record's "URelative" value
 * @method sfGuardUser       getUserCreated()     Returns the current record's "UserCreated" value
 * @method sfGuardUser       getUserUpdated()     Returns the current record's "UserUpdated" value
 * @method PsAdviceFeedbacks setAdviceId()        Sets the current record's "advice_id" value
 * @method PsAdviceFeedbacks setUmemberId()       Sets the current record's "umember_id" value
 * @method PsAdviceFeedbacks setUrelativeId()     Sets the current record's "urelative_id" value
 * @method PsAdviceFeedbacks setIsTeacher()       Sets the current record's "is_teacher" value
 * @method PsAdviceFeedbacks setContent()         Sets the current record's "content" value
 * @method PsAdviceFeedbacks setIsActivated()     Sets the current record's "is_activated" value
 * @method PsAdviceFeedbacks setUserCreatedId()   Sets the current record's "user_created_id" value
 * @method PsAdviceFeedbacks setUserUpdatedId()   Sets the current record's "user_updated_id" value
 * @method PsAdviceFeedbacks setPsAdvices()       Sets the current record's "PsAdvices" value
 * @method PsAdviceFeedbacks setUMember()         Sets the current record's "UMember" value
 * @method PsAdviceFeedbacks setURelative()       Sets the current record's "URelative" value
 * @method PsAdviceFeedbacks setUserCreated()     Sets the current record's "UserCreated" value
 * @method PsAdviceFeedbacks setUserUpdated()     Sets the current record's "UserUpdated" value
 * 
 * @package    KidsSchool.vn
 * @subpackage model
 * @author     KidsSchool.vn <contact@kidsschool.vn>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePsAdviceFeedbacks extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ps_advice_feedbacks');
        $this->hasColumn('advice_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('umember_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('urelative_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('is_teacher', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('content', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_activated', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('user_created_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_updated_id', 'integer', null, array(
             'type' => 'integer',
             ));


        $this->index('advice_idx', array(
             'fields' => 
             array(
              0 => 'advice_id',
             ),
             ));
        $this->index('relative_idx', array(
             'fields' => 
             array(
              0 => 'urelative_id',
             ),
             ));
        $this->index('member_idx', array(
             'fields' => 
             array(
              0 => 'umember_id',
             ),
             ));
        $this->option('type', 'InnoDB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PsAdvices', array(
             'local' => 'advice_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UMember', array(
             'local' => 'umember_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as URelative', array(
             'local' => 'urelative_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserCreated', array(
             'local' => 'user_created_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as UserUpdated', array(
             'local' => 'user_updated_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}