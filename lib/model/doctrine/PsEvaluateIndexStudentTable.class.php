<?php

/**
 * PsEvaluateIndexStudentTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PsEvaluateIndexStudentTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object PsEvaluateIndexStudentTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'PsEvaluateIndexStudent' );
	}

	public function doSelectQuery(Doctrine_Query $query) {

		$alias = $query->getRootAlias ();
		$query->addSelect ( $alias . '.id AS id,' . $alias . '.date_at AS date_at,' . $alias . '.is_public AS is_public,' . $alias . '.is_awaiting_approval AS is_awaiting_approval,' . $alias . '.updated_at AS updated_at,' );

		$query->addSelect ( 'eic.id AS evaluate_index_criteria_id, eic.criteria_code AS criteria_code, eic.title AS criteria_title' );

		$query->addSelect ( 'eis.symbol_code AS symbol_code, eis.id AS evaluate_index_symbol_id' );

		$query->addSelect ( 'CONCAT(u.first_name, " ", u.last_name) AS updated_by' );

		$query->addSelect ( 's.id AS ps_student_id, s.student_code AS student_code, s.first_name AS first_name, s.last_name AS last_name, CONCAT(s.first_name, " ",s.last_name) AS student_name' );

		$query->leftJoin ( $alias . '.Student s' );

		$query->leftJoin ( $alias . '.PsEvaluateIndexCriteria eic WITH (eic.is_activated =?)', PreSchool::ACTIVE );

		$query->leftJoin ( $alias . '.PsEvaluateIndexSymbol eis' );

		$query->leftJoin ( 'eic.PsEvaluateSubject es' );

		$query->leftJoin ( $alias . '.UserUpdated u' );

		if (! myUser::credentialPsCustomers ( 'PS_EVALUATE_INDEX_STUDENT_FILTERS_SCHOOL' ) && myUser::getPscustomerID () > 0) {
			$query->addWhere ( 'es.ps_customer_id = ?', myUser::getPscustomerID () );
		}

		$query->orderBy ( $alias . '.created_at ASC' );

		return $query;
	}

	/**
	 * Lay ra danh
	 *
	 * @param int $student_id
	 * @param int $criteria_id
	 * @param date $track_at
	 */
	public function getEvaluteStudentByStudentCriteriaId($student_id, $criteria_id, $track_at) {

	}

	/**
	 * Lay ra danh sach hoc sinh da danh gia theo Class_id
	 *
	 * @param int $class_id
	 * @param date $track_at
	 *
	 * @author: Tam NT
	 * @date(dd/mm/yy): 9/10/2018
	 */
	public function getEvaluteStudentByClassId($class_id, $track_at) {

		$date_at2 = $track_at ? date ( 'Ym', strtotime ( $track_at ) ) : date ( 'Ym' );

		$q = $this->createQuery ( 's' );

		$q->addSelect ( 's.id AS id, s.date_at AS date_at, s.is_public AS is_public, s.is_awaiting_approval AS is_awaiting_approval, s.updated_at AS updated_at' );

		$q->addSelect ( 'eic.id AS evaluate_index_criteria_id, eic.criteria_code AS criteria_code' );

		$q->addSelect ( 'eis.id AS evaluate_index_symbol_id, eis.symbol_code AS symbol_code, eis.title AS symbol_title' );

		$q->addSelect ( 'st.id AS ps_student_id' );

		$q->leftJoin ( 's.Student st' );

		$q->leftJoin ( 's.PsEvaluateIndexCriteria eic WITH (eic.is_activated =?)', PreSchool::ACTIVE );
		$q->leftJoin ( 's.PsEvaluateIndexSymbol eis WITH (eis.is_activated =?)', PreSchool::ACTIVE );

		$q->leftJoin ( 'st.StudentClass sc With DATE_FORMAT(sc.start_at,"%Y%m") <= ? AND (sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m") >= ?)', array (
				$date_at2,
				$date_at2 ) );

		$q->addWhere ( '(s.date_at IS NULL OR DATE_FORMAT(s.date_at,"%Y%m") =?)', $date_at2 );

		$q->addWhere ( 'sc.myclass_id = ? ', $class_id );

		$q->orderBy ( 's.created_at ASC' );

		// $q->addSelect('COUNT(s.id) AS symbol_total');
		// $q->groupBy('s.id, eic.evaluate_subject_id, eis.id, st.id');
		return $q->execute ();
	}

	public function getEvaluteStudentByClassId2($class_id, $track_at = null){

		$date_at2 = $track_at ? date('Ym', strtotime($track_at)) : date('Ym');
	
		$q = $this->createQuery ('s');
	
		$q->addSelect('s.id AS id, s.evaluate_index_criteria_id AS evaluate_index_criteria_id,s.evaluate_index_symbol_id AS evaluate_index_symbol_id,s.ps_student_id AS student_id,s.date_at AS date_at');
		$q->addSelect('eic.id AS evaluate_index_criteria_id, eic.criteria_code AS criteria_code');
		$q->addSelect('eis.id AS evaluate_index_symbol_id, eis.symbol_code AS symbol_code, eis.title AS symbol_title');
		$q->addSelect('st.id AS ps_student_id');
		$q->innerJoin( 's.Student st');
	
		$q->leftJoin ( 's.PsEvaluateIndexCriteria eic WITH (eic.is_activated =?)', PreSchool::ACTIVE);
		$q->leftJoin ( 's.PsEvaluateIndexSymbol eis WITH (eis.is_activated =?)', PreSchool::ACTIVE);
	
		$q->leftJoin ( 'st.StudentClass sc With DATE_FORMAT(sc.start_at,"%Y%m") <= ? AND (sc.stop_at IS NULL OR DATE_FORMAT(sc.stop_at,"%Y%m") >= ?)', array (
		$date_at2,
		$date_at2 ) );
		
		//$q->addWhere('(s.date_at IS NULL OR DATE_FORMAT(s.date_at,"%Y%m") =?)', $date_at2);
		
		$q->addWhere('sc.myclass_id = ? ', $class_id);
		
		return $q->execute();
	
	}
	
	/**
	 * Lay tat ca danh gia trong khoang thoi gian
	 * */
	public function getEvaluteStudentByClassId3($class_id, $from_date , $to_date ){
		
		$q = $this->createQuery ('s');
		
		$q->addSelect('s.id AS id, s.evaluate_index_criteria_id AS evaluate_index_criteria_id,s.evaluate_index_symbol_id AS evaluate_index_symbol_id,s.ps_student_id AS student_id,s.date_at AS date_at');
		$q->addSelect('eic.id AS evaluate_index_criteria_id, eic.criteria_code AS criteria_code');
		$q->addSelect('eis.id AS evaluate_index_symbol_id, eis.symbol_code AS symbol_code, eis.title AS symbol_title');
		$q->addSelect('st.id AS student_id');
		$q->innerJoin( 's.Student st');
		
		$q->leftJoin ( 's.PsEvaluateIndexCriteria eic WITH (eic.is_activated =?)', PreSchool::ACTIVE);
		$q->leftJoin ( 's.PsEvaluateIndexSymbol eis WITH (eis.is_activated =?)', PreSchool::ACTIVE);
		
		$q->leftJoin ( 'st.StudentClass sc With sc.is_activated =?', PreSchool::ACTIVE);
		
		$q->addWhere('sc.myclass_id = ? ', $class_id);
		
		$q->andWhere('DATE_FORMAT(s.date_at,"%Y%m") >= ? AND DATE_FORMAT(s.date_at,"%Y%m") <=?',array(date('Ym',strtotime($from_date)),date('Ym',strtotime($to_date))));
		
		return $q->execute();
		
	}
	
	
	
	/**
	 * Check ton tai khoa ngoai
	 *
	 * @return boolean - true: Da ton tai, khong the su dung
	 *        
	 * @author: Tam NT
	 * @date(dd/mm/yy): 9/10/2018
	 */
	public function checkDataForeignSymbolExits($symbol_id) {

		$q = $this->createQuery ()
			->select ( 'id' );

		$q->where ( 'evaluate_index_symbol_id = ?', $symbol_id );

		$ps_data = $q->fetchOne ();

		if ($ps_data) {
			return true;
		} else {
			return false;
		}
	}

	public function checkDataForeignCriteriaExits($criteria_id) {

		$q = $this->createQuery ()
			->select ( 'id' );

		$q->where ( 'evaluate_index_criteria_id = ?', $criteria_id );

		$ps_data = $q->fetchOne ();

		if ($ps_data) {
			return true;
		} else {
			return false;
		}
	}

	/**
	 * Lay ra 1 ban ghi
	 *
	 * @param int $criteria_id
	 * @param int $student_id
	 * @param date $track_at
	 */
	public function getEvaluateStudent($criteria_id, $student_id, $track_at) {

		$q = $this->createQuery ()
			->select ( 'id, evaluate_index_criteria_id, ps_student_id, ps_student_id, date_at, is_public, is_awaiting_approval' );

		$q->andWhere ( 'evaluate_index_criteria_id =? ', $criteria_id );

		$q->andWhere ( 'ps_student_id =? ', $student_id );

		$q->andWhere ( 'DATE_FORMAT(date_at,"%Y%m") =?', date ( 'Ym', strtotime ( $track_at ) ) );

		return $q->fetchOne ();
	}
}