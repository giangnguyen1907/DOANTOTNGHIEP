<?php

/**
 * StudentClassTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class StudentClassTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object StudentClassTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'StudentClass' );
	}

	public function getClassName($class_id) {

		$q = $this->createQuery ( 'mc' )
			->select ( 'mc.id, mc.name as mc_name,' . 'cus.school_name as school_name, cr.id AS cr_id,wp.id AS wp_id,wp.title AS wp_name' )
			->leftJoin ( 'mc.PsCustomer cus' )
			->leftJoin ( 'mc.PsClassRooms cr' )
			->leftJoin ( 'cr.PsWorkPlaces wp' )
			->
		// ->leftJoin('mc.PsTeacherClass tc')

		// ->leftJoin('tc.PsMember mb')

		andWhere ( 'mc.id = ?', $class_id )
			->orderBy ( 'mc.id ASC' );

		return $q->fetchOne ();
	}

	/**
	 * Lấy lớp hiện tại mà học sinh đang hoạt động
	 *
	 * @author Nguyen Chien Thang
	 * @param $student_id -
	 *        	int
	 *        	
	 * @return object StudentClassTable
	 */
	public function getCurrentClassOfStudent($student_id) {

		//$date = ($date == null) ? date ( 'Ymd' ) : $date;

		$q = $this->createQuery ( 'sc' )
			->
		select ( "sc.id, mc.name as name, mc.id as class_id, sc.start_at as start_at,sc.stop_at as stop_at, sc.myclass_mode as myclass_mode, mc.school_year_id as school_year_id ,cr.ps_workplace_id as ps_workplace_id, mc.ps_customer_id as ps_customer_id " )
			->addSelect ( 'wp.id AS wp_id ,wp.title AS workplace_title,' )
			->
		leftJoin ( 'sc.MyClass mc' )
			->leftJoin ( 'mc.PsClassRooms cr' )
			->leftJoin ( 'mc.PsSchoolYear psy' )
			->leftJoin ( 'cr.PsWorkPlaces wp' )
			->
		andWhere ( 'sc.student_id=?', $student_id )
			->andWhere ( 'sc.is_activated=?', PreSchool::ACTIVE )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	// Hàm thống kê trên trang tổng quan
	public function getStudentsBirthday($customer_id, $workplace_id, $class_id, $tracked_at = null) {

		$birthday = $tracked_at ? date ( 'm', strtotime ( $tracked_at ) ) : date ( 'md' );
		
		$q = $this->createQuery ( 'sc' )
			->select ( "sc.id as id, sc.type AS student_type, sc.is_activated AS is_activated" )
			->addSelect ( "s.id AS student_id, s.student_code as student_code,s.birthday as birthday, s.first_name AS first_name, s.last_name AS last_name, CONCAT(s.first_name, ' ',s.last_name) AS full_name, s.sex AS sex, s.image AS image, s.year_data AS year_data , cus.school_code AS school_code," )
			->addSelect ( 'mc.id AS mc_id, mc.name AS mc_name' )
			->addSelect ( 'cr.id, wp.id AS wp_id, wp.title AS wp_name' )
			->innerJoin ( 'sc.Student s' )
			->innerJoin ( 's.PsCustomer cus WITH cus.id=?', $customer_id )
			->addWhere ( 's.deleted_at IS NULL' )
			->andWhere ( 'sc.is_activated=?', PreSchool::ACTIVE )
			->andWhereIn ( 'sc.type', array (PreSchool::SC_STATUS_TEST,PreSchool::SC_STATUS_OFFICIAL ) )
			->andWhere ( 'DATE_FORMAT(s.birthday, "%m%d")=?', $birthday )
			->andWhere ( '(DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND (sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array (date ( 'Ymd' ),date ( 'Ymd' ) ) );

		$q->leftJoin ( 'sc.MyClass mc' );

		if (is_array ( $class_id )) {
			$q->andWhereIn ( 'mc.id', $class_id );
		} elseif ($class_id > 0) {
			$q->andWhere ( 'mc.id = ?', $class_id );
		}

		$q->innerJoin ( 'mc.PsClassRooms cr' );

		if ($workplace_id > 0)
			$q->andWhere ( 'mc.ps_workplace_id =?', $workplace_id );

		$q->leftJoin ( 'mc.PsWorkPlaces wp' );

		$q->groupBy ( 'wp.id, mc.id, s.id' );

		$q->orderBy ( 's.birthday, wp.id, mc.id, s.last_name, s.first_name' );

		return $q->execute ();
	}

	// Hàm thống kê và xuất file xls trong tháng
	public function getStudentsBirthdayOfMonth($customer_id, $workplace_id, $class_id, $tracked_at = null) {

		$birthday = $tracked_at ? date ( 'm', strtotime ( $tracked_at ) ) : date ( 'm' );

		$q = $this->createQuery ( 'sc' )
			->select ( "sc.id as id, sc.type AS student_type, sc.is_activated AS is_activated" )
			->addSelect ( "s.id AS student_id, s.student_code as student_code,s.birthday as birthday, s.first_name AS first_name, s.last_name AS last_name, CONCAT(s.first_name, ' ',s.last_name) AS full_name, s.sex AS sex, s.image AS image, s.year_data AS year_data , cus.school_code AS school_code," )
			->addSelect ( 'mc.id AS mc_id, mc.name AS mc_name' )
			->addSelect ( 'cr.id, wp.id AS wp_id, wp.title AS wp_name' )
			->innerJoin ( 'sc.Student s' )
			->innerJoin ( 's.PsCustomer cus WITH cus.id=?', $customer_id )
			->addWhere ( 's.deleted_at IS NULL' )
			->andWhere ( 'sc.is_activated=?', PreSchool::ACTIVE )
			->andWhereIn ( 'sc.type', array (
				PreSchool::SC_STATUS_TEST,
				PreSchool::SC_STATUS_OFFICIAL ) )
			->andWhere ( 'DATE_FORMAT(s.birthday, "%m")=?', $birthday )
			->andWhere ( '(DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND (sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array (date ( 'Ymd' ),date ( 'Ymd' ) ) );

		$q->leftJoin ( 'sc.MyClass mc' );

		if (is_array ( $class_id )) {
			$q->andWhereIn ( 'mc.id', $class_id );
		} elseif ($class_id > 0) {
			$q->andWhere ( 'mc.id = ?', $class_id );
		}

		$q->innerJoin ( 'mc.PsClassRooms cr' );
		$q->leftJoin ( 'mc.PsWorkPlaces wp' );		
		if ($workplace_id > 0)
			$q->andWhere ( 'mc.ps_workplace_id =?', $workplace_id );

		$q->groupBy ( 'wp.id, mc.id, s.id' );

		$q->orderBy ( 'mc.id,s.birthday, wp.id, mc.id, s.last_name, s.first_name' );

		return $q->execute ();
	}

	/**
	 * Dem so luong hoc sinh theo trang thai cua 1 lop hoc
	 *
	 * @param
	 *        	int - $myclass_id
	 * @param
	 *        	int - $tracked_at
	 * @return $list
	 *
	 */
	public function getCountAllStudentStatusBySchoolyearIdAndCustomerId($school_year_id, $customer_id, $workplace_id = null, $myclass_id = null) {

		$q = $this->createQuery ( 'sc' )
			->select ( "mc.id as class_id, mc.name as mc_name, wp.id AS wp_id, wp.title AS wp_name, cus.id AS cus_id, cus.title AS cus_title, sy.id AS sy_id, sy.title AS sy_title, sc.type as type, count(sc.type) as number, cr.id" )
			->innerJoin ( 'sc.Student s' )
			->leftJoin ( 'sc.MyClass mc' )
			->addWhere ( 's.deleted_at IS NULL' )
			->leftJoin ( 'mc.PsCustomer cus' )
			->leftJoin ( 'mc.PsClassRooms cr' )
			->leftJoin ( 'cr.PsWorkPlaces wp' )
			->leftJoin ( 'mc.PsSchoolYear sy With mc.school_year_id = ?', $school_year_id )
			->addWhere ( 'cus.id = ?', $customer_id );
			//->addWhere ( 'sc.type <> ?', PreSchool::SC_STATUS_FINISHED );

		if (isset ( $workplace_id )) {
			if (is_array ( $workplace_id )) {
				$q->andWhereIn ( 'wp.id', $workplace_id );
			} else {
				$q->addWhere ( 'wp.id = ?', $workplace_id );
			}
		}
		if (isset ( $myclass_id )) {
			if (is_array ( $myclass_id )) {
				$q->andWhereIn ( 'sc.myclass_id', $myclass_id );
			} else {
				$q->andWhere ( 'sc.myclass_id = ?', $myclass_id );
			}
		}
		$q->groupBy ( 'wp.id, sc.myclass_id, sc.type' );
		// echo $q; die;
		return $q->fetchArray ();
	}

	/**
	 * Dem so luong hoc sinh theo trang thai cua 1 lop hoc
	 *
	 * @param
	 *        	int - $myclass_id
	 * @param
	 *        	int - $tracked_at
	 * @return $list
	 *
	 */
	/*
	 * public function getCountStudentStatusByClassId($myclass_id, $tracked_at = null, $status) {
	 * $tracked_at = ($tracked_at == null) ? date('Ymd') : $tracked_at;
	 * $q = $this->createQuery('sc')
	 * ->select("count(sc.type) as number")
	 * ->innerJoin('sc.Student s')
	 * ->addWhere('s.deleted_at IS NULL')
	 * ->andWhere(' DATE_FORMAT(sc.start_at,"%Y%m%d") <= ?', date('Ymd', strtotime($tracked_at)))
	 * ->andWhere('sc.stop_at IS NULL OR DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?', date('Ymd', strtotime($tracked_at)))
	 * ->andWhere('sc.myclass_id = ?', $myclass_id)
	 * ->andWhere('sc.type = ?', $status)
	 * ->groupBy('sc.type');
	 * return $q->fetchOne();
	 * }
	 */

	/**
	 * Lay danh sach hoc sinh( Hoc thu + Chinh thuc) cua 1 lop hoc
	 *
	 * @param
	 *        	int - $myclass_id
	 * @param
	 *        	int - $tracked_at
	 * @param
	 *        	int - $sc_is_activated
	 * @return $list
	 *
	 */
	public function getTestOfficalStudentsByClassId($myclass_id, $tracked_at = null, $sc_is_activated = null) {

		$tracked_at = ($tracked_at == null) ? date ( 'Ymd' ) : $tracked_at;
		$sc_is_activated = (isset ( $sc_is_activated )) ? $sc_is_activated : PreSchool::ACTIVE;

		$q = $this->createQuery ( 'sc' )
			->
		// cus.school_name AS school_name, cus.address AS address, cus.tel AS tel, cus.mobile AS mobile, cus.logo AS logo
		select ( "sc.id as id,sc.student_id AS student_id, sc.type AS type," )
			->addSelect ( "s.id AS s_id, s.student_code as student_code, s.first_name AS first_name, s.last_name AS last_name, CONCAT(s.first_name, ' ', s.last_name) AS full_name, s.nick_name AS nick_name, s.birthday AS birthday, s.sex AS sex, s.year_data AS year_data, s.address AS address, s.nationality AS nationality, rel.title AS title_religion, eth.title AS title_ethnic " )
			->innerJoin ( 'sc.Student s WITH sc.is_activated = ?', $sc_is_activated )
			->innerJoin ( 's.PsCustomer cus' )
			->leftJoin ( 's.PsReligion rel' )
			->leftJoin ( 's.PsEthnic eth' )
			->addWhere ( 's.deleted_at IS NULL' )
			->andWhereIn ( 'sc.type', array (
				PreSchool::SC_STATUS_TEST,
				PreSchool::SC_STATUS_OFFICIAL ) )
			->andWhere ( ' DATE_FORMAT(sc.start_at,"%Y%m%d") <= ?', date ( 'Ymd', strtotime ( $tracked_at ) ) )
			->andWhere ( 'sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?', date ( 'Ymd', strtotime ( $tracked_at ) ) )
			->andWhere ( 'sc.myclass_id = ?', $myclass_id )
			->orderBy ( 's.last_name ASC, s.first_name' );

		return $q->execute ();
	}

	/**
	 * Lay danh sach hoc sinh(Tat ca trang thai) cua 1 lop hoc
	 *
	 * @param
	 *        	int - $myclass_id
	 * @param
	 *        	int - $tracked_at
	 * @return $list
	 *
	 */
	public function getAllStudentsByClassId($myclass_id, $tracked_at = null) {

		$tracked_at = ($tracked_at == null) ? date ( 'Ymd' ) : $tracked_at;

		$q = $this->createQuery ( 'sc' )
			->
		// cus.school_name AS school_name, cus.address AS address, cus.tel AS tel, cus.mobile AS mobile, cus.logo AS logo
		select ( "sc.id as id,sc.student_id AS student_id, sc.type AS type, s.id AD s_id, s.student_code as student_code, s.first_name AS first_name, s.last_name AS last_name, s.nick_name AS nick_name, s.birthday AS birthday, s.sex AS sex, s.year_data AS year_data, s.address AS address, s.nationality AS nationality, rel.title AS title_religion, eth.title AS title_ethnic,cus.id AS ps_customer_id " )
			->innerJoin ( 'sc.Student s' )
			->innerJoin ( 's.PsCustomer cus' )
			->leftJoin ( 's.PsReligion rel' )
			->leftJoin ( 's.PsEthnic eth' )
			->addWhere ( 's.deleted_at IS NULL' )
			->andWhere ( ' DATE_FORMAT(sc.start_at,"%Y%m%d") <= ?', date ( 'Ymd', strtotime ( $tracked_at ) ) )
			->andWhere ( 'sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?', date ( 'Ymd', strtotime ( $tracked_at ) ) )
			->andWhere ( 'sc.myclass_id = ?', $myclass_id )
			->orderBy ( 's.last_name ASC, s.first_name' );

		return $q->execute ();
	}

	/**
	 * Ham lay Lop hien tai ma hoc sinh dang thuoc tại 1 thời điểm
	 *
	 * @author NguyenChienThang
	 *         @vesion 2.0
	 *
	 * @param int $student_id,
	 *        	id hoc sinh
	 * @param datetime $datetime
	 *        	int, thoi diem kiem tra
	 *        	
	 * @return $obj
	 */
	public function getClassByDate($student_id, $datetime) {

		$date = date ( "Ymd", $datetime );

		$q = $this->createQuery ( 'sc' )
			->select ( "sc.id,sc.myclass_id AS myclass_id,sc.type AS type,mc.name AS name, sc.myclass_mode as myclass_mode, mc.school_year_id as school_year_id,mc.ps_customer_id as ps_customer_id,cr.ps_workplace_id AS ps_workplace_id, psy.title AS ps_school_year" )
			->innerJoin ( "sc.MyClass mc" )
			->innerJoin ( 'mc.PsClassRooms cr' )
			->innerJoin ( 'cr.PsWorkPlaces wp' )
			->innerJoin ( 'mc.PsSchoolYear psy' )
			->where ( "sc.student_id =?", $student_id )
			->andWhere ( '(DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND (sc.stop_at IS NULL OR DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array (
				$date,
				$date ) )
			->orderBy ( "sc.start_at" )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Lay lop cua hoc sinh student_id tai mot thoi diem
	 *
	 * @author Nguyen Chien Thang - update
	 *        
	 *        
	 * @param $student_id -
	 *        	int
	 * @param $date -
	 *        	Ymd
	 *        	
	 * @return object StudentClassTable
	 */
	public function getClassByStudent($student_id, $date = null) {

		$date = ($date == null) ? date ( 'Ymd' ) : $date;

		$q = $this->createQuery ( 'c' )
			->
		select ( "c.id, mc.name as name, mc.id as class_id, c.start_at as start_at,c.stop_at as stop_at, c.myclass_mode as myclass_mode, mc.school_year_id as school_year_id ,cr.ps_workplace_id as ps_workplace_id, mc.ps_customer_id as ps_customer_id " )
			->addSelect ( 'wp.id AS wp_id ,wp.title AS workplace_title,' )
			->
		leftJoin ( 'c.MyClass mc' )
			->leftJoin ( 'mc.PsClassRooms cr' )
			->leftJoin ( 'mc.PsSchoolYear psy' )
			->leftJoin ( 'cr.PsWorkPlaces wp' )
			->
		andWhere ( 'c.student_id=?', $student_id )
			->
		// ->andWhere('c.is_activated=?', PreSchool::ACTIVE)
		// ->andWhere('mc.is_activated=?', PreSchool::ACTIVE) => Lop khong con hoat dong van lay ra
		andWhere ( ' DATE_FORMAT(c.start_at,"%Y%m%d") <= ?', date ( 'Ymd', strtotime ( $date ) ) )
			->andWhere ( 'c.stop_at IS NULL OR  DATE_FORMAT(c.stop_at,"%Y%m%d") >= ?', date ( 'Ymd', strtotime ( $date ) ) )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Lay lop cua hoc sinh student_id tai mot thoi diem theo thang cua lop hien tai
	 *
	 * @author Phung Van Thanh - Edit
	 *        
	 *        
	 * @param $student_id -
	 *        	int
	 * @param $date -
	 *        	Ym
	 *        	
	 * @return object StudentClassTable
	 */
	public function getClassActivateByStudent($student_id, $date = null) {

		$date = ($date == null) ? date ( 'Ymd' ) : $date;

		$q = $this->createQuery ( 'c' )
			->
		select ( "c.id, mc.name as name, mc.id as class_id, c.start_at as start_at,c.stop_at as stop_at, c.myclass_mode as myclass_mode, mc.school_year_id as school_year_id ,mc.ps_workplace_id as ps_workplace_id, mc.ps_customer_id as ps_customer_id " )
			->addSelect ( 'wp.id AS wp_id ,wp.title AS workplace_title,' )
			->leftJoin ( 'c.MyClass mc' )
		//->leftJoin ( 'mc.PsClassRooms cr' )
			->leftJoin ( 'mc.PsSchoolYear psy' )
			->leftJoin ( 'mc.PsWorkPlaces wp' )
			->andWhere ( 'c.student_id=?', $student_id )
			->
		// ->andWhere('mc.is_activated=?', PreSchool::ACTIVE) -> Vẫn lấy nếu như lớp học đó dừng hoạt động

		andWhere ( ' DATE_FORMAT(c.start_at,"%Y%m") <= ?', date ( 'Ym', strtotime ( $date ) ) )
			->andWhere ( 'c.stop_at IS NULL OR  DATE_FORMAT(c.stop_at,"%Y%m") >= ?', date ( 'Ym', strtotime ( $date ) ) )
			->orderBy ( 'c.start_at DESC' )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Ham lay thong tin lop cua hoc sinh tai thoi diem thang gần tháng đó nhất
	 *
	 * @author NguyenChienThang
	 * @vesion 2.0
	 *
	 * @param int $student_id,
	 *        	id hoc sinh
	 * @param datetime $datetime
	 *        	int, thoi diem kiem tra
	 *        	
	 * @return $obj
	 */
	public function getClassByMonth($student_id, $datetime) {

		$date = date ( "Ym", $datetime );

		$q = $this->createQuery ( 'sc' )
			->select ( "sc.id,sc.myclass_id AS myclass_id,sc.type AS type,mc.name AS name, sc.myclass_mode as myclass_mode, mc.school_year_id as school_year_id,mc.ps_customer_id as ps_customer_id,mc.ps_workplace_id AS ps_workplace_id, psy.title AS ps_school_year" )
			->innerJoin ( "sc.MyClass mc" )
			//->innerJoin ( 'mc.PsClassRooms cr' )
			->innerJoin ( 'mc.PsWorkPlaces wp' )
			->innerJoin ( 'mc.PsSchoolYear psy' )
			->where ( "sc.student_id =?", $student_id )
			->andWhere ( '(DATE_FORMAT(sc.start_at,"%Y%m") <= ? AND (sc.stop_at IS NULL OR DATE_FORMAT(sc.stop_at,"%Y%m") >= ?))', array ($date,$date ) )
			->orderBy ( "sc.start_at, mc.is_activated DESC" )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * getListClassByStudent($student_id)
	 * Lay danh sach lop hoc sinh tung hoc va dang hoc
	 *
	 * @author quanlymamnon.vn <contact@quanlymamnon.vn - ntsc279@gmail.com>
	 *        
	 * @param $class_id -
	 *        	int
	 * @return int
	 */
	public function getListClassByStudent($student_id, $ps_customer_id) {

		$q = $this->createQuery ( 'c' )
			//->addSelect ( 'c.id,mc.name AS name, mc2.name AS from_class_name,c.type AS type,c.start_at as start_at,c.stop_at as stop_at,c.myclass_mode, cr.id AS cr_id, wp.id AS wp_id ,wp.title AS workplace_title, psy.title AS school_year, psy2.title AS school_year_old' );
			->addSelect ( 'c.id,mc.name AS name, mc2.name AS from_class_name,c.type AS type,c.start_at as start_at,c.stop_at as stop_at,c.myclass_mode, wp.id AS wp_id ,wp.title AS workplace_title, psy.title AS school_year, psy2.title AS school_year_old' );

		$q->addSelect ( 'CONCAT(u.first_name, " ", u.last_name) AS updated_by, c.updated_at AS updated_at' )
			->leftJoin ( 'c.MyClass mc' )
			->leftJoin ( 'mc.PsSchoolYear psy' )
			//->leftJoin ( 'mc.PsClassRooms cr' )
			->leftJoin ( 'mc.PsWorkPlaces wp' )
			->leftJoin ( 'c.MyClass2 mc2' )
			->leftJoin ( 'mc2.PsSchoolYear psy2' )
			->leftJoin ( 'c.UserUpdated u' );
		
		// ->leftJoin('c.StudentWithdraw sw');

// 		$alias = $q->getRootAlias ();
// 		$q->andWhere ( 'mc.ps_customer_id = ?', $ps_customer_id );
// 		$q->andWhere ( $alias . '.student_id = ?', $student_id );

// 		$q->orderBy ( $alias . '.is_activated DESC,'.$alias . '.start_at DESC' );

		$q->andWhere ( 'mc.ps_customer_id = ?', $ps_customer_id );
		$q->andWhere ( 'c.student_id = ?', $student_id );
		
		$q->orderBy ( 'c.is_activated DESC,c.start_at DESC' );
		
		return $q->execute ();
	}

	/**
	 * Ham lay doi tuong theo student id va class_id
	 *
	 * @author pham van thien
	 *        
	 * @param
	 *        	int student_id, int class_id
	 * @param
	 *        	int id
	 * @param datetime $start_at
	 *
	 * @return object student_class
	 *        
	 */
	public function getObjByStudentAndClass($student_id, $class_id = null, $date_at = null) {

		//$date_at = ($date_at == null) ? date ( 'Ymd' ) : $date_at;

		$q = $this->createQuery ( 'c' );
		
		if(isset($class_id) && $class_id > 0){
			$q->andWhere ( 'c.id != ?', $class_id );
		}else{
			$q->andWhere ( 'c.is_activated = ?', PreSchool::ACTIVE );
		}
		if($date_at != ''){
			$q->andWhere ( 'DATE_FORMAT(c.start_at, "%Y%m%d") <= ? AND (c.stop_at IS Null OR DATE_FORMAT(c.stop_at, "%Y%m%d") >= ?)', array(date ( "Ymd", strtotime ( $date_at ) ),date ( "Ymd", strtotime ( $date_at ) )) );
		}
		
		$q->andWhere ( 'c.student_id = ?', $student_id );
		
		return $q;
	}

	/**
	 * Returns an instance of this class.
	 *
	 * Lay danh sach hoc sinh co trang thai: Chinh thuc, Hoc thu tai mot thoi diem cua lop
	 *
	 * @return object StudentClassTable
	 */
	public function getStudentsByClassId($myclass_id, $tracked_at = null) {

		//$tracked_at = ($tracked_at == null) ? date ( 'Ymd' ) : $tracked_at;
		
		$date_at = ($tracked_at == null) ? date ( 'Ymd' ) : date ( 'Ymd', strtotime ( $tracked_at ) );

		$q = $this->createQuery ( 'sc' )
			->select ( "sc.id as id,sc.student_id AS student_id, s.student_code as student_code, CONCAT(s.first_name, ' ', s.last_name) AS full_name, 
					s.birthday AS birthday, s.sex AS sex, s.image AS image, s.year_data AS year_data ,s.status AS status,sg.id as ps_student_growths_id, 
					sg.height as height, sg.weight as weight,cus.school_code AS school_code, sc.created_at AS created_at, CONCAT(uc.first_name, ' ', uc.last_name) AS created_by, sc.updated_at AS updated_at, CONCAT(ud.first_name, ' ', ud.last_name) AS updated_by" )
			->leftJoin ( 'sc.UserUpdated ud' )
			->leftJoin ( 'sc.UserCreated uc' )
			->innerJoin ( 'sc.Student s' )
			->innerJoin ( 's.PsCustomer cus' )
			->andWhereIn ( 'sc.type', array (PreSchool::SC_STATUS_TEST,PreSchool::SC_STATUS_OFFICIAL ))		
			->addWhere ( 's.deleted_at IS NULL' )
			->andWhere ( ' ( DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND ( sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ? ) ) ', array($date_at, $date_at) )
			->leftJoin ( 's.PsStudentGrowths sg')
			->leftJoin ( 's.PsLogtimes lt With DATE_FORMAT(lt.login_at, "%Y%m%d") = ?', date ( 'Ymd', strtotime ( $tracked_at ) ) )
			->andWhere ( 'sc.myclass_id = ?', $myclass_id )
			->orderBy ( 's.last_name ASC, s.first_name, lt.id DESC' );

		return $q->execute ();
	}
	
	/**
	 * Returns an instance of this class.
	 *
	 * Lay danh sach hoc sinh co trang thai: Chinh thuc, Hoc thu tai mot thoi diem cua lop
	 *
	 * @return object StudentClassTable
	 */
	public function getListStudentCurrentOfClass($myclass_id) {
	
		$q = $this->createQuery ( 'sc' )
		->select ( "sc.id as id,sc.student_id AS student_id, s.student_code as student_code, CONCAT(s.first_name, ' ', s.last_name) AS full_name,
		s.birthday AS birthday, s.sex AS sex, s.image AS image, s.year_data AS year_data ,s.status AS status,cus.school_code AS school_code, sc.created_at AS created_at, CONCAT(uc.first_name, ' ', uc.last_name) AS created_by, sc.updated_at AS updated_at, CONCAT(ud.first_name, ' ', ud.last_name) AS updated_by" )
		->leftJoin ( 'sc.UserUpdated ud' )
		->leftJoin ( 'sc.UserCreated uc' )
		->innerJoin ( 'sc.Student s' )
		->innerJoin ( 's.PsCustomer cus' )
		->addWhere ( 'sc.is_activated =?',  PreSchool:: ACTIVE)
		//->andWhereIn ( 'sc.type', array (PreSchool::SC_STATUS_TEST,PreSchool::SC_STATUS_OFFICIAL,PreSchool::SC_STATUS_PAUSE, PreSchool::SC_STATUS_HOLD ))
		->addWhere ( 's.deleted_at IS NULL' )
						
		->andWhere ( 'sc.myclass_id = ?', $myclass_id )
		->orderBy ( 's.last_name ASC, s.first_name' );
	
		return $q->execute ();
	}

	/**
	 * Returns an instance of this class.
	 *
	 * Lay danh sach hoc sinh co trang thai: Chinh thuc, Hoc thu tai mot thoi diem cua lop va khong dang ky hoc thu 7
	 *
	 * @return object StudentClassTable
	 */
	public function getStudentsNotSaturday($myclass_id, $tracked_at = null) {

		$tracked_at = ($tracked_at == null) ? date ( 'Ymd' ) : $tracked_at;

		$q = $this->createQuery ( 'sc' )
			->select ( "sc.id as id,sc.student_id AS student_id, s.student_code as student_code, CONCAT(s.first_name, ' ', s.last_name) AS full_name, s.birthday AS birthday, s.image AS image, s.year_data AS year_data ,s.status AS status,
		    sg.id as ps_student_growths_id, sg.height as height, sg.weight as weight,
		    lt.id as ps_logtime_id, cus.school_code AS school_code
		    " )
			->innerJoin ( 'sc.Student s' )
			->innerJoin ( 's.PsCustomer cus' )
			->andWhereIn ( 'sc.type', array (
				PreSchool::SC_STATUS_TEST,
				PreSchool::SC_STATUS_OFFICIAL ) )
			->addWhere ( 's.deleted_at IS NULL' )
			->andWhere ( ' DATE_FORMAT(sc.start_at,"%Y%m%d") <= ?', date ( 'Ymd', strtotime ( $tracked_at ) ) )
			->andWhere ( 'sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?', date ( 'Ymd', strtotime ( $tracked_at ) ) )
			->leftJoin ( 's.PsStudentGrowths sg' )
			->leftJoin ( 's.PsLogtimes lt With DATE_FORMAT(lt.login_at, "%Y%m%d") = ?', date ( 'Ymd', strtotime ( $tracked_at ) ) )
			->andWhere ( 'sc.myclass_id = ?', $myclass_id )
			->andWhere ( 'sc.myclass_mode = ?', PreSchool::NOT_ACTIVE )
			->orderBy ( 's.last_name ASC, s.first_name, lt.id DESC' );

		return $q->execute ();
	}

	/**
	 * getNumberStudentActivitie($ps_myclass_id)
	 * Tinh so luong hoc sinh o thoi diem hien tai dang theo hoc o lop: trang thai= Hoc thu ; Chinh thuc
	 *
	 * @author thangnc <contact@quanlymamnon.vn - ntsc279@gmail.com>
	 *        
	 * @param $class_id -
	 *        	int
	 * @return int
	 */
	public function getNumberStudentActivitie($class_id) {

		$date_at = date ( 'Ymd' );
		$query = $this->createQuery ( 'a' )
			->innerJoin ( 'a.Student s' )			
			->where ( 'a.myclass_id = ?', $class_id )
			->andWhere ( 's.deleted_at IS NULL' )
			->andWhereIn ( 'a.type', array (
				PreSchool::SC_STATUS_OFFICIAL,
				PreSchool::SC_STATUS_TEST ) );

		$query->andWhere ( '(DATE_FORMAT(a.start_at,"%Y%m%d") <= ?) AND (a.stop_at IS NULL OR  DATE_FORMAT(a.stop_at,"%Y%m%d") >= ?)', array($date_at,$date_at) );

		return $query->count ();
	}
	
	// Lay tong so hoc sinh dang la lop hien tại
	public function getNumberStudentClassActivitie($class_id) {
	
		$date_at = date ( 'Ymd' );
		$query = $this->createQuery ( 'a' )
		->innerJoin ( 'a.Student s' )
		->where ( 'a.myclass_id = ?', $class_id )
		->addWhere ( 'a.is_activated =?',  PreSchool:: ACTIVE)
		->andWhere ( 's.deleted_at IS NULL' )
		->andWhereIn ( 'a.type', array (
				PreSchool::SC_STATUS_OFFICIAL,
				PreSchool::SC_STATUS_TEST ) );
	
		$query->andWhere ( '(DATE_FORMAT(a.start_at,"%Y%m%d") <= ?) AND (a.stop_at IS NULL OR  DATE_FORMAT(a.stop_at,"%Y%m%d") >= ?)', array($date_at,$date_at) );
	
		return $query->count ();
	}

	public function getNumberStudentActivitieDateAt($class_id, $date_at) {
		
		if($date_at ==''){
			$date_at = date ( 'Y-m-d' );
		}
		$query = $this->createQuery ( 'a' )
		->innerJoin ( 'a.Student s' )
		->where ( 'a.myclass_id = ?', $class_id )
		->andWhere ( 's.deleted_at IS NULL' )
		->andWhereIn ( 'a.type', array (
				PreSchool::SC_STATUS_OFFICIAL,
				PreSchool::SC_STATUS_TEST ) );
		
		$query->andWhere ( ' DATE_FORMAT(a.start_at,"%Y%m%d") <= ? AND (a.stop_at IS NULL OR  DATE_FORMAT(a.stop_at,"%Y%m%d") >= ?)', array(date('Ymd',strtotime($date_at)),date('Ymd',strtotime($date_at))) );
		
		return $query->count ();
	}
	
	/**
	 * getNumberStudentByClassId($ps_myclass_id)
	 * Lay so luong hoc sinh cua lop (bao gom ca hoc sinh da ra truong, nghi hoc)
	 *
	 * @author quanlymamnon.vn <contact@quanlymamnon.vn - ntsc279@gmail.com>
	 *        
	 * @param $class_id -
	 *        	int
	 * @return int
	 */
	public function getNumberStudentByClassId($class_id) {

		$query = $this->createQuery ( 'a' )
			->where ( 'a.myclass_id = ?', $class_id );
		return $query->count ();
	}

	/**
	 * Lay tat ca hoc sinh trong lop hoc khong phan biet trang thai
	 * 
	 * @author Nguyen Chien Thang
	 *        
	 * @param int $ps_class_id
	 * @param int $ps_customer_id
	 * @return mixed
	*/
	public function getStudentsOfClass($ps_class_id, $ps_customer_id) {
		$q = $this->createQuery ( 'sc' )
		->select ( 'sc.start_at AS start_at, sc.stop_at AS stop_at, s.id AS id, ' . 's.image AS image, ' . 's.student_code AS student_code, ' . 's.first_name AS first_name, ' . 's.last_name AS last_name, ' . 's.sex AS sex, ' . 's.year_data AS year_data,' . 's.birthday AS birthday, s.status AS status,s.year_data AS year_data, sc.type AS student_class_type, sc.id AS student_class_id' )
		->innerJoin ( 'sc.Student s With sc.myclass_id = ?', $ps_class_id )
		->andWhere ('s.deleted_at IS NULL')
		->andWhere ( 's.ps_customer_id = ?', $ps_customer_id )
		->orderBy( 'sc.type DESC,s.last_name, s.birthday DESC' );

		return $q->execute ();
	}
	
	/**
	 * FUNCTIOON: getPsStudentsInClass($ps_class_id, $ps_customer_id, $date_at)
	 * Lay tat ca hoc sinh co trong lop hoc o thoi diem $date_at co trang thai: Hoc thu, Chinh thuc
	 * Mac dinh la thoi diem hien tai
	 *
	 * @author Nguyen Chien Thang
	 *        
	 * @param int $ps_class_id
	 * @param int $ps_customer_id
	 * @param
	 *        	$date
	 * @return $list
	 */
	public function getPsStudentsInClass($ps_class_id, $ps_customer_id, $date_at = null) {

		$date_at = ($date_at == null) ? date ( 'Ymd' ) : $date_at;

		$q = $this->createQuery ( 'sc' );
		$q->select ( 'sc.start_at AS start_at, sc.stop_at AS stop_at, s.id AS id, ' . 's.image AS image, ' . 's.student_code AS student_code, ' . 's.first_name AS first_name, ' . 's.last_name AS last_name, ' . 's.sex AS sex, ' . 's.year_data AS year_data,' . 's.birthday AS birthday, s.status AS status,s.year_data AS year_data, sc.type AS student_class_type, sc.id AS student_class_id' );
		$q->innerJoin ( 'sc.Student s With sc.myclass_id = ?', $ps_class_id )
			->andWhere ( 's.deleted_at IS NULL' )
			->andWhereIn ( 'sc.type', array (
				PreSchool::SC_STATUS_OFFICIAL,
				PreSchool::SC_STATUS_TEST ) );

		$q->andWhere ( ' DATE_FORMAT(sc.start_at,"%Y%m%d") <= ?', $date_at );
		$q->andWhere ( '(sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?)', $date_at );

		$q->andWhere ( 's.ps_customer_id = ?', $ps_customer_id );

		$q->addOrderBy ( 'sc.type DESC,s.last_name, s.birthday DESC' );

		return $q->execute ();
	}

	/**
	 * FUNCTIOON: getPsStudentsInClassAllStatus($ps_class_id, $ps_customer_id, $date_at)
	 * Lay tat ca hoc sinh co trong lop hoc o thoi diem $date_at co tat trạng thái
	 * Mac dinh la thoi diem hien tai
	 *
	 * @author Phung Van Thanh
	 *        
	 * @param int $ps_class_id
	 * @param int $ps_customer_id
	 * @param
	 *        	$date
	 * @return $list
	 */
	public function getPsStudentsInClassAllStatus($ps_class_id, $ps_customer_id, $date_at = null) {

		$date_at = ($date_at == null) ? date ( 'Ymd' ) : $date_at;

		$q = $this->createQuery ( 'sc' );
		$q->select ( 'sc.start_at AS start_at, sc.stop_at AS stop_at, s.id AS id, ' . 's.image AS image, ' . 's.student_code AS student_code, ' . 's.first_name AS first_name, ' . 's.last_name AS last_name, ' . 's.sex AS sex, ' . 's.year_data AS year_data,' . 's.birthday AS birthday, s.status AS status,s.year_data AS year_data, sc.type AS student_class_type, sc.id AS student_class_id' );
		$q->innerJoin ( 'sc.Student s With sc.myclass_id = ?', $ps_class_id )
			->andWhere ( 's.deleted_at IS NULL' );

		$q->andWhere ( ' DATE_FORMAT(sc.start_at,"%Y%m%d") <= ?', $date_at );
		$q->andWhere ( '(sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?)', $date_at );

		$q->andWhere ( 's.ps_customer_id = ?', $ps_customer_id );

		$q->addOrderBy ( 'sc.type ASC,s.last_name, s.birthday DESC' );

		return $q->execute ();
	}

	/**
	 * HAM NAY VIET SAI
	 * 
	 * getStudentsActiveInClass($ps_class_id, $date_at)
	 *
	 * Lay danh sach hoc sinh cua lop o thoi diem $date_at va co trang thai: Hoc thu, Chinh thuc
	 * Mac dinh la thoi diem hien tai
	 *
	 * @param int $ps_class_id
	 * @return $list
	 */
	public function getStudentsActiveInClass($ps_class_id, $date_at = null) {

		$date_at = ($date_at == null) ? date ( 'Ymd' ) : $date_at;

		$q = $this->createQuery ( 'sc' );
		$q->select ( 'sc.student_id' );
		$q->innerJoin ( 'sc.Student s With sc.myclass_id = ?', $ps_class_id )
			->andWhere ( 's.deleted_at IS NULL' )
			->andWhereIn ( 'sc.type', array (
				PreSchool::SC_STATUS_OFFICIAL,
				PreSchool::SC_STATUS_TEST ) );

		$q->andWhere ( ' DATE_FORMAT(sc.start_at,"%Y%m%d") <= ?', $date_at );
		$q->andWhere ( '(sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?)', $date_at );

		return $q->execute ();
	}

	/**
	 * Ham lay doi tuong co start_at lon nhat cua hoc sinh nhung < start_at cua doi tuong dua vao
	 *
	 * @author Nguyen Chien Thang
	 *        
	 * @param
	 *        	int student_id
	 * @param
	 *        	int id
	 * @param datetime $start_at
	 *
	 * @return object student_class
	 *        
	 */
	public function getPsStartAtMaxByObj($student_id, $start_at, $id = null) {

		$q = $this->createQuery ( 'c' );

		$q->andWhere ( 'c.student_id = ?', $student_id );

		if ($id)
			$q->andWhere ( 'c.id != ?', $id );

		$q->andWhere ( 'DATE_FORMAT(c.start_at, "%Y%m%d") <= ? ', date ( "Ymd", strtotime ( $start_at ) ) );

		$q->orderBy ( 'c.start_at DESC' )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Ham lay doi tuong co start_at nho nhat cua hoc sinh nhung > start_at cua doi tuong dua vao
	 *
	 * @author Nguyen Chien Thang
	 *        
	 * @param
	 *        	int student_id
	 * @param
	 *        	int id
	 * @param datetime $start_at
	 *
	 * @return object student_class
	 */
	public function getPsStartAtMinByObj($student_id, $start_at, $id = null) {

		$q = $this->createQuery ( 'c' );

		$q->andWhere ( 'c.student_id = ?', $student_id );

		if ($id)
			$q->andWhere ( 'c.id != ?', $id );

		$q->andWhere ( 'DATE_FORMAT(c.start_at, "%Y%m%d") >= ? ', date ( "Ymd", strtotime ( $start_at ) ) );

		$q->orderBy ( 'c.start_at ASC' )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * checkStopStudying($student_id, $date)
	 *
	 * Kiem tra thoi gian nghi hoc, tam dung, ra truong o thoi diem $date
	 * (So sanh start_at voi ngay dau tien cua date va stop_at voi ngay cuoi cung cua date)
	 *
	 * @author Nguyen Chien Thang
	 * @param
	 *        	int - $student_id
	 * @param
	 *        	int time - $date
	 *        	
	 * @return $list
	 */
	public function checkStopStudying($student_id, $date) {

		$date2 = date ( "Ym", $date ) . '01';
		$date1 = date ( "Ymd", $date );

		$q = $this->createQuery ( 'sc' )
			->select ( 'sc.id' )
			->where ( "sc.student_id =?", $student_id )
			->andWhereIn ( 'sc.type', array (
				PreSchool::SC_STATUS_PAUSE,
				PreSchool::SC_STATUS_GRADUATION,
				PreSchool::SC_STATUS_STOP_STUDYING ) )
			->andWhere ( 'DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND (sc.stop_at IS NULL OR DATE_FORMAT(sc.stop_at,"%Y%m%d") >= DATE_FORMAT(LAST_DAY(?),"%Y%m%d"))', array (
				$date2,
				$date1 ) );

		return $q->execute ();
	}

	public function getListClassOrder($student_id) {

		$q = $this->createQuery ( 'c' )
			->where ( 'student_id = ?', $student_id )
			->orderBy ( 'start_at DESC' );
		return $q->fetchOne ();
	}

	public function addStudentQuery(Doctrine_Query $q = null) {

		if (is_null ( $q )) {
			$q = Doctrine_Query::create ()->from ( 'Student s' );
		}

		$alias = $q->getRootAlias ();
		$q->andWhere ( $alias . '.deleted_at Is Not Null' );

		return $q;
	}

	/**
	 * Ham lay tat cac student class <> array id
	 */
	public function findAllNotId($student_id, $array_id) {

		$q = $this->createQuery ( 'c' )
			->where ( 'c.student_id = ?', $student_id )
			->whereNotIn ( 'c.id', $array_id );

		return $q->execute ();
	}

	/**
	 * Ham lay doi tuong co stop_at lon nhat cua hoc sinh
	 *
	 * @author Nguyen Chien Thang
	 *        
	 * @param
	 *        	int student_id
	 * @return object student_class
	 *        
	 */
	public function getStudentStopAtMax($student_id, $id = '') {

		$q = $this->createQuery ( 'c' );

		$q->andWhere ( 'c.student_id = ?', $student_id );

		if ($id)
			$q->andWhere ( 'c.id != ?', $id );

		$q->orderBy ( 'c.start_at DESC' )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Ham lay doi tuong co stop_at lon nhat hoac == NULL cua hoc sinh(day la doi tuong can ke khi them moi nhat)
	 *
	 * @author Nguyen Chien Thang
	 *        
	 * @param
	 *        	int student_id
	 * @return object student_class
	 *        
	 */
	public function getStudentStopAtNull($student_id, $id = '') {

		$q = $this->createQuery ( 'c' );

		$q->andWhere ( 'c.student_id = ?', $student_id );

		// $q->andWhere('c.stop_at IS NULL OR c.stop_at IS NOT NULL');

		if ($id)
			$q->andWhere ( 'c.id != ?', $id );

		$q->orderBy ( 'c.id DESC' )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Ham lay doi tuong co stop_at lon nhat cua hoc sinh nhung < start_at cua doi tuong dua vao
	 *
	 * @author Nguyen Chien Thang
	 *        
	 * @param
	 *        	int student_id
	 * @param
	 *        	int id
	 * @param datetime $start_at
	 *
	 * @return object student_class
	 *        
	 */
	public function getStudentStopAtMaxByObj($student_id, $id, $start_at) {

		$q = $this->createQuery ( 'c' );

		$q->andWhere ( 'c.student_id = ?', $student_id );

		$q->andWhere ( 'c.id != ?', $id );

		$q->andWhere ( 'DATE_FORMAT(c.stop_at, "%Y%m%d") < ? ', date ( "Ymd", $start_at ) );

		$q->orderBy ( 'c.start_at DESC' )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Ham lay doi tuong co start_at lon nhat cua hoc sinh nhung < start_at cua doi tuong dua vao
	 *
	 * @author Nguyen Chien Thang
	 *        
	 * @param
	 *        	int student_id
	 * @param
	 *        	int id
	 * @param datetime $start_at
	 *
	 * @return object student_class
	 *        
	 */
	public function getStartAtMaxByObj($student_id, $start_at, $id = null) {

		$q = $this->createQuery ( 'c' );

		$q->andWhere ( 'c.student_id = ?', $student_id );

		if ($id)
			$q->andWhere ( 'c.id != ?', $id );

		$q->andWhere ( 'DATE_FORMAT(c.start_at, "%Y%m%d") <= ? ', date ( "Ymd", strtotime ( $start_at ) ) );

		$q->orderBy ( 'c.start_at DESC' )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Ham lay doi tuong co start_at nho nhat cua hoc sinh nhung > start_at cua doi tuong dua vao
	 *
	 * @author Nguyen Chien Thang
	 *        
	 * @param
	 *        	int student_id
	 * @param
	 *        	int id
	 * @param datetime $start_at
	 *
	 * @return object student_class
	 *        
	 */
	public function getStartAtMinByObj($student_id, $start_at, $id = null) {

		$q = $this->createQuery ( 'c' );

		$q->andWhere ( 'c.student_id = ?', $student_id );

		if ($id)
			$q->andWhere ( 'c.id != ?', $id );

		$q->andWhere ( 'DATE_FORMAT(c.start_at, "%Y%m%d") >= ? ', date ( "Ymd", strtotime ( $start_at ) ) );

		$q->orderBy ( 'c.start_at ASC' )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Ham lay doi tuong co stop_at lon nhat cua hoc sinh
	 *
	 * @author Nguyen Chien Thang
	 *        
	 * @param
	 *        	int student_id
	 * @return object student_class
	 *        
	 */
	public function getObjByStartAt($student_id, $start_at, $id = '') {

		$q = $this->createQuery ( 'sc' );

		$q->where ( 'sc.student_id = ? AND DATE_FORMAT(sc.start_at,"%Y%m%d") = ?', array (
				$student_id,
				date ( "Ymd", $start_at ) ) );

		if ($id)
			$q->andWhere ( 'sc.id != ?', $id );

		$q->orderBy ( 'sc.start_at' )
			->limit ( 1 );

		return $q->fetchOne ();
	}

	/**
	 * Ham tinh so luong thang tinh tu start_at nho nhat toi datime *
	 */
	public function getNumberMonthByStartAtMin($student_id, $date) {

		// Nếu $date > sc.start_at thì tính theo $date
		$q = $this->createQuery ( 'sc' )
			->select ( "MIN(sc.start_at) AS min_start_at, PERIOD_DIFF(" . date ( 'Ym', $date ) . ",DATE_FORMAT(MIN(sc.start_at),'%Y%m')) AS number_month" )
			->andWhere ( 'sc.student_id = ?', $student_id );

		return $q->fetchOne ();
	}

	public function getByClassId($class_id, $date) {

		$date = date ( "Ymd", $date );
		$q = $this->createQuery ( 'sc' )
			->select ( 'sc.student_id AS student_id,sc.myclass_id AS myclass_id, st.first_name, st.last_name AS last_name , st.birthday AS birthday,mc.name AS class_name' )
			->whereIn ( 'sc.myclass_id', $class_id )
			->innerJoin ( 'sc.Student st' )
			->innerJoin ( 'sc.MyClass mc' )
			->where ( 'st.deleted_at IS NULL' )
			->whereNotIn ( 'sc.type', array (
				3,
				4,
				5 ) )
			->andWhere ( '(DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND (sc.stop_at IS NULL OR DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array (
				$date,
				$date ) )
			->orderBy ( 'sc.myclass_id, st.last_name, st.first_name' );

		return $q->execute ();
	}

	/**
	 * Ham lay quang thoi gian hoc sinh tam dung/nghi hoc,ra truong
	 *
	 * @author NguyenChienThang
	 * @param int $student_id,
	 *        	id hoc sinh
	 *        	
	 * @return list
	 *
	 */
	public function findTimeStudentWithdraw($student_id) {

		$q = $this->createQuery ( 'sc' )
			->select ( "sc.start_at AS start_at,sc.stop_at AS stop_at" )
			->where ( "sc.type IN (3,4,5) AND sc.student_id =?", $student_id );
		return $q->execute ();
	}

	/**
	 * Kiem tra thoi gian nghi hoc, tam dung so voi date
	 * (So sanh start_at voi ngay dau tien cua date va stop_at voi ngay cuoi cung cua date)
	 *
	 * @param
	 *        	int - $student_id
	 * @param
	 *        	datetime - $date
	 *        	
	 * @return obj
	 *
	 */
	public function checkWithdraw($student_id, $date) {

		$date2 = date ( "Ym", $date ) . '01';
		$date1 = date ( "Ymd", $date );

		$q = $this->createQuery ( 'sc' )
			->select ( 'sc.id' )
			->where ( "sc.student_id =?", $student_id )
			->andWhere ( "sc.type IN (3,4,5)" )
			->andWhere ( 'DATE_FORMAT(sc.start_at,"%Y%m%d") <= ? AND (sc.stop_at IS NULL OR DATE_FORMAT(sc.stop_at,"%Y%m%d") >= DATE_FORMAT(LAST_DAY(?),"%Y%m%d"))', array (
				$date2,
				$date1 ) );

		return $q->execute ();
	}

	/**
	 * lay ra hoc sinh da chuyen lop
	 *
	 * @param unknown $ps_customer_id
	 * @return Doctrine_Collection
	 */
	public function getListStudentInClassByCustomer($ps_customer_id) {

		$q = $this->createQuery ( 'sc' )
			->addSelect ( 'sc.id as sc_id, sc.student_id as student_id ,CONCAT(s.first_name, " ", s.last_name) AS student_name, s.student_code as student_code' )
			->innerJoin ( 'sc.Student s' );

		$q->andWhere ( 's.ps_customer_id = ?', $ps_customer_id );
		$q->andWhere ( 'sc.from_myclass_id > 0 ' );

		$q->addGroupBy ( 's.id' );
		$q->orderBy ( 's.last_name' );

		return $q->execute ();
	}
	
	/**
	 * lay ra hoc sinh co trang thai lop hien tai - Updated status student class
	 *
	 * @param unknown $ps_customer_id
	 * @return Doctrine_Collection
	 */
	public function getListStudentClassByCustomerId($ps_customer_id = null) {
		
		$q = $this->createQuery ( 'sc' )
		->addSelect ( 'sc.id as sc_id, sc.student_id as student_id' );
		
		if($ps_customer_id > 0){
			$q->innerJoin ( 'sc.Student s' );
			$q->andWhere ( 's.ps_customer_id = ?', $ps_customer_id );
		}
		
		$q->andWhere ( 'sc.is_activated = ?',PreSchool::ACTIVE );
		
		$q->addGroupBy('sc.student_id');
		
		$q->addHaving ('COUNT(sc.student_id) > 1');
		
		$q->orderBy ( 'sc.student_id,sc.start_at' );
		
		return $q->execute ();
	}
	
	// Ham cap nhat class_id vao bang Student
	public function getListStudentClassByIsActivated($ps_customer_id = null) {
		
		$q = $this->createQuery ( 'sc' )->addSelect ( 'sc.id as sc_id, sc.student_id as student_id' );
		
		$q->innerJoin ( 'sc.Student s' );
		
		if($ps_customer_id > 0){
			$q->andWhere ( 's.ps_customer_id = ?', $ps_customer_id );
		}
		
		$q->andWhere ( 'sc.is_activated = ?',PreSchool::ACTIVE );
		
		$q->addGroupBy('sc.student_id');
		
		$q->orderBy ( 'sc.student_id,sc.start_at' );
		
		return $q->execute ();
	}
	
	/**
	 * lay ra tat ca cac lop ma hoc sinh dang ton tai - Updated status student class
	 *
	 * @param unknown $ps_customer_id
	 * @return Doctrine_Collection
	 */
	public function getListClassByStudentId($student_id) {
		
		$q = $this->createQuery ( 'sc' ) ->addSelect ( 'sc.*' );
		
		$q->addWhere ( 'sc.student_id = ?',$student_id );
		
		$q->andWhere ( 'sc.is_activated = ?',PreSchool::ACTIVE );
		
		$q->orderBy ( 'sc.stop_at,sc.start_at' );
		
		return $q->execute ();
		
	}
}