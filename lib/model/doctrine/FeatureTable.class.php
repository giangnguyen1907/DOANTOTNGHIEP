<?php

/**
 * FeatureTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class FeatureTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object FeatureTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'Feature' );
	}

	/**
	 * FUNCTION: doSelectQuery(Doctrine_Query $query)
	 *
	 * @param
	 *        	Doctrine SQL
	 * @return string SQL
	 */
	public function doSelectQuery(Doctrine_Query $query) {

		$a = $query->getRootAlias ();

		$query->select ( $a . '.id AS id, ' . $a . '.name AS name, ' . $a . '.note AS note, ' . $a . '.iorder AS iorder, ' . $a . '.ps_image_id AS ps_image_id,' . 'I.file_name AS file_name, ' . $a . '.is_activated AS is_activated, ' . $a . '.updated_at AS updated_at,' . $a . '.ps_customer_id AS ps_customer_id, ' . 'cus.title AS customer_title, ' . 'CONCAT(u.first_name, " ", u.last_name) AS updated_by' );

		$query->leftJoin ( $a . '.PsCustomer cus' );
		$query->leftJoin ( $a . '.PsImages I' );
		$query->leftJoin ( $a . '.UserUpdated u' );

		$query->where ( ' 1=1' );

		$query->leftJoin ( 'cus.PsWard pw' );
		$query->leftJoin ( 'pw.PsDistrict d' );
		$query->leftJoin ( 'd.PsProvince p' );

		if (! myUser::credentialPsCustomers ( 'PS_SYSTEM_FEATURE_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0) {
			$query->addWhere ( $a . '.ps_customer_id = ?', myUser::getPscustomerID () );
		}

		return $query;
	}

	/**
	 * Tao SQL lay danh sach theo ps_customer_id
	 *
	 * @return list obj
	 */
	public function setSQLByCustomerId($getField = 'id, name', $psCustomerId = null, $is_activated = null) {

		$q = $this->createQuery ()
			->select ( $getField != '' ? $getField : '*' );

		if ($psCustomerId > 0)
			$q->addWhere ( 'ps_customer_id = ?', $psCustomerId );

		if ($is_activated > 0)
			$q->addWhere ( 'is_activated = ?', $is_activated );

		$q->addOrderBy ( 'iorder' );

		return $q;
	}

	public function getSQLByCustomerId($getField = 'id, name', $psCustomerId = null, $is_activated = null) {

		$chois = array ();

		foreach ( $this->setSQLByCustomerId ( $getField, $psCustomerId, $is_activated )
			->execute () as $obj ) {
			$chois [$obj->getId ()] = $obj->getTitle ();
		}

		return $chois;
	}

	/**
	 * FUNCTION: setSqlFeatures($feature_id)
	 *
	 * @param $feature_id -
	 *        	int
	 * @return string - sql
	 */
	public function setSqlChoicesFeature($feature_id = null) {

		$q = $this->createQuery ()
			->select ( "id, name" );

		$q->where ( 'is_activated = ?', 1 );

		if ($feature_id > 0) {
			$q->where ( 'id = ?', $feature_id );
		}

		$q->orderBy ( 'iorder' );

		return $q;
	}

	/**
	 * FUNCTION: setSqlFeatures($feature_id)
	 *
	 * @param $feature_id -
	 *        	int
	 * @return string - sql
	 */
	public function getChoicesFeature($feature_id = null) {

		return $this->setSqlChoicesFeature ( $feature_id )
			->execute ();
	}
}