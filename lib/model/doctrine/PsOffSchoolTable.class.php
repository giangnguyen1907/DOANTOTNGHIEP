<?php

/**
 * PsOffSchoolTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PsOffSchoolTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object PsOffSchoolTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'PsOffSchool' );
	}

	public function doSelectQuery(Doctrine_Query $query) {

		$a = $query->getRootAlias ();

		$query->select ( $a . '.id AS id,' . $a . '.ps_customer_id AS ps_customer_id,' . $a . '.ps_workplace_id AS ps_workplace_id,' . $a . '.relative_id AS relative_id,' . $a . '.ps_class_id AS ps_class_id,' . $a . '.user_id AS user_id,' . $a . '.description AS description,' . $a . '.reason_illegal AS reason_illegal,' . $a . '.is_activated AS is_activated,' . $a . '.from_date AS from_date,' . $a . '.date_at AS date_at,' . $a . '.to_date AS to_date,' . $a . '.created_at AS created_at,' . $a . '.updated_at AS updated_at,' . 'mc.name AS mc_name,' . 'c.id as c_id,rs.id as rs_id, re.id as re_id, CONCAT(re.title,": ", c.first_name, " ", c.last_name) AS relative_name,' . 'CONCAT(s.first_name, " ", s.last_name) AS student_name,' . 'CONCAT(u.first_name, " ", u.last_name) AS updated_by,' . 'CONCAT(uc.first_name, " ", uc.last_name) AS creator_by,' . 'mc.id,' . 'sc.id,' . 's.id' );

		$query->innerJoin ( $a . '.Student s' );

		// $query->leftJoin($a. '.PsWorkPlaces wp');

		// $query->leftJoin($a. '.MyClass mc');

		$query->leftJoin ( $a . '.Relative c' );
		$query->leftJoin ( 'c.RelativeStudent rs' );
		$query->leftJoin ( 'rs.Relationship re' );
		$date = date ( "Ymd" );

		$query->leftJoin ( 's.StudentClass sc With (DATE_FORMAT(sc.start_at,"%Y%m%d") <= ?  AND (sc.stop_at IS NULL OR  DATE_FORMAT(sc.stop_at,"%Y%m%d") >= ?))', array (
				$date,
				$date ) );

		$query->whereIn ( 'sc.type', array (
				PreSchool::SC_STATUS_OFFICIAL,
				PreSchool::SC_STATUS_TEST ) );

		$query->innerJoin ( 'sc.MyClass mc' );

		$query->leftJoin ( $a . '.UserCreated uc' );

		$query->leftJoin ( $a . '.UserUpdated u' );

		if (! myUser::credentialPsCustomers ( 'PS_STUDENT_OFF_SCHOOL_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0) {
			$query->addWhere ( $a . '.ps_customer_id = ?', myUser::getPscustomerID () );

			$query->addWhere ( $a . '.is_activated = ?', PreSchool::ACTIVE );
		}

		$query->addOrderBy ( $a . '.created_at DESC' );

		return $query;
	}

	/**
	 * Lay ra danh sach hoc sinh xin nghi
	 * Thanh phung
	 */
	public function getStudentOffSchoolByDate($class_id, $date) {

		// echo $date; die();
		$query = $this->createQuery ( 'a' );

		$query->select ( 'a.id AS id,' . 'a.ps_class_id AS ps_class_id,' . 'a.is_activated AS is_activated,' . 'a.student_id AS student_id,' );

		$query->andWhere ( 'a.ps_class_id = ?', $class_id );

		$query->andWhere ( ' DATE_FORMAT(a.from_date,"%Y%m%d") <= ?', date ( 'Ymd', strtotime ( $date ) ) );

		$query->andWhere ( ' DATE_FORMAT(a.to_date,"%Y%m%d") >= ?', date ( 'Ymd', strtotime ( $date ) ) );

		return $query->execute ();
	}

	/**
	 * Lay ra don xin nghi hoc qua Id
	 */
	public function getStudentOffById($id) {

		$query = $this->createQuery ( 'a' );

		$query->select ( 'a.id AS id,' . 'a.ps_customer_id AS ps_customer_id,' . 'a.ps_workplace_id AS ps_workplace_id,' . 'a.user_id AS user_id,' . 'a.description AS description,' . 'a.is_activated AS is_activated,' . 'a.from_date AS from_date,' . 'a.to_date AS to_date,' . 'a.created_at AS created_at,' . 'a.updated_at AS updated_at,' . 'mc.name AS mc_name,' . 'CONCAT(c.first_name, " ", c.last_name) AS relative_name,' . 'CONCAT(s.first_name, " ", s.last_name) AS student_name,' );

		$query->innerJoin ( 'a.Student s' );

		$query->innerJoin ( 'a.PsWorkPlaces wp' );

		$query->leftJoin ( 'a.MyClass mc' );

		$query->leftJoin ( 'a.Relative c' );

		$query->leftJoin ( 'a.UserCreated AS uc' );

		$query->leftJoin ( 'a.UserUpdated AS ud' );

		$query->andWhere ( 'a.id = ?', $id );

		return $query->fetchOne ();
	}

	/**
	 * Lay ra sanh sach don xin nghi hoc cua phu huynh
	 */
	public function getStudentOffByRelativeId($relative_id) {

		$query = $this->createQuery ( 'a' );

		$query->select ( 'a.id AS id,' . 'a.ps_customer_id AS ps_customer_id,' . 'a.ps_workplace_id AS ps_workplace_id,' . 'a.user_id AS user_id,' . 'a.description AS description,' . 'a.is_activated AS is_activated,' . 'a.from_date AS from_date,' . 'a.to_date AS to_date,' . 'a.created_at AS created_at,' . 'a.updated_at AS updated_at,' . 'mc.name AS mc_name,' . 'CONCAT(c.first_name, " ", c.last_name) AS relative_name,' . 'CONCAT(s.first_name, " ", s.last_name) AS student_name,' );

		$query->leftJoin ( 'a.Student s' );

		$query->leftJoin ( 'a.PsWorkPlaces wp' );

		$query->leftJoin ( 'a.MyClass mc' );

		$query->leftJoin ( 'a.Relative c' );

		$query->andWhere ( 'a.relative_id = ?', $relative_id );

		$query->orderBy ( 'created_at DESC' );

		return $query->execute ();
	}
    /**
     * Lay ra sanh sach don xin nghi hoc cua hoc sinh
     */
    public function getStudentOffByStudentId($student_id, $ps_class_id)
    {
        $query = $this->createQuery('a');
        
        $query->select('a.id AS id,' . 'a.ps_customer_id AS ps_customer_id,a.reason_illegal AS reason_illegal,' . 'a.ps_workplace_id AS ps_workplace_id,' . 'a.user_id AS user_id,' . 'a.description AS description,' . 'a.is_activated AS is_activated,' . 'a.from_date AS from_date,' . 'a.to_date AS to_date,' . 'a.created_at AS created_at,' . 'a.updated_at AS updated_at,' . 'mc.name AS mc_name,c.id as c_id, rs.id as rs_id, re.id as re_id,' . 'CONCAT(re.title,": ",c.first_name, " ", c.last_name) AS relative_name,' . 'CONCAT(s.first_name, " ", s.last_name) AS student_name,');
        
        $query->leftJoin('a.Student s');
        
        $query->leftJoin('a.PsWorkPlaces wp');
        
        $query->leftJoin('a.MyClass mc');
        
        $query->leftJoin('a.Relative c');
        $query->leftJoin('c.RelativeStudent rs');
        $query->leftJoin('rs.Relationship re');
        
        $query->andWhere('a.student_id = ?', $student_id);
        
        $query->andWhere('a.ps_class_id = ?', $ps_class_id);
        
        $query->orderBy('created_at DESC');
        
        return $query->execute();
    }
    /**
     * Lay ra ngay xin nghi gan day nhat
     */
    public function getStudentOffSchoolByStudentId($student_id)
    {
    	$query = $this->createQuery('a');
    	
    	$query->select('a.id AS id,' . 'a.ps_customer_id AS ps_customer_id,a.reason_illegal AS reason_illegal,' . 'a.ps_workplace_id AS ps_workplace_id,' . 'a.user_id AS user_id,' . 'a.description AS description,' . 'a.is_activated AS is_activated,' . 'a.from_date AS from_date,' . 'a.to_date AS to_date,' . 'a.created_at AS created_at,' . 'a.updated_at AS updated_at,' . 'mc.name AS mc_name,c.id as c_id, rs.id as rs_id, re.id as re_id,' . 'CONCAT(re.title,": ",c.first_name, " ", c.last_name) AS relative_name,' . 'CONCAT(s.first_name, " ", s.last_name) AS student_name,');
    	
    	$query->leftJoin('a.Student s');
    	
    	$query->leftJoin('a.PsWorkPlaces wp');
    	
    	$query->leftJoin('a.MyClass mc');
    	
    	$query->leftJoin('a.Relative c');
    	$query->leftJoin('c.RelativeStudent rs');
    	$query->leftJoin('rs.Relationship re');
    	
    	$query->andWhere('a.student_id = ?', $student_id);
    	
    	$query->orderBy('to_date DESC');
    	
    	return $query->fetchOne();
    }
    
    
}