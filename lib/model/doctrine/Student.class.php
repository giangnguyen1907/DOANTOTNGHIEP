<?php
/**
 * Student
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package Preschool
 * @subpackage model
 * @author Your name here
 * @version SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Student extends BaseStudent {

	/**
	 * BEGIN: FEE NEW VESION CLOUD *
	 */

	/**
	 * findReceiptByDate($date) Ham tim phieu thu cua thang (gồm cả chưa thanh toán)
	 *
	 * @author Nguyen Chien Thang(ntsc279@hotmail.com)
	 * @param $date inttime
	 * @return $obj
	 *
	 */
	public function findReceiptByDate($date) {

		return Doctrine::getTable ( 'Receipt' )->findOfStudentByDate ( $this->getId (), $date );
	}

	// Tim phieu thu da thanh toan cua $intdate nhat
	public function findReceiptOfStudentByDate($intdate) {

		return Doctrine::getTable ( 'Receipt' )->findReceiptOfStudentByDate ( $this->getId (), $intdate );
	}

	// Tim phieu thu da thanh toan gan $intdate nhat
	public function findReceiptPrevOfStudentByDate($intdate) {

		return Doctrine::getTable ( 'Receipt' )->findReceiptPrevOfStudentByDate ( $this->getId (), $intdate );
	}

	/**
	 * Lay phieu bao cua hoc sinh
	 */
	public function findPsFeeReportOfStudentByDate($date) {

		return Doctrine::getTable ( 'PsFeeReports' )->findPsFeeReportOfStudentByDate ( $this->getId (), $date );
	}

	/**
	 * Lay so thang tinh tu ngay bat dau nho nhat toi $intdate
	 */
	public function getNumberMonthByStartAtMin($intdate) {

		return Doctrine::getTable ( 'StudentClass' )->getNumberMonthByStartAtMin ( $this->getId (), $intdate );
	}

	/**
	 * Ham dem so thang sau phieu thu gan nhat den nay cua 1 hoc sinh
	 *
	 * @param $intdate -
	 *        	thoi diem tinh
	 */
	public function getNumberMonthFromPrev($intdate) {

		return Doctrine::getTable ( 'Receipt' )->getNumberMonthFromPrev ( $this->getId (), $intdate );
	}

	public function findAllServiceStudent($date, $obj_order_max) {

		return Doctrine::getTable ( 'Service' )->findAllServiceStudent ( $this->getId (), $date, $obj_order_max );
	}

	/**
	 * Tinh toan so tien phi ve muon cua 1 thang trong do duoc hieu gia tri do la do phat sinh ve muon cua thang lien ke truoc do Vi du: Bao phi 01/5 thi se tinh du lieu ve muon cua thang 4
	 *
	 * @param $params mixed
	 * @param $date int
	 *
	 * @return mixed
	 */
	public function getInfoLateOfStudent($params = array(), $date) {

		$totalLate = 0; // So tien ve muon phai nop
		$hours = 0; // So gio ve muon

		$lateObject = array ();

		$lateObject ['title'] = 'Out late';

		$lateObject ['unit_price'] = 0;
		$lateObject ['student_id'] = $this->getId ();

		$_lateObject ['ps_workplace_id'] = $params ['ps_workplace_id'];

		// Cach tinh tien ve muon
		$_lateObject ['late_type'] = $params ['late_type'];

		// Gio tan truong
		$_lateObject ['config_default_logout'] = $params ['config_default_logout'];

		// Danh sach khoang gia tinh tien
		$_lateObject ['ps_config_late_fees'] = $params ['ps_config_late_fees'];

		// Kiem tra xem da ton tai trong ReceivableStudent chưa
		$student_late = Doctrine::getTable ( "ReceivableStudent" )->getLateOfStudentInMonth ( $this->getId (), $date );

		if ($student_late) {

			$lateObject ['rs_id'] = $student_late->get ( 'rs_id' );
			$lateObject ['rs_by_number'] = $student_late->get ( 'rs_by_number' );
			$lateObject ['rs_amount'] = $student_late->get ( 'rs_amount' ); // Phai thu
			$lateObject ['rs_spent_number'] = $student_late->get ( 'spent_number' );
			$lateObject ['rs_unit_price'] = $student_late->get ( 'unit_price' );
			$lateObject ['rs_receivable_at'] = PsDateTime::psDatetoTime ( $student_late->get ( 'rs_receivable_at' ) );
			$lateObject ['rs_note'] = $student_late->get ( 'rs_note' );
		} else {
			// Neu late_type = 0 tinh tong so gio của 1 thang * Giá
			if ($_lateObject ['late_type'] == 0) {

				$lateTimes = Doctrine::getTable ( "PsLogtimes" )->getNumberTobeLate ( $this->getId (), $date, $_lateObject ['config_default_logout'] );

				$lateObject ['rs_by_number'] = 0; // So gio ve muon

				$lateObject ['unit_price'] = 0;

				if ($lateTimes != null && $lateTimes->getTotal () > 0) {

					$lateObject ['rs_by_number'] = $lateTimes->getTotal (); // Tong so gio ve muon(don vi tinh là phút)

					// Lay Gia tính tiền ứng với số phút này
					$psConfigLateFees = Doctrine::getTable ( 'PsConfigLateFees' )->getLatePriceOfLateTime ( $_lateObject ['ps_workplace_id'], $lateObject ['rs_by_number'] );

					if ($psConfigLateFees) {
						$lateObject ['unit_price'] = $psConfigLateFees->getPrice ();
					}
				}

				$lateObject ['rs_spent_number'] = $lateObject ['rs_by_number'];

				$lateObject ['rs_amount'] = $lateObject ['rs_spent_number'] * $lateObject ['unit_price']; // Phai thu/Phi thuc te phai nop

				$lateObject ['rs_unit_price'] = $lateObject ['unit_price'];

				$lateObject ['rs_note'] = 'Calculate of the second time';
			} elseif ($_lateObject ['late_type'] == 1) { // Số phút về muộn x giá

				// Lấy số phút về muộn của các ngày trong tháng $date
				$lateTimes = Doctrine::getTable ( "PsLogtimes" )->getNumberMinuteLate ( $this->getId (), $date, $_lateObject ['config_default_logout'] );

				// Tính tiền
				$rs_amount = 0;
				$total_number_minute = 0;

				foreach ( $lateTimes as $lateTime ) {

					$rs_amount_temp = 0;

					foreach ( $_lateObject ['ps_config_late_fees'] as $ps_config_late_fees ) {

						if (($ps_config_late_fees->getFromMinute () <= $lateTime->getNumberMinute ()) && ($lateTime->getNumberMinute () <= $ps_config_late_fees->getToMinute ())) {

							$price = $ps_config_late_fees->getPrice ();
							// $rs_amount_temp = $lateTime->getNumberMinute() * $price;

							// Lay so tien cua quang số phút về muộn tương ứng
							$rs_amount_temp = $price;

							$total_number_minute = $total_number_minute + $lateTime->getNumberMinute ();

							break;
						}
					}

					$rs_amount = $rs_amount + $rs_amount_temp;
				}

				$lateObject ['rs_amount'] = $rs_amount;
				$lateObject ['rs_spent_number'] = $total_number_minute;
				$lateObject ['rs_unit_price'] = $rs_amount;
				$lateObject ['rs_note'] = 'Calculated by hour late'; // Tinh theo muc gia hang ngay
			}

			$lateObject ['rs_id'] = null;

			$lateObject ['rs_receivable_at'] = PsDateTime::psDatetoTime ( $date );
		}
		return $lateObject;
	}

	/**
	 * Lay ra nhung thang lien ke cua mot hoc sinh ? (da loai bo cac thang Tam dung/Thoi hoc) cua $date
	 *
	 * @param $date int
	 * @param $config_start_date_system_fee (yyyy-mm-dd)
	 *        	ngay bat dau tinh phi tren he thong
	 */
	public function getPrecedingMontOfStudent($date, $config_start_date_system_fee) {

		// Tim so luong thang cua phieu thu gan day nhat tinh den nay (Can tim phieu thu da thanh toan gan nhat ?)
		// $receiptPrev = $this->getNumberMonthFromPrev ( $date );
		$receiptPrev = $this->getNumberMonthFromPrevOfStudent ( $date, $config_start_date_system_fee );

		// Tim phieu bao gan nhat

		$number_month = 0;

		// $start_date = time();

		// Set ngay bat dau tinh phi tu cau hinh cua co so
		$start_date = $config_start_date_system_fee; // PsDateTime::psDatetoTime ($config_start_date_system_fee);

		// Phiếu đầu tiên nhất
		$arr ['receiptFirst'] = true;

		$arr ['receiptPrevDate'] = null;

		$arr ['BalanceAmount'] = 0;

		$arr ['CollectedAmount'] = 0;

		// Tien thua cua phieu
		$arr ['balance_last_month_amount'] = 0;

		$arr ['chietkhau_thangtruoc'] = $arr ['hoantra_thangtruoc'] = 0;

		$arr_datetime = array ();

		$arr ['datetime'] = $arr_datetime;

		$index_start = 0;

		if ($receiptPrev && $receiptPrev->get ( 'max_receipt_date' )) {

			$arr ['receiptFirst'] = false;

			$arr ['receiptPrevDate'] = PsDateTime::psDatetoTime ( $receiptPrev->get ( 'max_receipt_date' ) );

			$arr ['chietkhau_thangtruoc'] = $receiptPrev->get ( 'chietkhau_thangtruoc' );
			$arr ['hoantra_thangtruoc'] = $receiptPrev->get ( 'hoantra_thangtruoc' );
			// So tien da nop vao cua phieu thu nay
			$arr ['CollectedAmount'] = $receiptPrev->get ( 'collected_amount' );

			$arr ['BalanceAmount'] = $receiptPrev->get ( 'balance_amount' );

			$arr ['balance_last_month_amount'] = $receiptPrev->get ( 'balance_last_month_amount' );

			$number_month = $receiptPrev->get ( 'number_month' );

			$start_date = $receiptPrev->get ( 'max_receipt_date' );
		} else { // Neu khong co phieu thu gan nhat thi tim tu thoi diem bat dau vào lớp

			$numberMonthObj = $this->getNumberMonthByStartAtMin ( $date );

			if ($numberMonthObj) {

				$min_start_at = $numberMonthObj->get ( 'min_start_at' ); // PsDateTime::psTimetoDate ( PsDateTime::psDatetoTime ( $numberMonthObj->get ( 'min_start_at' ), "Ymd" ),"Ymd" );

				$check_start_date = PsDateTime::psTimetoDate ( PsDateTime::psDatetoTime ( $config_start_date_system_fee ), "Ymd" );

				if (strtotime ( $min_start_at ) >= strtotime ( $check_start_date )) {

					$number_month = $numberMonthObj->get ( 'number_month' );

					$start_date = $numberMonthObj->get ( 'min_start_at' );

					$arr ['receiptPrevDate'] = PsDateTime::psDatetoTime ( $start_date );
				} else {
					/*
					 * $date1_min_start_at = new DateTime(PsDateTime::psTimetoDate($date)); $date2_check_start_date = new DateTime($check_start_date); $interval = $date2_check_start_date->diff($date1_min_start_at); //$number_month = $interval->m;
					 */

					$number_month = PsDateTime::psTimetoDate ( $date, "Ym" ) - PsDateTime::psTimetoDate ( PsDateTime::psDatetoTime ( $config_start_date_system_fee ), "Ym" );

					$number_month = PsDateTime::psNumberMonthByDate ( PsDateTime::psTimetoDate ( PsDateTime::psDatetoTime ( $config_start_date_system_fee ), "Ymd" ), PsDateTime::psTimetoDate ( $date, "Ymd" ) );

					$start_date = $config_start_date_system_fee;

					$arr ['receiptPrevDate'] = PsDateTime::psDatetoTime ( $start_date );
				}
			}
		}

		// Dinh dang lai nam/thang/ngay ve dau thang
		$start_date = date ( 'Y-m', PsDateTime::psDatetoTime ( $start_date ) ) . '-01';

		for($i = $index_start; $i < $number_month; $i ++) {

			$int_datetime = PsDateTime::psDatetoTime ( '+' . $i . ' month', PsDateTime::psDatetoTime ( $start_date ) );
			
			$date_time = PsDateTime::psTimetoDate ($int_datetime, 'Ymd');

			// Gia su khong co thoi gian tam dừng học tập ở trường
			$arr_datetime [] = $int_datetime;
		}

		$arr ['datetime'] = $arr_datetime;

		return $arr;
	}

	/**
	 * Ham dem so thang sau phieu thu (đã thanh toán) gan nhat den $intdate cua 1 hoc sinh
	 *
	 * @version 2.0 - Thay the cho: getNumberMonthFromPrev
	 * @author Nguyen Chien Thang
	 * @param $intdate -
	 *        	thoi diem tinh
	 * @param $config_start_date_system_fee -
	 *        	date (yyyy-mm-dd): Ngat he thong bat dau tinh phi
	 */
	public function getNumberMonthFromPrevOfStudent($intdate, $config_start_date_system_fee) {

		return Doctrine::getTable ( 'Receipt' )->getNumberMonthFromPrevOfStudent ( $this->getId (), $intdate, $config_start_date_system_fee );
	}

	// Lay phieu bao gan so voi $intdate nhat
	public function getMaxFeeReportPrevOfStudent($intdate) {

		return Doctrine::getTable ( 'PsFeeReports' )->getMaxFeeReportPrevOfStudent ( $this->getId (), $intdate );
	}

	// Lay danh sach ReceivableStudentInMonth của 1 tháng, $date: yyyy-mm-dd
	public function getReceivableStudentInMonth($date) {

		return Doctrine::getTable ( 'ReceivableStudent' )->getReceivableStudentInMonth ( $this->getId (), $date );
	}

	// Tinh cac khoan phi cho 1 lan chay bao phi cua hoc sinh
	public function processFeeReportsStudentMain($params, $service_split_flag, $obj_order_max,$tatCaChinhSach,$tatCaGiamTru,$psSchoolYear,$tatCaDoTuoi) {

		$receivable_at = $params ['receivable_at'];

		$normal_day = $params ['normal_day'];

		$saturday_day = $params ['saturday_day'];

		$service_split_flag = $service_split_flag; // $params ['service_split_flag'];

		$obj_order_max = $obj_order_max;

		$type_late = $params ['type_late'];

		$ps_config_late_fees = $params ['ps_config_late_fees'];

		$config_default_logout = $params ['config_default_logout'];

		$config_start_date_system_fee = $params ['config_start_date_system_fee'];

		$param_late ['ps_workplace_id'] = $params ['ps_workplace_id'];

		// Cach tinh tien ve muon
		$param_late ['late_type'] = $params ['type_late'];

		// Gio tan truong
		$param_late ['config_default_logout'] = $params ['config_default_logout'];

		// Danh sach khoang gia tinh tien
		$param_late ['ps_config_late_fees'] = $params ['ps_config_late_fees'];

		$var_date = PsDateTime::psTimetoDate ( $receivable_at, "Y-m-d" );

		$thangTruoc = date('Y-m-d', strtotime($var_date. ' -1 month'));

		$_index = 0; $_chiso = 0;$tem = 0;

		$receiStudentTemp = array (); // Bien de luu du lieu phuc vu luu vao DB

		$giamTruTheoMucDo = array (); 

		$nhatKyCongNo = array (); 

		// Tim cac thang lien ke
		$student_month_before = $this->getPrecedingMontOfStudent ( $receivable_at, $config_start_date_system_fee );

		// Du thang lien ke
		$balanceAmount = isset ( $student_month_before ['BalanceAmount'] ) ? $student_month_before ['BalanceAmount'] : 0;
		// Đã thanh toán của tháng trước
		$collectedAmount = isset ( $student_month_before ['CollectedAmount'] ) ? $student_month_before ['CollectedAmount'] : 0;

		$receiptPrevDate = isset ( $student_month_before ['receiptPrevDate'] ) ? $student_month_before ['receiptPrevDate'] : null;

		// Đã thanh toán của tháng trước
		$chietkhau_thangtruoc = isset ( $student_month_before ['chietkhau_thangtruoc'] ) ? $student_month_before ['chietkhau_thangtruoc'] : 0;

		$hoantra_thangtruoc = isset ( $student_month_before ['hoantra_thangtruoc'] ) ? $student_month_before ['hoantra_thangtruoc'] : 0;

		// Tiền thừa từ phiếu tháng trước nữa chuyển sang
		$balance_last_month_amount = isset ( $student_month_before ['balance_last_month_amount'] ) ? $student_month_before ['balance_last_month_amount'] : 0;

		// Kiểm tra xem tháng trước có dữ liệu đi học hay không
		$duLieuDiemDanh = Doctrine::getTable('PsLogtimes')->layCacTrangThaiDiemDanh($this->getId(),$thangTruoc);
		$dihoc = $nghihoc = 0;
		if(count($duLieuDiemDanh) > 0){
			$coDiemDanh = 1;
			foreach($duLieuDiemDanh as $giatri){
				if($giatri[log_value] == 1){
					$dihoc = $giatri['dihoc'];
				}else{
					$nghihoc = $nghihoc + $giatri['dihoc'];
				}
			}
		}else{
			$coDiemDanh = 0;
		}

		//if($this->getId() == 195 ){ echo 'đi học:'.$dihoc.'<br>';}

		$total_fee_report = 0;
		$tongHoanTra = 0;
		$duTienAn = 0; $duTienAn = 0;

		if ($receiptPrevDate) {

			// Tinh ve dau thang
			$_date = PsDateTime::psTimetoDate ( $receiptPrevDate, "Y-m" ) . '-01';

			// Xóa các dịch vụ trong ReceivableStudent ( khong xóa khoản phải thu khác) của tháng $_date(tháng thanh toán)

			// Tìm các khoan trong ReceivableStudent
			/*
			 * Đoạn này gây lỗi do Update lại số lượng dự kiến của tháng trước $listReceivableStudentInMonth = $this->getReceivableStudentInMonth ( $_date ); foreach ( $listReceivableStudentInMonth as $receivable_student ) {
			 * // Không xóa khoản phải thu khác if ($receivable_student->getReceivableId () <= 0) { $receivable_student->delete (); } }
			 */

			// Lấy tất cả các khoản phí dịch vụ chưa hoàn thành + khoan phai thu khac + ve muon cua thang ($_date -1)
			$fee_services = $this->findAllFeeServiceLastMonthOfStudent ( strtotime ( '-1 month', strtotime ( $_date ) ) );
			//if(count($fee_services) > 0 ){
				//echo '<pre>'; print_r($fee_services);echo '</pre>';die;
			//}
			
			// Tháng trước nữa 
			foreach ( $fee_services as $i => $row ) {
				
				// Xac dinh cac thong tin cua dich vu
				$unit_price 	= $row ['rs_unit_price']; // Đơn giá
				$by_number 		= $row ['rs_by_number']; // So luong mac dinh cua tung thang(So luong du kien)
				$spent_number 	= $row ['rs_spent_number']; // Số lượng đã sử dụng
				$rs_amount 		= $row ['rs_amount']; // Số tiền phải thu thực tế

				$service_type = $row ['service_type'];

				// Cách chia phí tính theo số lần Sử dụng hay số lần Không sử dụng.
				// Kiểu tính theo Số ngày đi học hay theo Số ngày nghỉ học

				$is_type_fee = 0;

				if ($row ['service_id'] > 0) {

					$by_number_detail = $by_number;

					// Xac dinh thong tin nho service_detail
					$detail = Doctrine::getTable ( 'ServiceDetail' )->findOneServiceDetailByDate ( $row ['service_id'], PsDateTime::psDatetoTime ( $row ['rs_receivable_at'] ) );

					if ($detail) {

						$by_number_detail = $detail->getByNumber ();

						$is_type_fee = $detail->getIsTypeFee ();

						// Nếu là dịch vụ cố định
						if ($row ['enable_roll'] == PreSchool::SERVICE_TYPE_FIXED) {
							$by_number = $by_number_detail;
						}
					}
					
					$a = '';

					// Nếu là dịch vụ không cố định và có chia phí
					if ($row ['enable_roll'] == PreSchool::SERVICE_TYPE_NOT_FIXED && $service_split_flag [$row ['service_id']] > 0) {

						/*
						 * if ($is_type_fee != 1) { // Lay gia tri splitvalue cho Da su dung $split_spent_number = Doctrine::getTable ( 'Service' )->findServiceSplitBySpentNumber ( $row ['service_id'], $spent_number ); } else { // Lấy số ngày quy định phí <=> Số lượng dự kiến $row ['rs_by_number']; // Lay gia tri splitvalue theo nghỉ ( Số lần không sử dụng) }
						 */

						if ($is_type_fee == PreSchool::ACTIVE) { // thì $spent_number lấy theo số buổi nghỉ học
							$spent_number = Doctrine::getTable ( 'PsLogtimes' )->getSumAbsentOfStudent ( $this->getId (), $row ['rs_receivable_at'] );
						}

						$split_spent_number = Doctrine::getTable ( 'Service' )->findServiceSplitBySpentNumber ( $row ['service_id'], $spent_number );

						if ($split_spent_number) {
							$rs_amount = $by_number_detail * $unit_price * $split_spent_number->get ( 'splitvalue' );
							
							//$a = $rs_amount;
						}
						//if($this->getId() == 195 ){ echo 'A'.$rs_amount.'<br>';}
					} else if ($row ['enable_roll'] == PreSchool::SERVICE_TYPE_NOT_FIXED) {
						
						$rs_amount = ($by_number - $spent_number)*$unit_price;

						//if($this->getId() == 195 ){ echo 'D'.($by_number - $spent_number)*$unit_price.'<br>';}

						//$duTienAn = $duTienAn + $rs_amount;
					}

					// $rs_amount = $row ['ss_discount'] ? $row ['ss_discount'] * $rs_amount / 100 : $rs_amount;
					$rs_amount = $row ['rs_discount'] ? ((100 - $row ['rs_discount']) * $rs_amount) / 100 : $rs_amount;
					
					$rs_amount = $rs_amount - $row ['rs_discount_amount'];
					
					// if($this->getId() == 58 ){ echo 'C'.$rs_amount.'<br>';}

				}

				//if($this->getId() == 172 ){ echo 'Dư tiền ăn tháng trước: '.$_date.': ' .$duTienAn.'<br>';}

				$receiStudentTemp [$_index] ['service_type'] = $row ['service_type'];

				$receiStudentTemp [$_index] ['title'] = $row ['title'];
				$receiStudentTemp [$_index] ['receivable_student_id'] = $row ['rs_id'];
				$receiStudentTemp [$_index] ['student_id'] = $this->getId ();
				$receiStudentTemp [$_index] ['receivable_id'] = $row ['r_id'];
				$receiStudentTemp [$_index] ['service_id'] = $row ['service_id'];

				$receiStudentTemp [$_index] ['by_number'] = $by_number;
				$receiStudentTemp [$_index] ['by_number'] = $row ['rs_by_number']; // Ko được sửa lại số lượng dự kiến cũ

				$receiStudentTemp [$_index] ['spent_number'] = $spent_number;
				$receiStudentTemp [$_index] ['unit_price'] = $unit_price;
				$receiStudentTemp [$_index] ['enable_roll'] = $row ['enable_roll'];

				$receiStudentTemp [$_index] ['ss_number_month'] = $row ['ss_number_month'];
				$receiStudentTemp [$_index] ['ss_discount'] = $row ['rs_discount'];
				$receiStudentTemp [$_index] ['ss_discount_amount'] = $row ['rs_discount_amount'];

				$receiStudentTemp [$_index] ['amount'] = $rs_amount; // Phi thuc te
				$receiStudentTemp [$_index] ['is_late'] = 0;
				$receiStudentTemp [$_index] ['receivable_at'] = $row ['rs_receivable_at'];
				$receiStudentTemp [$_index] ['hoantra'] = 0;

				$receiStudentTemp [$_index] ['note'] = $row ['rs_note'];

				$_index ++;

				$total_fee_report = $total_fee_report + $rs_amount;
			}
		} else { // Ket thuc cac thang truoc

			// Tìm dữ liệu của báo phí gần nhất và xóa các khoản thuộc dịch vụ ( không xóa khoản phải thu khác)
			/*
			 * $feeReportPrev = $this->getMaxFeeReportPrevOfStudent ( $receivable_at ); if ($feeReportPrev) { // Tìm các khoan trong
			 * $listReceivableStudentInMonth = $this->getReceivableStudentInMonth ( $feeReportPrev->getReceivableAt () );
			 * foreach ( $listReceivableStudentInMonth as $receivable_student ) {
			 * // Không xóa khoản phải thu khác if ($receivable_student->getReceivableId () <= 0) { $receivable_student->delete (); } } }
			 */
		}

		// $tong_tung_thang = array();

		// Những tháng sau lần thanh toán gần nhất trở lại đây (Những tháng liền kề)
		foreach ( $student_month_before ['datetime'] as $pre_datetime ) {
			
			$var_pre_date = date ( "Y-m-d", $pre_datetime );

			$fee_services = $this->findAllFeeServiceOfStudent ( $pre_datetime );
			//if(count($fee_services) > 0 ){
			//	echo '126123: <pre>'; print_r($fee_services);echo '</pre>';die;
			//}
			foreach ( $fee_services as $i => $row ) {
				$array_level = array();
				$tienHoanTra = 0;

				$service_type = $row['service_type'];
				$enable_roll = $row ['enable_roll'];

				// Xac dinh cac thong tin cua dich vu
				$unit_price = $row ['rs_unit_price']; // Don gia
				$by_number  = $row ['rs_by_number']; // So luong mac dinh cua tung thang(So luong du kien)

				//echo 'So luong du kien: '.$by_number.'<br/>';

				$spent_number = $row ['rs_spent_number']; // Da su dung
				$rs_amount = $row ['rs_amount']; // Phi thuc te(So tien phai thu thuc te)

				$tienDichVu = $rs_amount; // Tiền dịch vụ ban đầu khi chưa hoàn trả

				$by_number_detail = 0; // So luong mac dinh tu detail
				$unit_price_detail = 0; // Gia mac dinh tu detail

				$is_type_fee = 0;


				if ($row ['service_id'] > 0) {

					// echo '$rs_amount:'.$rs_amount.'<br/>';

					// Xac dinh thong tin nho service_detail
					$detail = Doctrine::getTable ( 'ServiceDetail' )->findOneServiceDetailByDate ( $row ['service_id'], $pre_datetime );

					if ($detail) {
						$unit_price = $detail->getAmount (); // Thành bỏ rào chỗ này
						$by_number_detail = $detail->getByNumber ();
						// $by_number = $by_number_detail;

						$unit_price_detail = $detail->getAmount ();

						$is_type_fee = $detail->getIsTypeFee ();
					}

					// Phi thuc te của loại dịch vụ không cố định
					if($enable_roll != 1){
						$rs_amount = $unit_price * $by_number;
					}

				}

				if (! $row ['rs_id']) { // Chua co mat trong receivable_student

					// Neu dich vu tinh theo diem danh
					if ($enable_roll == PreSchool::SERVICE_TYPE_NOT_FIXED) {

						// Tinh so luong su dung thuc te cua diem danh
						$spent_number = $row ['sd_spent_number']; // sd_spent_number : Giả sử

						// Phi thuc te = Da su dung* don gia
						$rs_amount = $spent_number * $unit_price_detail;

						$duTienAn = $duTienAn + ($by_number - $spent_number)*$unit_price_detail;

						//if($this->getId() == 195 ){ echo 'A'.($by_number - $spent_number)*$unit_price_detail.'<br>';}

					}
				} else {
					
					// Neu la dich vu tinh theo so lan su dung
					if ($enable_roll == PreSchool::SERVICE_TYPE_NOT_FIXED) {
						$spent_number = $row ['sd_spent_number']; // sd_spent_number : Giả sử
						$rs_amount = $spent_number * $unit_price;

						//if($this->getId() == 195 ){ echo 'B'.($by_number - $spent_number)*$unit_price.'<br>';}
						//echo $row ['rs_id'].'//'.$by_number."_/_".$spent_number."_/_".($by_number - $spent_number)*$unit_price.'<br>';
						$duTienAn = $duTienAn + ($by_number - $spent_number)*$unit_price;

						//if($this->getId() == 446 ){ echo $row ['rs_id']. 'Dư tiền ăn 2: '.$var_pre_date.': '.($by_number - $spent_number)*$unit_price.'<br>';}
					}
				}

				
				
				if ($row ['service_id'] > 0) {

					if ($service_split_flag [$row ['service_id']] > 0) {

						if ($is_type_fee == PreSchool::ACTIVE) { // thì $spent_number lấy theo số buổi nghỉ học
							$spent_number = Doctrine::getTable ( 'PsLogtimes' )->getSumAbsentOfStudent ( $this->getId (), $row ['rs_receivable_at'] );
						}
						
						// Lay gia tri splitvalue cho Da su dung
						$split_spent_number = Doctrine::getTable ( 'Service' )->findServiceSplitBySpentNumber ( $row ['service_id'], $spent_number );

						if ($split_spent_number) {
							$rs_amount = $by_number_detail * $unit_price * $split_spent_number->get ( 'splitvalue' );
							
							//$c .= ' rs_amount: '.$rs_amount.' : by_number_detail: '.$by_number_detail;
						}
					}

					/** Không giảm trừ nữa **/
					//$rs_amount = $row ['rs_discount'] ? ((100 - $row ['rs_discount']) * $rs_amount) / 100 : $rs_amount;
					//$rs_amount = $rs_amount - $row ['rs_discount_amount'];
					
				}
				
				// Kiểm tra xem có mã hoàn lại hay không?
				$service_reduce = trim($row['service_reduce'],',');
				if($service_reduce!=''){
					$arr_service_reduce = explode(',',$service_reduce);

					foreach($arr_service_reduce as $arr_sr){
						
						// Đây là hàm dùng 1 trong 2 lựa chọn. chỗ này chưa áp dụng các dịch vụ nào
						if($arr_sr == 4 || $arr_sr == 5){ // 4: Số buổi đi học ; 5 số buổi nghỉ học

							// Chỗ này chưa được -- Cần check lại %giảm trừ của nó

							$layTienTrucTiep1 = $layTienTrucTiep2 = 0;
							$giamTruTemp1 = $giamTruTemp2 = array();
							$tamGT1 = $tamGT2 = array();
							$soTienPhaiThu1 = $soTienPhaiThu2 = 0;
							$check1 = $check2=0;
							$kt1 = $kt2 = 0;
							if($coDiemDanh == 1){

								if($arr_sr == 4){
									$check1 = 1;
									foreach($tatCaGiamTru as $giamTru){
										if($giamTru->getStatus()==4 and $giamTru->getStart() <= $dihoc and $giamTru->getStop() >= $dihoc){
											
											$txt_json_service = $giamTru->getJsonService();

											$arr_service_reduce =  json_decode($txt_json_service) ;

											foreach($arr_service_reduce as $ss_id => $giatriGT){

												if($ss_id == $row['service_id']){
													$kt1++;

													if($giamTru->getIsType() == 0){
														if(isset($tamGT1['phantram'])){
															$tamGT1['phantram'] = $tamGT1['phantram'] + $giatriGT;
														}else{
															$tamGT1['phantram'] = $giatriGT;
														}
														
														if(isset($giamTruTemp1[$giamTru->getLevel()]['phantram'])){
															$giamTruTemp1[$giamTru->getLevel()]['phantram'] = $giamTruTemp1[$giamTru->getLevel()]['phantram'] + $giatriGT;
														}else{
															$giamTruTemp1[$giamTru->getLevel()]['phantram'] = $giatriGT;
														}
													}else if($giamTru->getIsType() == 2){ // Lấy giá trực tiếp
														$ss_number_month = 1;
														$rs_amount1 = $giatriGT;
														$tienDichVu1 = $rs_amount1;
														$layTienTrucTiep1 = 1;

														if(isset($giamTruTemp1[$giamTru->getLevel()]['tructiep'])){
															$giamTruTemp1[$giamTru->getLevel()]['tructiep'] = $giamTruTemp1[$giamTru->getLevel()]['tructiep'] + $giatriGT;
														}else{
															$giamTruTemp1[$giamTru->getLevel()]['tructiep'] = $giatriGT;
														}

													}else{

														if(isset($tamGT1['tienmat'])){
															$tamGT1['tienmat'] = $tamGT1['tienmat'] + $giatriGT;
														}else{
															$tamGT1['tienmat'] = $giatriGT;
														}
														
														if(isset($giamTruTemp1[$giamTru->getLevel()]['tienmat'])){
															$giamTruTemp1[$giamTru->getLevel()]['tienmat'] = $giamTruTemp1[$giamTru->getLevel()]['tienmat'] + $giatriGT;
														}else{
															$giamTruTemp1[$giamTru->getLevel()]['tienmat'] = $giatriGT;
														}
													}
												}
											}
											
										}
									}
									if($kt1 > 0){
										if($layTienTrucTiep1 == 1){
											$soTienPhaiThu1 = $rs_amount1;
										}else{
											// Nếu hoàn 100% thì lấy giá dịch vụ lẻ từng buổi
											if($tamGT1['phantram'] == 100){
												$soTienPhaiThu1 = $dihoc*$row['price'];
											}else{
												$soTienPhaiThu1 = $tienDichVu - ($tienDichVu*($tamGT1['phantram']/100)) - $tamGT1['tienmat'];
											}
										}
									}
									
								}

								if($arr_sr == 5){
									$check2 = 1;
									foreach($tatCaGiamTru as $giamTru){
										if($giamTru->getStatus()==4 and $giamTru->getStart() <= $nghihoc and $giamTru->getStop() >= $nghihoc){
											$txt_json_service = $giamTru->getJsonService();
											
											$arr_service_reduce =  json_decode($txt_json_service) ;

											foreach($arr_service_reduce as $ss_id => $giatriGT){

												if($ss_id == $row['service_id']){
													$kt2++;
													if($giamTru->getIsType() == 0){
														if(isset($tamGT2['phantram'])){
															$tamGT2['phantram'] = $tamGT2['phantram'] + $giatriGT;
														}else{
															$tamGT2['phantram'] = $giatriGT;
														}
														
														if(isset($giamTruTemp2[$giamTru->getLevel()]['phantram'])){
															$giamTruTemp2[$giamTru->getLevel()]['phantram'] = $giamTruTemp2[$giamTru->getLevel()]['phantram'] + $giatriGT;
														}else{
															$giamTruTemp2[$giamTru->getLevel()]['phantram'] = $giatriGT;
														}
													}else if($giamTru->getIsType() == 2){ // Lấy giá trực tiếp
														
														$ss_number_month = 1;
														$rs_amount2 = $giatriGT;
														$tienDichVu2 = $rs_amount2;
														$layTienTrucTiep2 = 1;

														if(isset($giamTruTemp2[$giamTru->getLevel()]['tructiep'])){
															$giamTruTemp2[$giamTru->getLevel()]['tructiep'] = $giamTruTemp2[$giamTru->getLevel()]['tructiep'] + $giatriGT;
														}else{
															$giamTruTemp2[$giamTru->getLevel()]['tructiep'] = $giatriGT;
														}

													}else{

														if(isset($tamGT2['tienmat'])){
															$tamGT2['tienmat'] = $tamGT2['tienmat'] + $giatriGT;
														}else{
															$tamGT2['tienmat'] = $giatriGT;
														}
														
														if(isset($giamTruTemp2[$giamTru->getLevel()]['tienmat'])){
															$giamTruTemp2[$giamTru->getLevel()]['tienmat'] = $giamTruTemp2[$giamTru->getLevel()]['tienmat'] + $giatriGT;
														}else{
															$giamTruTemp2[$giamTru->getLevel()]['tienmat'] = $giatriGT;
														}
													}
												}
											}
													
										}
									}
									if($kt2 >0){
										if($layTienTrucTiep2 == 1){
											$soTienPhaiThu2 = $rs_amount2;
										}else{
											// Nếu hoàn 100% thì lấy giá dịch vụ lẻ từng buổi
											$soTienPhaiThu2 = $tienDichVu - ($tienDichVu*($tamGT2['phantram']/100)) - $tamGT2['tienmat'];
										}
									}
									
								}

								if($kt2 >0 and $kt2 >0){
									// Giảm trừ 1 ít hơn giảm trừ 2 thì áp dụng giảm trừ 2 (Số ngày nghỉ học)
									if($soTienPhaiThu1 > $soTienPhaiThu2){
										
										$rs_amount = $soTienPhaiThu2;
										$tienHoanTra = $tienDichVu - $rs_amount;
										foreach($giamTruTemp2 as $level_reduce => $value_reduce){
											if($value_reduce['phantram'] > 0){

												if(isset($array_level[$level_reduce]['phantram'])){
													$array_level[$level_reduce]['phantram'] = $array_level[$level_reduce]['phantram']+$value_reduce['phantram'];
												}else{
													$array_level[$level_reduce]['phantram'] = $value_reduce['phantram'];
												}

												$giamTruTheoMucDo[$_chiso]['student_id'] = $this->getId();
												$giamTruTheoMucDo[$_chiso]['service_id'] = $row ['service_id'];
												$giamTruTheoMucDo[$_chiso]['receivable_at'] = $var_date;
												$giamTruTheoMucDo[$_chiso]['title'] = 'Hoàn nghỉ học';
												$giamTruTheoMucDo[$_chiso]['is_type'] = '0';
												$giamTruTheoMucDo[$_chiso]['level'] = $level_reduce;
												$giamTruTheoMucDo[$_chiso]['discount'] = $value_reduce['phantram'];

												$giamTruTheoMucDo[$_chiso] ['tk_no'] = $tk_no;
												$giamTruTheoMucDo[$_chiso] ['tk_co'] = $tk_co;
												$giamTruTheoMucDo[$_chiso] ['tk_mua'] = $tk_mua;
												$giamTruTheoMucDo[$_chiso] ['doituongno'] = $this->getStudentCode();
												$_chiso++;
												
											}

											if($value_reduce['tienmat'] > 0){

												if(isset($array_level[$level_reduce]['tienmat'])){
													$array_level[$level_reduce]['tienmat'] = $array_level[$level_reduce]['tienmat']+$value_reduce['tienmat'];
												}else{
													$array_level[$level_reduce]['tienmat'] = $value_reduce['tienmat'];
												}

												$giamTruTheoMucDo[$_chiso]['student_id'] = $this->getId();
												$giamTruTheoMucDo[$_chiso]['service_id'] = $row ['service_id'];
												$giamTruTheoMucDo[$_chiso]['receivable_at'] = $var_date;
												$giamTruTheoMucDo[$_chiso]['title'] = 'Hoàn nghỉ học';
												$giamTruTheoMucDo[$_chiso]['is_type'] = '1';
												$giamTruTheoMucDo[$_chiso]['level'] = $level_reduce;
												$giamTruTheoMucDo[$_chiso]['discount'] = $value_reduce['phantram'];

												$giamTruTheoMucDo[$_chiso] ['tk_no'] = $tk_no;
												$giamTruTheoMucDo[$_chiso] ['tk_co'] = $tk_co;
												$giamTruTheoMucDo[$_chiso] ['tk_mua'] = $tk_mua;
												$giamTruTheoMucDo[$_chiso] ['doituongno'] = $this->getStudentCode();
												$_chiso++;
												
											}

										}
										
									}else{

										foreach($giamTruTemp1 as $level_reduce => $value_reduce){
											if($value_reduce['phantram'] > 0){

												if(isset($array_level[$level_reduce]['phantram'])){
													$array_level[$level_reduce]['phantram'] = $array_level[$level_reduce]['phantram']+$value_reduce['phantram'];
												}else{
													$array_level[$level_reduce]['phantram'] = $value_reduce['phantram'];
												}

												$giamTruTheoMucDo[$_chiso]['student_id'] = $this->getId();
												$giamTruTheoMucDo[$_chiso]['service_id'] = $row ['service_id'];
												$giamTruTheoMucDo[$_chiso]['receivable_at'] = $var_date;
												$giamTruTheoMucDo[$_chiso]['title'] = 'Hoàn số ngày đi học';
												$giamTruTheoMucDo[$_chiso]['is_type'] = '0';
												$giamTruTheoMucDo[$_chiso]['level'] = $level_reduce;
												$giamTruTheoMucDo[$_chiso]['discount'] = $value_reduce['phantram'];

												$giamTruTheoMucDo[$_chiso] ['tk_no'] = $tk_no;
												$giamTruTheoMucDo[$_chiso] ['tk_co'] = $tk_co;
												$giamTruTheoMucDo[$_chiso] ['tk_mua'] = $tk_mua;
												$giamTruTheoMucDo[$_chiso] ['doituongno'] = $this->getStudentCode();
												$_chiso++;
												
											}

											if($value_reduce['tienmat'] > 0){

												if(isset($array_level[$level_reduce]['tienmat'])){
													$array_level[$level_reduce]['tienmat'] = $array_level[$level_reduce]['tienmat']+$value_reduce['tienmat'];
												}else{
													$array_level[$level_reduce]['tienmat'] = $value_reduce['tienmat'];
												}

												$giamTruTheoMucDo[$_chiso]['student_id'] = $this->getId();
												$giamTruTheoMucDo[$_chiso]['service_id'] = $row ['service_id'];
												$giamTruTheoMucDo[$_chiso]['receivable_at'] = $var_date;
												$giamTruTheoMucDo[$_chiso]['title'] = 'Hoàn số ngày đi học';
												$giamTruTheoMucDo[$_chiso]['is_type'] = '1';
												$giamTruTheoMucDo[$_chiso]['level'] = $level_reduce;
												$giamTruTheoMucDo[$_chiso]['discount'] = $value_reduce['phantram'];

												$giamTruTheoMucDo[$_chiso] ['tk_no'] = $tk_no;
												$giamTruTheoMucDo[$_chiso] ['tk_co'] = $tk_co;
												$giamTruTheoMucDo[$_chiso] ['tk_mua'] = $tk_mua;
												$giamTruTheoMucDo[$_chiso] ['doituongno'] = $this->getStudentCode();
												$_chiso++;
												
											}

										}
										
									}

								}else if($kt1 > 0){ // Chỉ áp dụng giảm trừ đi học
									foreach($giamTruTemp1 as $level_reduce => $value_reduce){
										if($value_reduce['phantram'] > 0){

											if(isset($array_level[$level_reduce]['phantram'])){
												$array_level[$level_reduce]['phantram'] = $array_level[$level_reduce]['phantram']+$value_reduce['phantram'];
											}else{
												$array_level[$level_reduce]['phantram'] = $value_reduce['phantram'];
											}

											$giamTruTheoMucDo[$_chiso]['student_id'] = $this->getId();
											$giamTruTheoMucDo[$_chiso]['service_id'] = $row ['service_id'];
											$giamTruTheoMucDo[$_chiso]['receivable_at'] = $var_date;
											$giamTruTheoMucDo[$_chiso]['title'] = 'Hoàn số ngày đi học';
											$giamTruTheoMucDo[$_chiso]['is_type'] = '0';
											$giamTruTheoMucDo[$_chiso]['level'] = $level_reduce;
											$giamTruTheoMucDo[$_chiso]['discount'] = $value_reduce['phantram'];

											$giamTruTheoMucDo[$_chiso] ['tk_no'] = $tk_no;
											$giamTruTheoMucDo[$_chiso] ['tk_co'] = $tk_co;
											$giamTruTheoMucDo[$_chiso] ['tk_mua'] = $tk_mua;
											$giamTruTheoMucDo[$_chiso] ['doituongno'] = $this->getStudentCode();
											$_chiso++;
											
										}

										if($value_reduce['tienmat'] > 0){

											if(isset($array_level[$level_reduce]['tienmat'])){
												$array_level[$level_reduce]['tienmat'] = $array_level[$level_reduce]['tienmat']+$value_reduce['tienmat'];
											}else{
												$array_level[$level_reduce]['tienmat'] = $value_reduce['tienmat'];
											}

											$giamTruTheoMucDo[$_chiso]['student_id'] = $this->getId();
											$giamTruTheoMucDo[$_chiso]['service_id'] = $row ['service_id'];
											$giamTruTheoMucDo[$_chiso]['receivable_at'] = $var_date;
											$giamTruTheoMucDo[$_chiso]['title'] = 'Hoàn số ngày đi học';
											$giamTruTheoMucDo[$_chiso]['is_type'] = '1';
											$giamTruTheoMucDo[$_chiso]['level'] = $level_reduce;
											$giamTruTheoMucDo[$_chiso]['discount'] = $value_reduce['phantram'];

											$giamTruTheoMucDo[$_chiso] ['tk_no'] = $tk_no;
											$giamTruTheoMucDo[$_chiso] ['tk_co'] = $tk_co;
											$giamTruTheoMucDo[$_chiso] ['tk_mua'] = $tk_mua;
											$giamTruTheoMucDo[$_chiso] ['doituongno'] = $this->getStudentCode();
											$_chiso++;
											
										}

									}

									$rs_amount = $soTienPhaiThu1;
									$tienHoanTra = $tienDichVu - $rs_amount;

								}else if($kt2 > 0){ // Chỉ áp dụng giảm trừ nghỉ học
									foreach($giamTruTemp2 as $level_reduce => $value_reduce){
										if($value_reduce['phantram'] > 0){

											if(isset($array_level[$level_reduce]['phantram'])){
												$array_level[$level_reduce]['phantram'] = $array_level[$level_reduce]['phantram']+$value_reduce['phantram'];
											}else{
												$array_level[$level_reduce]['phantram'] = $value_reduce['phantram'];
											}

											$giamTruTheoMucDo[$_chiso]['student_id'] = $this->getId();
											$giamTruTheoMucDo[$_chiso]['service_id'] = $row ['service_id'];
											$giamTruTheoMucDo[$_chiso]['receivable_at'] = $var_date;
											$giamTruTheoMucDo[$_chiso]['title'] = 'Hoàn nghỉ học';
											$giamTruTheoMucDo[$_chiso]['is_type'] = '0';
											$giamTruTheoMucDo[$_chiso]['level'] = $level_reduce;
											$giamTruTheoMucDo[$_chiso]['discount'] = $value_reduce['phantram'];

											$giamTruTheoMucDo[$_chiso] ['tk_no'] = $tk_no;
											$giamTruTheoMucDo[$_chiso] ['tk_co'] = $tk_co;
											$giamTruTheoMucDo[$_chiso] ['tk_mua'] = $tk_mua;
											$giamTruTheoMucDo[$_chiso] ['doituongno'] = $this->getStudentCode();
											$_chiso++;
											
										}

										if($value_reduce['tienmat'] > 0){

											if(isset($array_level[$level_reduce]['tienmat'])){
												$array_level[$level_reduce]['tienmat'] = $array_level[$level_reduce]['tienmat']+$value_reduce['tienmat'];
											}else{
												$array_level[$level_reduce]['tienmat'] = $value_reduce['tienmat'];
											}

											$giamTruTheoMucDo[$_chiso]['student_id'] = $this->getId();
											$giamTruTheoMucDo[$_chiso]['service_id'] = $row ['service_id'];
											$giamTruTheoMucDo[$_chiso]['receivable_at'] = $var_date;
											$giamTruTheoMucDo[$_chiso]['title'] = 'Hoàn nghỉ học';
											$giamTruTheoMucDo[$_chiso]['is_type'] = '1';
											$giamTruTheoMucDo[$_chiso]['level'] = $level_reduce;
											$giamTruTheoMucDo[$_chiso]['discount'] = $value_reduce['phantram'];

											$giamTruTheoMucDo[$_chiso] ['tk_no'] = $tk_no;
											$giamTruTheoMucDo[$_chiso] ['tk_co'] = $tk_co;
											$giamTruTheoMucDo[$_chiso] ['tk_mua'] = $tk_mua;
											$giamTruTheoMucDo[$_chiso] ['doituongno'] = $this->getStudentCode();

											$_chiso++;
											
										}

									}

									$rs_amount = $soTienPhaiThu2;
									$tienHoanTra = $tienDichVu - $rs_amount;

								}
								
							}

						}
					}
				}
				$text_note = '';
				if($tienHoanTra!=0){
					$text_note = ' Hoàn trả: '.$tienHoanTra;
					$tongHoanTra = $tongHoanTra + $tienHoanTra;
				}
				//if($this->getId() == 120 ){ echo 'So luong du kien: '.$rs_amount.'<br/>';}
				if($rs_amount != 0){

					if($spent_number !=''){
						$hoantra_dichvu = (0-($tienHoanTra+($row['rs_by_number']-$spent_number)*$unit_price ) );
					}else{
						$hoantra_dichvu = 0;
					}
					

					$receiStudentTemp [$_index] ['service_type'] = $service_type;
					$receiStudentTemp [$_index] ['title'] = $row ['title'];
					$receiStudentTemp [$_index] ['receivable_student_id'] = $row ['rs_id'];
					$receiStudentTemp [$_index] ['student_id'] = $this->getId ();
					$receiStudentTemp [$_index] ['receivable_id'] = $row ['r_id'];
					$receiStudentTemp [$_index] ['service_id'] = $row ['service_id'];

					$receiStudentTemp [$_index] ['ss_number_month'] = $row ['ss_number_month'];
					$receiStudentTemp [$_index] ['ss_discount'] = $row ['rs_discount'];
					$receiStudentTemp [$_index] ['ss_discount_amount'] = $row ['rs_discount_amount'];

					$receiStudentTemp [$_index] ['by_number'] = $row ['rs_by_number'];

					$receiStudentTemp [$_index] ['spent_number'] = $spent_number;
					$receiStudentTemp [$_index] ['unit_price'] = $unit_price;
					$receiStudentTemp [$_index] ['enable_roll'] = $row ['enable_roll'];
					$receiStudentTemp [$_index] ['amount'] = $rs_amount;

					// tính cả Hoàn trả tiền ăn
					$receiStudentTemp [$_index] ['hoantra'] = $hoantra_dichvu;
					$receiStudentTemp [$_index] ['is_late'] = 0;
					$receiStudentTemp [$_index] ['receivable_at'] = $var_pre_date;

					$receiStudentTemp [$_index] ['note'] = ($row ['rs_note'] != '') ? $row ['rs_note'].$text_note : $text_note;

					$receiStudentTemp [$_index] ['tk_no'] = $tk_no;
					$receiStudentTemp [$_index] ['tk_co'] = $tk_co;
					$receiStudentTemp [$_index] ['tk_mua'] = $tk_mua;
					$receiStudentTemp [$_index] ['doituongno'] = $this->getStudentCode();

					$total_fee_report = $total_fee_report + $rs_amount;

					$_index ++;

				}
			}

			/*
			if(count($receiStudentTemp) > 0 ){
				echo 'Những tháng liền kề: <pre>'; print_r($receiStudentTemp);echo '</pre>';die;
			}
			*/

			// Lay dich vu ve muon cua cac thang nay
			$lateObject = $this->getInfoLateOfStudent ( $param_late, $pre_datetime );

			if ($lateObject ['rs_amount'] > 0) {
				$receiStudentTemp [$_index] ['service_type'] = 0;
				$receiStudentTemp [$_index] ['title'] = $lateObject ['title'];
				$receiStudentTemp [$_index] ['receivable_student_id'] = $lateObject ['rs_id'];
				$receiStudentTemp [$_index] ['student_id'] = $this->getId ();
				$receiStudentTemp [$_index] ['receivable_id'] = null;
				$receiStudentTemp [$_index] ['service_id'] = null;

				$receiStudentTemp [$_index] ['ss_number_month'] = $row ['ss_number_month'];
				$receiStudentTemp [$_index] ['ss_discount'] = 0;
				$receiStudentTemp [$_index] ['ss_discount_amount'] = 0;
				$receiStudentTemp [$_index] ['hoantra'] = 0;

				$receiStudentTemp [$_index] ['by_number'] = $lateObject ['rs_by_number'];
				$receiStudentTemp [$_index] ['spent_number'] = $lateObject ['rs_spent_number'];
				$receiStudentTemp [$_index] ['unit_price'] = $lateObject ['rs_unit_price'];
				$receiStudentTemp [$_index] ['enable_roll'] = 1;
				$receiStudentTemp [$_index] ['amount'] = $lateObject ['rs_amount'];
				$receiStudentTemp [$_index] ['is_late'] = 1;
				$receiStudentTemp [$_index] ['receivable_at'] = $var_pre_date;
				$receiStudentTemp [$_index] ['note'] = $lateObject ['rs_note'];

				$receiStudentTemp [$_index] ['tk_no'] = '';
				$receiStudentTemp [$_index] ['tk_co'] = '';
				$receiStudentTemp [$_index] ['tk_mua'] = '';
				$receiStudentTemp [$_index] ['doituongno'] = $this->getStudentCode();
				//$receiStudentTemp [$_index] ['note'] = ' Ve muon cac thang lien';

				$total_fee_report = $total_fee_report + $lateObject ['rs_amount'];

				$_index ++;
			}
		} // Ket thuc những tháng liền kề

		//echo 'AAAAAAaCCCC';die;

		// Tháng được chọn
		foreach ( $this->findAllServiceStudent ( $receivable_at, $obj_order_max ) as $i => $row ) {

			$array_level = array();

			// Xac dinh cac thong tin cua dich vu
			$unit_price = $row ['rs_unit_price']; // Don gia
			$by_number = $row ['rs_by_number']; // So luong mac dinh cua tung thang/ So luong du kien(Uu tien lay tu receivable_student)
			$spent_number = $row ['rs_spent_number']; // So da su dung
			$ss_number_month = $row ['ss_number_month']; // Tần xuất thu
			$tienThucTe = $row ['rs_amount']; // Số tiền thực tế của khoản thu

			$tk_no = $row ['tk_no'];
			$tk_co = $row ['tk_co'];
			$tk_mua = $row ['tk_mua'];

			$rs_amount = $tienThucTe; // số tiền thực tế * tần xuất thu

			$receivable_id = $row ['r_id'] ? $row ['r_id'] : null;

			$by_number_detail = 0; // So luong mac dinh tu detail

			$text_note = '';

			$is_type_fee = 0;
			$tienDichVu = 0; $thutructiep = 0;
			$student_id = $this->getId();
			$student_code = $this->getStudentCode();

			if ($row ['service_id']) {

				$check_dichvu = 0;
				$service_type = $row ['service_type']; // 0: bình thường, 1: theo tháng nhập học, 2: theo thời điểm ấn định

				$detail = Doctrine::getTable ( 'ServiceDetail' )->findOneServiceDetailByDate ( $row ['service_id'], $receivable_at );

				if ($detail) {
					$unit_price = $detail->getAmount ();
					$by_number = $by_number_detail = $detail->getByNumber ();
					//$rs_amount = $by_number_detail * $unit_price;

					// Thành sửa: Giá tiền / số lượng * tần xuất thu
					$rs_amount = ($unit_price/$by_number_detail) * $ss_number_month;

					$tienDichVu = $rs_amount*$ss_number_month;

					$tienThucTe = $tienDichVu;

					$is_type_fee = $detail->getIsTypeFee ();
				}

				/* ////// Chiết khấu ở đây*/
				// Kiểm tra tần xuất thu của dịch vụ này. Nếu chưa đến thời gian thu thì bỏ qua không tính nữa

				$soThangTru = $ss_number_month - 1;

				$thangThuTruoc = date('Y-m-d', strtotime($var_date. ' -'.$soThangTru.' month'));
				
				// Kiểm tra loại dịch vụ
				if($service_type == 1){ // Nếu thu theo tháng nhập học
					// Kiểm tra xem tháng này có phải tháng nhập học của học sinh hay không
					$ngayNhapHoc = $this->getStartDateAt();
					if(date('m', strtotime($ngayNhapHoc)) == date('m',strtotime($var_date))){
						$check_dichvu = 1;
					}
				}else if($service_type == 2){
					// Thu theo tháng ấn định
					//echo $row ['service_id'].date('m',strtotime($var_date));die;

					$thangAnDinhThu = trim($row ['service_month'],',');

					$arr_service_month = explode(',', $thangAnDinhThu);

					if(in_array(date('m',strtotime($var_date)), $arr_service_month)){
						$check_dichvu = 1;
					}

				}else if($service_type == 3){ // Khoản thu theo độ tuổi
					
					// Kiểm tra xem có cấu hình dịch vụ cho độ tuổi này hay không
					$birthday = $this->getBirthday();
					$thangtuoi = PreSchool::getMonthYear($birthday, $var_date);
					foreach ($tatCaDoTuoi as $key => $dotuoi_dichvu) {
						if($dotuoi_dichvu->getServiceId() == $row['service_id'] and $dotuoi_dichvu->getStartMonth() <= $thangtuoi and $dotuoi_dichvu->getStopMonth() >= $thangtuoi){

							$ss_number_month = 1;

							$rs_amount = $dotuoi_dichvu->getAmount();

							$tienDichVu = $rs_amount;
						}
					}
					
				}else if($service_type == 4){ // Khoản thu đầu năm học và kéo dài hết năm
					
					// Tháng hiện tại phải lớn hơn tháng đầu năm học
					if(date('Ym',strtotime($var_date)) >= date('Ym',strtotime($psSchoolYear->from_date))){
						//echo date('Ym',strtotime($var_date))."__".date('Ym',strtotime($psSchoolYear->from_date));die;
						// Kiểm tra học sinh này đã thu khoản này trong năm hay chưa
						$kiemTraTrongNam = Doctrine::getTable('ReceivableStudent')->kiemTraTanXuatThu($student_id, $row['service_id'],$psSchoolYear->from_date,$psSchoolYear->to_date);
						
						if(!$kiemTraTrongNam){ // Nếu trong năm mà chưa thu thì tiến hành thu
							$check_dichvu = 1;
						}
						
					}

				}else if($service_type == 5){ // Khoản thu tự hủy sau khi sử dụng



					$check_dichvu = 1;
					/*
					// Tháng hiện tại phải lớn hơn tháng đầu năm học
					if(date('Ym',strtotime($var_date)) >= date('Ym',strtotime($psSchoolYear->from_date))){
						//echo date('Ym',strtotime($var_date))."__".date('Ym',strtotime($psSchoolYear->from_date));die;
						// Kiểm tra học sinh này đã thu khoản này trong năm hay chưa
						$kiemTraTrongNam = Doctrine::getTable('ReceivableStudent')->kiemTraTanXuatThu($student_id, $row['service_id'],$psSchoolYear->from_date,$psSchoolYear->to_date);
						
						if(!$kiemTraTrongNam){ // Nếu trong năm mà chưa thu thì tiến hành thu
							$check_dichvu = 1;
						}
						
					}
					*/

				}else{

					// Kiểm tra tần xuất
					$kiemTraTanXuatThu = Doctrine::getTable('ReceivableStudent')->kiemTraTanXuatThu($student_id, $row['service_id'],$thangThuTruoc,$var_date);

					if(!$kiemTraTanXuatThu){ // Nếu không tồn tại khoản thu này
						$check_dichvu = 1;
					}else{
						$thangThuTiepTheo = date('Ymd', strtotime($kiemTraTanXuatThu->getReceivableAt(). ' +'.$kiemTraTanXuatThu->getNumberMonth().' month'));
						
						if($thangThuTiepTheo <= date('Ymd',strtotime($var_date))){
							$check_dichvu = 1;
						}
					}

				}

				if($check_dichvu == 1){ // Thỏa mãn để chạy phí khoản dịch vụ này
					
					//$tem++;
					//$nhatKyCongNo[$tem][]

					// Lấy các dịch vụ được giảm trừ, chính sách, và cộng tổng số tiền giảm trừ theo mức độ
					// Kiểm tra dịch vụ này có được giảm trừ hay không, có được áp dụng mã ưu tiên nào không
					$kiemTraDichVu = Doctrine::getTable('Service')->kiemTraDichVuCoGiamTruHayKhong($row ['service_id']);
					
					// Nếu tồn tại giảm trừ hoặc các mã ưu tiên
					if($kiemTraDichVu){
						
						$cacCheDoGiamTru = PreSchool::$ps_reduce_status;

						$array_chinhsach = array();
						// Nếu khoản này được giảm trừ đối tượng và học sinh này là đối tượng chính sách
						if($kiemTraDichVu->getIsKidsschool() and $this->getPolicyId() > 0){
							// Xem thuộc chính sách gì? được giảm bao nhiêu, mức độ ưu tiên là gì
							foreach($tatCaChinhSach as $chinhSach){
								if($chinhSach->getId() == $this->getPolicyId()){ // Xem thuộc đối tượng nào
									
									$txt_json_service = $chinhSach->getJsonService();
									$machietkhau = $chinhSach->getPolicyCode();
									$arr_service =  json_decode($txt_json_service) ;
									//print_r($arr_service);die;
									// Nếu tồn tại mã dịch vụ giảm trừ
									foreach($arr_service as $s_id =>$gtgt){
										if($s_id == $row ['service_id']){

											//array_push($array_chinhsach,$s_id);
											$array_chinhsach[$s_id]=$s_id;

											$is_type_gt = $chinhSach->getIsType();
											if($is_type_gt == 2){

												$ss_number_month = 1;
												$rs_amount = $gtgt;
												$tienDichVu = $rs_amount;
												$thutructiep = $rs_amount;
											}else{

												if($gtgt <= 100){
													if(isset($array_level[$chinhSach->getLevel()]['phantram'])){
														$array_level[$chinhSach->getLevel()]['phantram'] = $array_level[$chinhSach->getLevel()]['phantram'] + $gtgt;
													}else{
														$array_level[$chinhSach->getLevel()]['phantram'] = $gtgt;
													}
													$is_type_gt = 0;
												}else{
													if(isset($array_level[$chinhSach->getLevel()]['tienmat'])){
														$array_level[$chinhSach->getLevel()]['tienmat'] = $array_level[$chinhSach->getLevel()]['tienmat'] + $gtgt;
													}else{
														$array_level[$chinhSach->getLevel()]['tienmat'] = $gtgt;
													}
													$is_type_gt = 1;
												}

											}

											$giamTruTheoMucDo[$_chiso]['student_id'] = $this->getId();
											$giamTruTheoMucDo[$_chiso]['service_id'] = $row ['service_id'];
											
											$giamTruTheoMucDo[$_chiso]['receivable_at'] = $var_date;
											$giamTruTheoMucDo[$_chiso]['title'] = $chinhSach->getTitle();
											$giamTruTheoMucDo[$_chiso]['level'] = $chinhSach->getLevel();

											$giamTruTheoMucDo[$_chiso]['is_type'] = $is_type_gt;
											$giamTruTheoMucDo[$_chiso]['discount'] = $gtgt;

											$giamTruTheoMucDo[$_chiso] ['tk_no'] = $tk_no;
											$giamTruTheoMucDo[$_chiso] ['tk_co'] = $tk_co;
											$giamTruTheoMucDo[$_chiso] ['tk_mua'] = $tk_mua;
											$giamTruTheoMucDo[$_chiso]['doituongno'] = $this->getStudentCode();
											$giamTruTheoMucDo[$_chiso]['machietkhau'] = $machietkhau;
											$_chiso++;

										}
									}

								}
							}
						}
						
						//$soNgayConLai = PsDateTime::psNumberDaysOfMonth2 ( $ngayNhapHoc );
						//print_r($soNgayConLai);
						// Nếu có mã giảm trừ
						$service_reduce = trim($kiemTraDichVu->getServiceReduce(),',');
						if($service_reduce!=''){
							$arr_service_reduce = explode(',',$service_reduce);

							foreach($arr_service_reduce as $arr_sr){
								
								if($arr_sr == 0){ // Độ tuổi

									$birthday = $this->getBirthday();
									$thangtuoi = PreSchool::getMonthYear($birthday, $var_date);

									//if($this->getId() == 49 ){echo $thangtuoi.'tháng.__';}

									foreach($tatCaGiamTru as $giamTru){
										if($giamTru->getStatus()==0 and $giamTru->getStart() <= $thangtuoi and $giamTru->getStop() >= $thangtuoi){
											
											$chietkhauluyke = $giamTru->getDiscount();

											$machietkhau = $giamTru->getReduceCode();

											$txt_json_service = $giamTru->getJsonService();
											$arr_service_reduce =  json_decode($txt_json_service) ;

											foreach($arr_service_reduce as $ss_id => $giatriGT){
												
												if($chietkhauluyke == 0 and in_array($ss_id, $array_chinhsach)) continue;

												if($ss_id == $row['service_id']){
													
													//$array_chinhsach[$ss_id]=$ss_id;
													$is_type = $giamTru->getIsType();
													
													if($is_type == 0){

														if($giatriGT > 100){
															if(isset($array_level[$giamTru->getLevel()]['tienmat'])){
																$array_level[$giamTru->getLevel()]['tienmat'] = $array_level[$giamTru->getLevel()]['tienmat'] + $giatriGT;
															}else{
																$array_level[$giamTru->getLevel()]['tienmat'] = $giatriGT;
															}
															$is_type = 1;
														}else{
															if(isset($array_level[$giamTru->getLevel()]['phantram'])){
																$array_level[$giamTru->getLevel()]['phantram'] = $array_level[$giamTru->getLevel()]['phantram'] + $giatriGT;
															}else{
																$array_level[$giamTru->getLevel()]['phantram'] = $giatriGT;
															}
														}

													}else if($is_type == 2){ // Lấy giá trực tiếp
														$ss_number_month = 1;
														$rs_amount = $giatriGT;
														$tienDichVu = $rs_amount;
														$thutructiep = $giatriGT;
													}else{
														if(isset($array_level[$giamTru->getLevel()]['tienmat'])){
															$array_level[$giamTru->getLevel()]['tienmat'] = $array_level[$giamTru->getLevel()]['tienmat'] + $giatriGT;
														}else{
															$array_level[$giamTru->getLevel()]['tienmat'] = $giatriGT;
														}
													}

													$giamTruTheoMucDo[$_chiso]['student_id'] = $this->getId();
													$giamTruTheoMucDo[$_chiso]['service_id'] = $row ['service_id'];
													$giamTruTheoMucDo[$_chiso]['receivable_at'] = $var_date;
													$giamTruTheoMucDo[$_chiso]['title'] = $giamTru->getTitle();
													$giamTruTheoMucDo[$_chiso]['is_type'] = $is_type;
													$giamTruTheoMucDo[$_chiso]['level'] = $giamTru->getLevel();
													$giamTruTheoMucDo[$_chiso]['discount'] = $giatriGT;
													
													$giamTruTheoMucDo [$_chiso] ['tk_no'] = $tk_no;
													$giamTruTheoMucDo [$_chiso] ['tk_co'] = $tk_co;
													$giamTruTheoMucDo [$_chiso] ['tk_mua'] = $tk_mua;
													$giamTruTheoMucDo[$_chiso]['doituongno'] = $this->getStudentCode();
													$giamTruTheoMucDo[$_chiso]['machietkhau'] = $machietkhau;

													$_chiso++;
													
												}
											}
										}
									}

								}else if($arr_sr == 1){ // Vào học giữa tháng

									$ngayNhapHoc = $this->getStartDateAt();
									
									$soNgayConLai = PsDateTime::psNumberDaysOfMonth2 ( $ngayNhapHoc );
									$ngayConLai = $this->get ( 'myclass_mode' ) == 1 ? $soNgayConLai['saturday_day'] : $soNgayConLai['normal_day'];
									
									//echo 'AAAAA'.$ngayConLai;
									
									// Kiểm tra xem có phải nhập học của tháng/năm này hay không

									if(date('Ym',strtotime($ngayNhapHoc)) == date('Ym',strtotime($var_date))){

										$ngaychinhxac = date('d',strtotime($ngayNhapHoc));

										foreach($tatCaGiamTru as $giamTru){
											if($giamTru->getStatus()==1 and $giamTru->getStart() <= $ngayConLai and $giamTru->getStop() >= $ngayConLai){
												
												$chietkhauluyke = $giamTru->getDiscount();
												
												$machietkhau = $giamTru->getReduceCode();
												$txt_json_service = $giamTru->getJsonService();

												$arr_service_reduce =  json_decode($txt_json_service) ;
												$is_type = $giamTru->getIsType();
												foreach($arr_service_reduce as $ss_id => $giatriGT){
													
													if($chietkhauluyke == 0 and in_array($ss_id, $array_chinhsach)) continue;

													if($ss_id == $row['service_id']){
														
														// Nếu giảm trừ 100% thì tính lại giá của dịch vụ, nhân với số tiền/1buổi
														if($is_type == 2){ // Lấy giá trực tiếp
														
															$ss_number_month = 1;
															$rs_amount = $giatriGT;
															$tienDichVu = $rs_amount;
															$thutructiep = $giatriGT;
														
														}else{
															
															if($giatriGT == 100){
																$is_type == 2;
																
																$giatriGT = $ngayConLai*$row['price'];
																
																$ss_number_month = 1;
																$rs_amount = $giatriGT;
																$tienDichVu = $rs_amount;
																$thutructiep = $giatriGT;
																
															}else{
																
																// Nhập học giữa tháng được giảm trừ theo % số buổi còn lại
																$is_type = 0;
																
																$soNgayConLai = PsDateTime::psNumberDaysOfMonth2 ( $ngayNhapHoc );
																
																$ngaytrongthang = $this->get ( 'myclass_mode' ) == 1 ? $saturday_day : $normal_day;
																
																$ngayConLai = $this->get ( 'myclass_mode' ) == 1 ? $soNgayConLai['saturday_day'] : $soNgayConLai['normal_day'];
																
																$phantraphaithu = ($ngayConLai / $ngaytrongthang) * 100;
																
																$giatriGT = 100 - $phantraphaithu;
																//echo $phantraphaithu.'<br>';
																if(isset($array_level[$giamTru->getLevel()]['phantram'])){
																	$array_level[$giamTru->getLevel()]['phantram'] = $array_level[$giamTru->getLevel()]['phantram'] + $giatriGT;
																}else{
																	$array_level[$giamTru->getLevel()]['phantram'] = $giatriGT;
																}
																
															}
														}
														
														/*
														if($is_type == 2){ // Lấy giá trực tiếp
														
															$ss_number_month = 1;
															$rs_amount = $giatriGT;
															$tienDichVu = $rs_amount;
															$thutructiep = $giatriGT;
														
														}else{
															
														}
														*/
														
														/*
														// Rào chỗ này lại
														$is_type = $giamTru->getIsType();
														if($is_type == 0){

															if($giatriGT > 100){
																if(isset($array_level[$giamTru->getLevel()]['tienmat'])){
																	$array_level[$giamTru->getLevel()]['tienmat'] = $array_level[$giamTru->getLevel()]['tienmat'] + $giatriGT;
																}else{
																	$array_level[$giamTru->getLevel()]['tienmat'] = $giatriGT;
																}
																$is_type = 1;
															}else{
																if(isset($array_level[$giamTru->getLevel()]['phantram'])){
																	$array_level[$giamTru->getLevel()]['phantram'] = $array_level[$giamTru->getLevel()]['phantram'] + $giatriGT;
																}else{
																	$array_level[$giamTru->getLevel()]['phantram'] = $giatriGT;
																}
															}

														}else if($is_type == 2){ // Lấy giá trực tiếp
															$ss_number_month = 1;
															$rs_amount = $giatriGT;
															$tienDichVu = $rs_amount;
															$thutructiep = $giatriGT;
														}else{
															if(isset($array_level[$giamTru->getLevel()]['tienmat'])){
																$array_level[$giamTru->getLevel()]['tienmat'] = $array_level[$giamTru->getLevel()]['tienmat'] + $giatriGT;
															}else{
																$array_level[$giamTru->getLevel()]['tienmat'] = $giatriGT;
															}
														}
														*/
														
														$giamTruTheoMucDo[$_chiso]['student_id'] = $this->getId();
														$giamTruTheoMucDo[$_chiso]['service_id'] = $row ['service_id'];
														$giamTruTheoMucDo[$_chiso]['receivable_at'] = $var_date;
														$giamTruTheoMucDo[$_chiso]['title'] = $giamTru->getTitle();
														$giamTruTheoMucDo[$_chiso]['is_type'] = $is_type;
														$giamTruTheoMucDo[$_chiso]['level'] = $giamTru->getLevel();
														$giamTruTheoMucDo[$_chiso]['discount'] = $giatriGT;
														
														$giamTruTheoMucDo[$_chiso] ['tk_no'] = $tk_no;
														$giamTruTheoMucDo[$_chiso] ['tk_co'] = $tk_co;
														$giamTruTheoMucDo[$_chiso] ['tk_mua'] = $tk_mua;
														$giamTruTheoMucDo[$_chiso]['doituongno'] = $this->getStudentCode();
														$giamTruTheoMucDo[$_chiso]['machietkhau'] = $machietkhau;

														$_chiso++;
														
													}
												}
												
											}
										}
									}

								}else if($arr_sr == 2){ // Nhập học sau khai giảng

									$ngayNhapHoc = $this->getStartDateAt();
									
									if(date('Ym',strtotime($ngayNhapHoc)) == date('Ym',strtotime($var_date)) ){
										
										$ngayBatDauNamHoc = $psSchoolYear->from_date;

										$tinhThangNhapHoc = PreSchool::getMonthYear($ngayBatDauNamHoc,$ngayNhapHoc);
										
										// if($this->getId() == 15){
										// 	echo $ngayNhapHoc.'__'.$ngayBatDauNamHoc.'<br>';
										// }
										
										foreach($tatCaGiamTru as $giamTru){
											if($giamTru->getStatus()==2 and $giamTru->getStart() <= $tinhThangNhapHoc and $giamTru->getStop() >= $tinhThangNhapHoc){
												
												$chietkhauluyke = $giamTru->getDiscount();
												
												$machietkhau = $giamTru->getReduceCode();
												$txt_json_service = $giamTru->getJsonService();

												$arr_service_reduce =  json_decode($txt_json_service) ;

												foreach($arr_service_reduce as $ss_id => $giatriGT){
													
													if($chietkhauluyke == 0 and in_array($ss_id, $array_chinhsach)) continue;

													if($ss_id == $row['service_id']){
														//$array_chinhsach[$ss_id]=$ss_id;
														$is_type = $giamTru->getIsType();
														if($is_type == 0){

															if($giatriGT > 100){
																if(isset($array_level[$giamTru->getLevel()]['tienmat'])){
																	$array_level[$giamTru->getLevel()]['tienmat'] = $array_level[$giamTru->getLevel()]['tienmat'] + $giatriGT;
																}else{
																	$array_level[$giamTru->getLevel()]['tienmat'] = $giatriGT;
																}
																$is_type = 1;
															}else{
																if(isset($array_level[$giamTru->getLevel()]['phantram'])){
																	$array_level[$giamTru->getLevel()]['phantram'] = $array_level[$giamTru->getLevel()]['phantram'] + $giatriGT;
																}else{
																	$array_level[$giamTru->getLevel()]['phantram'] = $giatriGT;
																}
															}

														}else if($is_type == 2){ // Lấy giá trực tiếp
															$ss_number_month = 1;
															$rs_amount = $giatriGT;
															$tienDichVu = $rs_amount;
															$thutructiep = $giatriGT;
														}else{
															if(isset($array_level[$giamTru->getLevel()]['tienmat'])){
																$array_level[$giamTru->getLevel()]['tienmat'] = $array_level[$giamTru->getLevel()]['tienmat'] + $giatriGT;
															}else{
																$array_level[$giamTru->getLevel()]['tienmat'] = $giatriGT;
															}
														}
														
														$giamTruTheoMucDo[$_chiso]['student_id'] = $this->getId();
														$giamTruTheoMucDo[$_chiso]['service_id'] = $row ['service_id'];
														$giamTruTheoMucDo[$_chiso]['receivable_at'] = $var_date;
														$giamTruTheoMucDo[$_chiso]['title'] = $giamTru->getTitle();
														$giamTruTheoMucDo[$_chiso]['is_type'] = $is_type;
														$giamTruTheoMucDo[$_chiso]['level'] = $giamTru->getLevel();
														$giamTruTheoMucDo[$_chiso]['discount'] = $giatriGT;
														
														$giamTruTheoMucDo [$_chiso] ['tk_no'] = $tk_no;
														$giamTruTheoMucDo [$_chiso] ['tk_co'] = $tk_co;
														$giamTruTheoMucDo [$_chiso] ['tk_mua'] = $tk_mua;
														$giamTruTheoMucDo[$_chiso]['doituongno'] = $this->getStudentCode();
														$giamTruTheoMucDo[$_chiso]['machietkhau'] = $machietkhau;

														$_chiso++;
														
													}
												}
											}
										}

									}
									
								}elseif($arr_sr == 3){ // Năm cuối

									if($this->getTypeYear() == PreSchool::NAM_CUOI){

										$ngayKetThucNamHoc = $psSchoolYear->to_date;
										$ngayNhapHoc = $this->getStartDateAt();

										// số tháng học năm cuối
										$soThangHocCuoi = PreSchool::getMonthYear($ngayNhapHoc,$ngayKetThucNamHoc);

										$sothanghoc = $soThangHocCuoi % 12;

										foreach($tatCaGiamTru as $giamTru){
											if($giamTru->getStatus()==3 and $giamTru->getStart() <= $sothanghoc and $giamTru->getStop() >= $sothanghoc){
												
												$chietkhauluyke = $giamTru->getDiscount();
												
												$machietkhau = $giamTru->getReduceCode();
												$txt_json_service = $giamTru->getJsonService();

												$arr_service_reduce =  json_decode($txt_json_service) ;

												foreach($arr_service_reduce as $ss_id => $giatriGT){
													
													if($chietkhauluyke == 0 and in_array($ss_id, $array_chinhsach)) continue;
													
													if($ss_id == $row['service_id']){
														//$array_chinhsach[$ss_id]=$ss_id;
														$is_type = $giamTru->getIsType();
														if($is_type == 0){

															if($giatriGT > 100){
																if(isset($array_level[$giamTru->getLevel()]['tienmat'])){
																	$array_level[$giamTru->getLevel()]['tienmat'] = $array_level[$giamTru->getLevel()]['tienmat'] + $giatriGT;
																}else{
																	$array_level[$giamTru->getLevel()]['tienmat'] = $giatriGT;
																}
																$is_type = 1;
															}else{
																if(isset($array_level[$giamTru->getLevel()]['phantram'])){
																	$array_level[$giamTru->getLevel()]['phantram'] = $array_level[$giamTru->getLevel()]['phantram'] + $giatriGT;
																}else{
																	$array_level[$giamTru->getLevel()]['phantram'] = $giatriGT;
																}
															}

														}else if($is_type == 2){ // Lấy giá trực tiếp
															$ss_number_month = 1;
															$rs_amount = $giatriGT;
															$tienDichVu = $rs_amount;
															$thutructiep = $giatriGT;
														}else{
															if(isset($array_level[$giamTru->getLevel()]['tienmat'])){
																$array_level[$giamTru->getLevel()]['tienmat'] = $array_level[$giamTru->getLevel()]['tienmat'] + $giatriGT;
															}else{
																$array_level[$giamTru->getLevel()]['tienmat'] = $giatriGT;
															}
														}
														
														$giamTruTheoMucDo[$_chiso]['student_id'] = $this->getId();
														$giamTruTheoMucDo[$_chiso]['service_id'] = $row ['service_id'];
														$giamTruTheoMucDo[$_chiso]['receivable_at'] = $var_date;
														$giamTruTheoMucDo[$_chiso]['title'] = $giamTru->getTitle();
														$giamTruTheoMucDo[$_chiso]['is_type'] = $is_type;
														$giamTruTheoMucDo[$_chiso]['level'] = $giamTru->getLevel();
														$giamTruTheoMucDo[$_chiso]['discount'] = $giatriGT;
														
														$giamTruTheoMucDo [$_chiso] ['tk_no'] = $tk_no;
														$giamTruTheoMucDo [$_chiso] ['tk_co'] = $tk_co;
														$giamTruTheoMucDo [$_chiso] ['tk_mua'] = $tk_mua;
														$giamTruTheoMucDo[$_chiso]['doituongno'] = $this->getStudentCode();
														$giamTruTheoMucDo[$_chiso]['machietkhau'] = $machietkhau;

														$_chiso++;
														
													}

												}
											}
										}

									}

								}elseif($arr_sr == 6){ // Năm đầu

									$ngayNhapHoc = $this->getStartDateAt();
									$ngayBatDauNamHoc = $psSchoolYear->from_date;
									
									// Tháng nhập học = với tháng chạy phí
									$tinhThangNhapHoc = PreSchool::getMonthYear($ngayBatDauNamHoc,$ngayNhapHoc);
									
									//if(date('Ym',strtotime($ngayNhapHoc)) == date('Ym',strtotime($var_date))){

										foreach($tatCaGiamTru as $giamTru){
											
											if($giamTru->getStatus()==6 and $giamTru->getStart() <= $tinhThangNhapHoc and $giamTru->getStop() >= $tinhThangNhapHoc){
											
											//if($giamTru->getStatus()==6){
												
												$chietkhauluyke = $giamTru->getDiscount();
												
												$machietkhau = $giamTru->getReduceCode();
												$txt_json_service = $giamTru->getJsonService();

												$arr_service_reduce =  json_decode($txt_json_service) ;

												foreach($arr_service_reduce as $ss_id => $giatriGT){
													
													if($chietkhauluyke == 0 and in_array($ss_id, $array_chinhsach)) continue;
													
													if($ss_id == $row['service_id']){
														//$array_chinhsach[$ss_id]=$ss_id;
														$is_type = $giamTru->getIsType();
														if($is_type == 0){

															if($giatriGT > 100){
																if(isset($array_level[$giamTru->getLevel()]['tienmat'])){
																	$array_level[$giamTru->getLevel()]['tienmat'] = $array_level[$giamTru->getLevel()]['tienmat'] + $giatriGT;
																}else{
																	$array_level[$giamTru->getLevel()]['tienmat'] = $giatriGT;
																}
																$is_type = 1;
															}else{
																if(isset($array_level[$giamTru->getLevel()]['phantram'])){
																	$array_level[$giamTru->getLevel()]['phantram'] = $array_level[$giamTru->getLevel()]['phantram'] + $giatriGT;
																}else{
																	$array_level[$giamTru->getLevel()]['phantram'] = $giatriGT;
																}
															}

														}else if($is_type == 2){ // Lấy giá trực tiếp
															$ss_number_month = 1;
															$rs_amount = $giatriGT;
															$tienDichVu = $rs_amount;
															$thutructiep = $giatriGT;
														}else{
															if(isset($array_level[$giamTru->getLevel()]['tienmat'])){
																$array_level[$giamTru->getLevel()]['tienmat'] = $array_level[$giamTru->getLevel()]['tienmat'] + $giatriGT;
															}else{
																$array_level[$giamTru->getLevel()]['tienmat'] = $giatriGT;
															}
														}

														$giamTruTheoMucDo[$_chiso]['student_id'] = $this->getId();
														$giamTruTheoMucDo[$_chiso]['service_id'] = $row ['service_id'];
														$giamTruTheoMucDo[$_chiso]['receivable_at'] = $var_date;
														$giamTruTheoMucDo[$_chiso]['title'] = $giamTru->getTitle();
														$giamTruTheoMucDo[$_chiso]['is_type'] = $is_type;
														$giamTruTheoMucDo[$_chiso]['level'] = $giamTru->getLevel();
														$giamTruTheoMucDo[$_chiso]['discount'] = $giatriGT;
														
														$giamTruTheoMucDo[$_chiso] ['tk_no'] = $tk_no;
														$giamTruTheoMucDo[$_chiso] ['tk_co'] = $tk_co;
														$giamTruTheoMucDo[$_chiso] ['tk_mua'] = $tk_mua;
														$giamTruTheoMucDo[$_chiso]['doituongno'] = $this->getStudentCode();
														$giamTruTheoMucDo[$_chiso]['machietkhau'] = $machietkhau;

														$_chiso++;

													}
												}
											}
										}
									//}
								} 
							}
						}
					}

					if (! $receivable_id) { 
						// Chua co mat trong receivable_student
                        // $by_number = $by_number_detail;
                        // if ($row['enable_roll'] != 0)
						if ($row ['enable_roll'] == PreSchool::SERVICE_TYPE_NOT_FIXED) { // Neu phi tinh theo diem danh
							$by_number = $this->get ( 'myclass_mode' ) == 1 ? $saturday_day : $normal_day;
							$rs_amount = $by_number * $unit_price; // Số tiền tạm thu cho đầu tháng
						}
					}

					if ($service_split_flag [$row ['service_id']] > 0) {

						if ($is_type_fee == 1) { // thì $spent_number lấy theo số buổi nghỉ học
							$by_number = 0;
						}

						$split = Doctrine::getTable ( 'Service' )->findServiceSplitBySpentNumber ( $row ['service_id'], $by_number );

						if ($split) {
							$rs_amount = $by_number_detail * $unit_price * $split->get ( 'splitvalue' );
							$by_number = $by_number_detail;
						}

					}

					/* // Không tính giảm trừ
					$rs_amount = $row ['ss_discount'] ? ((100 - $row ['ss_discount']) * $rs_amount) / 100 : $rs_amount;
					$rs_amount = $rs_amount - $row ['ss_discount_amount'];
					*/
					//echo $tienDichVu;die;
					$i_ = 0;
					$text_note = '';
					$soTienConLai = 0;
					$tongtiengiam = 0;
					ksort($array_level);

					foreach($array_level as $reduce_level => $reduce_value){
						if($i_ == 0){
							$sotiengiam = (($tienDichVu*$reduce_value['phantram'])/100) + $reduce_value['tienmat'];
							$soTienConLai = $tienDichVu - $sotiengiam;
							$tongtiengiam = $tongtiengiam + $sotiengiam;
						}else{
							$sotiengiam = (($soTienConLai*$reduce_value['phantram'])/100) + $reduce_value['tienmat'];
							$soTienConLai = $soTienConLai - $sotiengiam;
							$tongtiengiam = $tongtiengiam + $sotiengiam;
						}
						if($soTienConLai >= 0){
							$text_note.='M'.$reduce_level.':'.number_format($sotiengiam).'; ';
						}
						
						$i_++;
					}

					if($thutructiep == 0){

						if($i_ > 0){
							if($soTienConLai < 0){
								$soTienConLai = 0;
							}
							$rs_amount = round($soTienConLai);
						}
					
					}else{
						$rs_amount = $thutructiep;
						$tongtiengiam = $tienThucTe - $thutructiep;
					}

					$by_number = $by_number * $ss_number_month; // Số lượng dự kiến

					$receiStudentTemp [$_index] ['service_type'] = $service_type;
					$receiStudentTemp [$_index] ['title'] = $row ['title'];
					$receiStudentTemp [$_index] ['receivable_student_id'] = $row ['rs_id'];
					$receiStudentTemp [$_index] ['student_id'] = $this->getId ();
					$receiStudentTemp [$_index] ['receivable_id'] = $receivable_id;
					$receiStudentTemp [$_index] ['service_id'] = $row ['service_id'];
					$receiStudentTemp [$_index] ['by_number'] = $by_number;
					$receiStudentTemp [$_index] ['spent_number'] = $spent_number;
					$receiStudentTemp [$_index] ['unit_price'] = $unit_price;

					$receiStudentTemp [$_index] ['enable_roll'] = $row ['enable_roll'];
					$receiStudentTemp [$_index] ['ss_number_month'] = $ss_number_month;
					if ($row ['service_id'] > 0) {
						$receiStudentTemp [$_index] ['ss_discount'] = $row ['ss_discount'];
						$receiStudentTemp [$_index] ['ss_discount_amount'] = $tongtiengiam; // Thành cập nhật tiền giảm
					} else {
						$receiStudentTemp [$_index] ['ss_discount'] = 0;
						$receiStudentTemp [$_index] ['ss_discount_amount'] = 0;
					}
					$receiStudentTemp [$_index] ['hoantra'] = 0;
					$receiStudentTemp [$_index] ['amount'] = $rs_amount;
					$receiStudentTemp [$_index] ['is_late'] = 0;
					$receiStudentTemp [$_index] ['receivable_at'] = $var_date;
					$receiStudentTemp [$_index] ['note'] = ($row ['rs_note'] != '') ? $row ['rs_note'] : $text_note;

					$receiStudentTemp [$_index] ['tk_no'] = $tk_no;
					$receiStudentTemp [$_index] ['tk_co'] = $tk_co;
					$receiStudentTemp [$_index] ['tk_mua'] = $tk_mua;
					$receiStudentTemp [$_index] ['doituongno'] = $this->getStudentCode();
					$receiStudentTemp [$_index] ['machietkhau'] = '';


					$total_fee_report = $total_fee_report + $rs_amount;

				} // End tần xuất
			} // End $row ['service_id']

			// $tong_thang_chon = $tong_thang_chon + $rs_amount;

			$_index ++;
		} // Ket thuc tháng được chọn

		// if(count($receiStudentTemp) > 0 ){
		// 	echo '<pre>'; print_r($receiStudentTemp);echo '</pre>';die;
		// }

		// echo 'Tong 6+7+8:'.$total_fee_report.'<br/>';

		// echo '8:'.$tong_thang_chon;

		// Lay thong tin ve lop tại thoi diem $intdate(tính đến mức ngày) cua hoc sinh
		// $class_info = $this->getClassByDate ( $receivable_at );

		// Lay theo so sánh tháng
		$class_info = $this->getClassByMonth ( $receivable_at );

		/*
		 * if ($class_info) { echo $class_info->getName();
		 * echo 'getPsWorkplaceId:'.$class_info->getPsWorkplaceId();
		 * } else echo 'Chua xac dinh duoc lop'.$receivable_at;
		 * die;
		 * echo $this->getId ().'<br/>'.$receivable_at.'<br/>'; echo $class_info->getName().'<br/>';
		 */

		// Lay cac khoan phai thu khac cua thang duoc chon co trong receivable_temp(chua luu trong receivable_student)
		$receivableTemp = Doctrine_Core::getTable ( 'ReceivableTemp' )->getByDateForBatchFee ( $this->getId (), $this->getPsCustomerId (), $class_info->getPsWorkplaceId (), $class_info->getMyclassId (), $receivable_at );

		foreach ( $receivableTemp as $i => $recei ) {

			$receiStudentTemp [$_index] ['title'] = $recei ['title'];

			$receiStudentTemp [$_index] ['receivable_student_id'] = null;
			$receiStudentTemp [$_index] ['student_id'] = $this->getId ();
			$receiStudentTemp [$_index] ['receivable_id'] = $recei ['receivable_id'];
			$receiStudentTemp [$_index] ['service_id'] = null;
			$receiStudentTemp [$_index] ['ss_discount'] = 0;
			$receiStudentTemp [$_index] ['ss_discount_amount'] = 0;
			$receiStudentTemp [$_index] ['by_number'] = 1;
			$receiStudentTemp [$_index] ['spent_number'] = 1;
			$receiStudentTemp [$_index] ['unit_price'] = $recei ['amount'];

			$receiStudentTemp [$_index] ['enable_roll'] = 1;
			$receiStudentTemp [$_index] ['hoantra'] = 0;

			$receiStudentTemp [$_index] ['amount'] = $recei ['amount'];
			$receiStudentTemp [$_index] ['is_late'] = 0;
			$receiStudentTemp [$_index] ['receivable_at'] = $var_date;

			// $receiStudentTemp [$_index] ['note'] = ($recei ['note'] != '') ? $recei ['note'] : 'Khoản phải thu khác';

			$receiStudentTemp [$_index] ['note'] = $recei ['note'];

			$total_fee_report = $total_fee_report + $recei ['amount'];

			$_index ++;
		}

		// $tong_phai_dong = Tong $receiStudentTemp [$_index] ['amount'] - $student_month_before ['BalanceAmount'];

		$total_fee_report = $total_fee_report - $student_month_before ['BalanceAmount'];

		$receipt_prev_date = PsDateTime::psTimetoDate ( $receiptPrevDate, "Y-m-d" );

		// Tính phí sử dụng thực tế của phiếu trước
		$tong_phi_thuc_te_thang_truoc = 0;

		// Dự kiến của tháng $receivable_at
		$tong_du_kien_cua_thang = 0;

		$current_month = PsDateTime::psTimetoDate ( $receivable_at, "Y-m-d" );

		foreach ( $receiStudentTemp as $obj ) {
			if ($obj ['receivable_at'] == $receipt_prev_date && ($current_month != $receipt_prev_date)) {
				$tong_phi_thuc_te_thang_truoc = $tong_phi_thuc_te_thang_truoc + $obj ['amount'];
				//echo $obj ['service_id'].'__'.$obj ['amount'].'<br>';
			} elseif ($obj ['receivable_at'] == $current_month) {
				$tong_du_kien_cua_thang = $tong_du_kien_cua_thang + $obj ['amount'];
				//if($this->getId() == 35 ){echo $obj ['title'].':'.$obj ['amount'].'<br>';}
			}
		}
		
		// $tong_phi_thuc_te_thang_truoc : Là số dương -- Đang không lấy được số buổi ăn thực tế
		// $balance_last_month_amount : Số âm là nợ khách hàng, số dương là khách hàng nợ

		// Dư thực tế tháng trước = Thực tế TT + dư nợ cuối tháng trước - đã thanh toán TT
		$BalanceLastMonthAmount = ($tong_phi_thuc_te_thang_truoc + $balance_last_month_amount) - $collectedAmount;

		//echo 'collectedAmount:'.$collectedAmount.', tong_phi_thuc_te_thang_truoc:'.$tong_phi_thuc_te_thang_truoc.', balance_last_month_amount:'.$balance_last_month_amount.'__'.$BalanceLastMonthAmount;die;

		$re_result = array (
			'giamTruTheoMucDo' => $giamTruTheoMucDo,
			'receiStudentTemp' => $receiStudentTemp,
			'balance_last_month_amount' => $balance_last_month_amount, // Dư từ phiếu thu trước nữa
			'tong_phi_thuc_te_thang_truoc' => $tong_phi_thuc_te_thang_truoc,
			'CollectedAmount' => $collectedAmount, // Thanh toan cua phieu thu gan nhat => Ko dung den
			'BalanceAmount' => $balanceAmount, // Du cua phieu thu gan nhat => Khong dung den
			'BalanceLastMonthAmount' => $BalanceLastMonthAmount, // Dư thực tế tháng trước
			'du_kien_thu_cua_thang_nay' => $tong_du_kien_cua_thang, // Tổng dự kiến của riêng tháng này
			'bao_phi_thang_nay' => ($tong_du_kien_cua_thang + $balanceAmount - $tongHoanTra  - $duTienAn) ,
			/*'bao_phi_thang_nay' => ($tong_du_kien_cua_thang - $tongHoanTra - $duTienAn) ,*/
			'tongHoanTra' => (0 - $tongHoanTra) ,
			'chietkhau_thangtruoc' => $chietkhau_thangtruoc ,
			'hoantra_thangtruoc' => $hoantra_thangtruoc ,
			'duTienAn' => $duTienAn
		);
		
		// if($this->getId() == 518){
			// echo '<pre>';
			// print_r($re_result);
			// echo '</pre>';
			// die;
		// }
		
		// echo '<pre>';
		// print_r($re_result);
		// echo '</pre>';
		
		
		/*
		 * if (myUser::isAdministrator()) {
		 * print_r($re_result);
		 * print_r($student_month_before);
		 * echo 'XXXXXXX';
		 * die;
		 * }
		 */

		return $re_result;
	}

	/**
	 * Lay du lieu cua mot thang bao gom: Da thanh toan + Chua thanh toan + Phat sinh tu diem danh + Khoan phai thu khac
	 *
	 * @version 2.0
	 * @param $intdate int
	 */
	public function findAllFeeServiceOfStudent($intdate) {

		return Doctrine::getTable ( 'Service' )->findAllFeeServiceOfStudent ( $this->getId (), $intdate );
	}

	public function getServicesStudentByDate($class_id, $date, $ps_customer_id) {

		return Doctrine::getTable ( 'Service' )->getServicesDiaryByStudent ( $this->getId (), $class_id, $date, $ps_customer_id );
	}

	/**
	 * Lấy danh sách các dịch vụ mà học sinh đang sử dụng theo năm học
	 */
	public function getServicesStudentUsingByYear($ps_school_year_id) {

		return Doctrine::getTable ( 'Service' )->getServicesStudentUsingByYear ( $this->getId (), $ps_school_year_id );
	}

	/**
	 * Lấy danh sách các dịch vụ mà học sinh đang sử dụng theo năm học
	 */
	public function getServicesStudentUsing($date_at) {

		return Doctrine::getTable ( 'Service' )->getServicesStudentUsing ( $this->getId (), $date_at );
	}

	/**
	 * Lấy danh sách các dịch vụ mà học sinh đang sử dụng theo năm học
	 */
	public function getServicesStudentNotUsing($date_at) {

		return Doctrine::getTable ( 'StudentService' )->getServicesStudentNotUsing ( $this->getId (), $date_at );
	}

	/**
	 * END: FEE NEW VESION CLOUD *
	 */

	// Lay danh sach dich vu hoc sinh dang dung
	public function getServicesOfStudent() {

		return Doctrine::getTable ( 'Service' )->getServicesByStudentId ( $this->getId () );
	}

	// Lay danh sach nguoi than
	public function getRelativesOfStudent() {

		return Doctrine::getTable ( 'RelativeStudent' )->findByStudentId ( $this->getId (), $this->getPsCustomerId () );
	}

	// Lay danh sach nguoi than dua don chinh (is_parent_main = Active); người bảo trợ chính
	public function getMainRelativesOfStudent() {

		return Doctrine::getTable ( 'RelativeStudent' )->findMainParentsByStudentId ( $this->getId (), $this->getPsCustomerId () );
	}

	/**
	 * check lop cua hoc sinh tai mot thoi diem *
	 */
	public function checkStudentClassByDate($date = null) {

		return Doctrine::getTable ( "Student" )->checkStudentClassByDate ( $this->getId (), $date );
	}

	/**
	 * Lay lop hoc cua hoc sinh tai mot thoi diem *
	 */
	public function getMyClassByStudent($date = null) {

		return Doctrine::getTable ( "StudentClass" )->getClassByStudent ( $this->getId (), $date );
	}

	/**
	 * Danh sach cac lop hoc ma hoc sinh da tung hoc *
	 */
	public function getAllClassOfStudent() {

		return Doctrine::getTable ( "StudentClass" )->getListClassByStudent ( $this->getId (), $this->getPsCustomerId () );
	}

	// Lay toan bo cac ngay di hoc cua mot hoc sinh trong thang
	public function getPsLogtimeByDate($date = null) {

		// return $studentClass->getClassByStudent($this->getId());
		return Doctrine::getTable ( "Student" )->getLogtimeByDate ( $this->getId (), $date );
	}

	public function getServicesDiaryByStudent($class_id = null, $date = null) {

		// return $studentClass->getClassByStudent($this->getId());
		return Doctrine::getTable ( "Service" )->getServicesDiaryByStudent ( $this->getId (), $class_id, $date, $this->getPsCustomerId () );
	}

	// Hàm lấy tất cả các khoản phí dịch vụ chưa hoàn thành + khoan phai thu khac + ve muon cua thang <= date
	public function findAllFeeServiceLastMonthOfStudent($date) {

		return Doctrine::getTable ( 'Service' )->findAllFeeServiceLastMonthOfStudent ( $this->getId (), $date );
	}

	// Lay thong tin lop, co so dao tao cua hoc sinh tai mot thoi diem
	public function getClassByDate($datetime) {

		return Doctrine::getTable ( 'StudentClass' )->getClassByDate ( $this->id, $datetime );
	}

	// Lay thong tin lop hoc của học sinh đang hoạt động
	public function getCurrentClassOfStudent() {

		return Doctrine::getTable ( 'StudentClass' )->getCurrentClassOfStudent ( $this->id );
	}

	/**
	 * Lay cac dich vu
	 */
	public function getServicesForStudent($date) {

		return Doctrine::getTable ( 'Service' )->getServicesForStudent ( $this->getId (), $date );
	}

	// Lay thong tin lop, co so dao tao cua hoc sinh theo tháng
	public function getClassByMonth($datetime) {

		return Doctrine::getTable ( 'StudentClass' )->getClassByMonth ( $this->id, $datetime );
	}

	// ---------------------------- END: NEW Vesion 1.0 ------------------------------------------------------------------>

	// --------------------------------------------------------------------------------
	public function getListMyClassForStudent() {

		$studentClass = new StudentClass ();
		return $studentClass->getListClassByStudent ( $this->getId () );
	}

	public function getRelativeOfStudent() {

		return Doctrine::getTable ( 'Relative' )->getRelativeOfStudent ( $this->getId () );
	}

	public function getRelativeStudent() {

		return Doctrine::getTable ( 'Relative' )->getRelativeByStudent ( $this->getId () );
	}

	public function getServicesStudent() {

		return Doctrine::getTable ( 'Service' )->getServicesByStudent ( $this->getId () );
	}

	public function getServicesByStudentId() {

		return Doctrine::getTable ( 'Service' )->getServicesByStudentId ( $this->getId () );
	}

	public function getLogtimeByDate($date) {

		return $this->getTable ()
			->getLogtimeByDate ( $this->getId (), $date );
	}

	public function getDiaryByDate($date) {

		return Doctrine::getTable ( 'Service' )->getDiaryByDate ( $this->getId (), $date );
	}

	public function getNumberTobeLate($date) {

		return Doctrine::getTable ( "Logtime" )->getNumberTobeLate ( $this->getId (), $date );
	}

	public function getReceivableStudentLateByDate($date) {

		return Doctrine::getTable ( "ReceivableStudent" )->getReceivableStudentLateByDate ( $this->getId (), $date );
	}

	public function getDaysBeforeDate($date) {

		return Doctrine::getTable ( 'Balance' )->getDaysBeforeDate ( $this->getId (), $date );
	}

	public function getInfoDaysBeforeDate($date) {

		return Doctrine::getTable ( 'Balance' )->getInfoDaysBeforeDate ( $this->getId (), $date );
	}

	public function getReceivableStudentTotalByDate($date) {

		return Doctrine::getTable ( "ReceivableStudent" )->getReceivableStudentTotalByDate ( $this->getId (), $date );
	}

	public function getCollectedStudentTotalByDate($date) {

		return Doctrine::getTable ( "CollectedStudent" )->getCollectedStudentTotalByDate ( $this->getId (), $date );
	}

	public function getStudentServiceDiaryTotal($date) {

		return Doctrine::getTable ( "Service" )->getSummaryUsingService ( $this->getId (), $date );
	}

	/**
	 * Lay cac khoan du dau ky theo hoc sinh
	 */
	public function getOpenBalanceByDate($date) {

		return Doctrine::getTable ( 'Balance' )->getOpenBalanceByDate ( $this->getId (), $date );
	}

	/**
	 * Lay thoi gian bat dau nho nhat *
	 */
	public function getStudentStartAtMin() {

		return Doctrine::getTable ( 'StudentClass' )->getStudentStartAtMin ( $this->getId () );
	}

	/**
	 * Lay so thang tinh tu ngay thanh toan gan nhat *
	 */
	public function getNumberMonth($date) {

		return Doctrine::getTable ( 'Balance' )->getNumberMonth ( $this->getId (), $date );
	}

	/**
	 * Kiem tra thoi diem nay co phai la dang tam dung hoac nghi hoc ko *
	 */
	public function checkWithdraw($date) {

		// return Doctrine :: getTable('StudentWithdraw')->checkWithdraw($this->getId(), $date);
		return Doctrine::getTable ( 'StudentClass' )->checkWithdraw ( $this->getId (), $date );
	}

	/**
	 * Lay dich vu da dang ky va khong phu thuoc vao diem danh *
	 */
	public function getServiceByEnableRollOfStudent($date) {

		return Doctrine::getTable ( "Service" )->findByEnableRollOfStudent ( $this->getId (), $date );
	}

	public function findServicesRelatedStudent($date) {

		return Doctrine::getTable ( 'Service' )->findServicesRelatedStudent ( $this->getId (), $date );
	}

	/**
	 * CAC HAM SU DUNG TRONG BAN MOI: Bat dau tu ngay: 20/10/2011 *
	 */

	// Ham lay quang thoi gian tam dung, nghi hoc
	public function getTimeStudentWithdraw() {

		return Doctrine::getTable ( 'StudentClass' )->findTimeStudentWithdraw ( $this->id );
	}
}