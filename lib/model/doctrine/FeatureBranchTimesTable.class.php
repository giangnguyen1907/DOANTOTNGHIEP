<?php

/**
 * FeatureBranchTimesTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class FeatureBranchTimesTable extends Doctrine_Table {

	/**
	 * Returns an instance of this class.
	 *
	 * @return object FeatureBranchTimesTable
	 */
	public static function getInstance() {

		return Doctrine_Core::getTable ( 'FeatureBranchTimes' );
	}

	/**
	 * FUNCTION: doSelectQuery(Doctrine_Query $query)
	 *
	 * @param
	 *        	Doctrine SQL
	 * @return string SQL
	 *        
	 */
	public function doSelectQuery(Doctrine_Query $query) {

		$a = $query->getRootAlias ();

		$query->select ( $a . '.id AS id, ' . $a . '.start_at, ' . $a . '.end_at AS end_at, TIME_FORMAT(' . $a . '.start_time, "%H:%i") AS start_time,TIME_FORMAT(' . $a . '.end_time, "%H:%i") AS end_time, ' . $a . '.updated_at AS updated_at,' . $a . '.note,' . $a . '.note_class_name,' . 'CONCAT(u.first_name, " ", u.last_name) AS updated_by, wp.id AS wp_id, wp.title AS wp_title' );
		$query->addSelect ( 'fb.name AS fb_title' );
		$query->innerJoin ( $a . '.FeatureBranch fb WITH fb.is_activated =?', PreSchool::ACTIVE );
		$query->innerJoin ( 'fb.Feature f' );
		$query->innerJoin ( 'f.PsCustomer cus' );

		$query->leftJoin ( 'fb.PsWorkPlaces wp' );

		$query->leftJoin ( $a . '.UserUpdated u' );

		if (! myUser::credentialPsCustomers ( 'PS_SYSTEM_FEATURE_BRANCH_FILTER_SCHOOL' ) && myUser::getPscustomerID () > 0) {
			$query->addWhere ( 'cus.id = ?', myUser::getPscustomerID () );
		}

		$query->orderBy ( $a . '.updated_at DESC' );

		return $query;
	}

	public function getFeatureBranchTimesByField($feature_branch_id,$getField = null) {
		
		$query = $this->createQuery () ->select ( $getField != '' ? $getField : '*' );
		
		$query->addWhere ( 'id = ?', $feature_branch_id );
		
		return $query->fetchOne ();
	}
	
	/**
	 *
	 * @method getListByFeatureBranchId($feature_branch_id)
	 *         Ham lay danh sach thoi diem dien ra cua mot hoat dong
	 *        
	 * @param int $feature_branch_id
	 * @return $list
	 */
	public function getListByFeatureBranchId($feature_branch_id) {

		$q = $this->createQuery ( 'a' )
			->select ( 'a.id, a.start_at, a.end_at, TIME_FORMAT(a.start_time, "%H:%i") AS start_time, TIME_FORMAT(a.end_time, "%H:%i") AS end_time, a.ps_class_room_id, a.note,clr.title AS class_room_name' )
			->leftJoin ( 'a.PsClassRooms clr' )
			->where ( 'a.ps_feature_branch_id = ? ', $feature_branch_id )
			->orderBy ( 'a.start_at DESC' );

		return $q->execute ();
	}

	/**
	 * Lay gio bat dau va ket thuc, ten hoat dong
	 *
	 * @param int $feature_branch_id
	 * @param timestamp $track_at
	 * @return obj
	 */
	public function getFeatureBranchInformation($feature_branch_id, $tracked_at) {

		$tracked_at = date ( 'Ymd', $tracked_at );

		$query = $this->createQuery ( 'a' );

		$query->select ( 'a.start_time AS start_time, a.end_time AS end_time, fb.name AS feature_name' );

		$query->innerJoin ( 'a.FeatureBranch fb WITH fb.is_activated =?', PreSchool::ACTIVE );

		$query->addWhere ( 'a.ps_feature_branch_id = ?', $feature_branch_id );

		$query->addWhere ( 'DATE_FORMAT(a.start_at, "%Y%m%d") <= ? AND DATE_FORMAT(a.end_at, "%Y%m%d") >= ?', array (
				$tracked_at,
				$tracked_at ) );

		return $query->execute ();
	}

	/**
	 * sql lay danh sach lich hoat dong
	 *
	 * @param
	 *
	 * @return string
	 *
	 *
	 */
	// public function setSQLByParams($params)
	// {
	// $query = $this->createQuery('a')->select(
	// 'a.id, '.
	// 'a.ps_feature_branch_id AS ps_feature_branch_id, '.
	// 'a.ps_class_room_id AS ps_class_room_id, '.
	// 'a.start_at AS start_at, '.
	// 'a.end_at AS end_at, '.
	// 'a.start_time AS start_time, '.
	// 'a.end_time AS end_time, '.
	// 'a.note AS note, '.
	// 'a.note_class_name AS note_class_name'.
	// 'fb.id, ' .
	// 'fb.name AS fb_name,' .
	// 'fb.ps_workplace_id AS fb_ps_workplace_id,' .
	// 'fb.ps_obj_group_id AS fb_ps_obj_group_id,' .
	// 'fb.school_year_id AS fb_school_year_id,' .
	// 'fb.note AS fb_note,'
	// );

	// $query->innerJoin('a.FeatureBranch fb');
	// $query->innerJoin('fb.Feature f');

	// if ($params['school_year_id'] > 0) {
	// $query->addWhere('fb.school_year_id =?', $params['school_year_id']);
	// }

	// if ($params['ps_customer_id'] > 0) {

	// $query->addWhere('f.ps_customer_id = ?', $params['ps_customer_id']);
	// }

	// if ($params['ps_workplace_id'] > 0) {
	// $query->addWhere('fb.ps_workplace_id = 0 OR fb.ps_workplace_id IS NULL OR fb.ps_workplace_id = ?', $params['ps_workplace_id']);
	// }

	// if ($params['ps_class_id'] > 0) {

	// $query->leftJoin('a.PsFeatureBranchTimeMyClass fbtmc');
	// $query->addSelect('ftbms.id AS ftbmc_id, ftbms.ps_myclass_id');
	// $query->andWhere('length(a.note_class_name) = 0 OR length(a.note_class_name) IS NULL OR fbtmc.ps_myclass_id =? ', $params['ps_class_id']);
	// }

	// if ($params['date_at'] > 0) {
	// $date_at = date('Ymd', strtotime($params['date_at']));

	// $query->andWhere('DATE_FORMAT(a.start_at, "%Y%m%d") <= ? AND DATE_FORMAT(a.end_at, "%Y%m%d") >= ? ', array(
	// $date_at,
	// $date_at
	// ));
	// }
	// // echo $query;die;
	// return $query;
	// }

	/**
	 * Lay danh sach lich hoat dong theo tuan
	 *
	 * @param
	 *        	date_from, date_to
	 * @return $Obj
	 */
	public function getListFBTWeek($date_from, $date_to, $ps_customer_id, $ps_workplace_id = null, $ps_class_id = null, $feature_branch_id = null) {

		$query = $this->createQuery ( 'fbt' )
			->select ( 'fb.id AS fb_id, ' . 'fb.name AS fb_name,' . 'fb.ps_workplace_id AS fb_ps_workplace_id,' . 'fb.ps_obj_group_id AS fb_ps_obj_group_id,' . 'fb.school_year_id AS fb_school_year_id,' . 'fb.note AS fb_note,' . 'fbt.id,' . 'fbt.ps_class_room_id AS ps_class_room_id,' . 'fbt.start_at AS start_at,' . 'fbt.end_at AS end_at,' . 'fbt.start_time AS start_time,' . 'fbt.end_time AS end_time,' . 'fbt.is_saturday AS is_saturday,' . 'fbt.is_sunday AS is_sunday,' . 'fbt.note AS note,' . 'fbt.note_class_name AS note_class_name,'.'fbtmc.note as fbtc_note' );
			
		$query->innerJoin ( 'fbt.FeatureBranch fb WITH fb.is_activated =?', PreSchool::ACTIVE );
		$query->innerJoin ( 'fb.Feature f' );
		$query->leftJoin ( 'fbt.PsFeatureBranchTimeMyClass fbtmc' );
		
		$query->where ( 'DATE_FORMAT(fbt.start_at,"%Y%m%d") <= ? AND  DATE_FORMAT(fbt.end_at,"%Y%m%d") >= ? AND f.ps_customer_id = ?', array (
				date ( 'Ymd', strtotime ( $date_to ) ),
				date ( 'Ymd', strtotime ( $date_from ) ),
				$ps_customer_id ) );

		if ($ps_workplace_id > 0) {
			$query->addWhere ( 'fb.ps_workplace_id = 0 OR fb.ps_workplace_id IS NULL OR fb.ps_workplace_id = ?', $ps_workplace_id );
		}

		if ($ps_class_id > 0) {
			$query->andWhere ( 'length(fbt.note_class_name) = 0 OR length(fbt.note_class_name) IS NULL OR fbtmc.ps_myclass_id =? ', $ps_class_id );
		}
		if ($feature_branch_id > 0) {
			$query->andWhere ( 'fb.id=?', $feature_branch_id );
		}

		$query->orderBy ( 'fbt.start_time ASC' );

		return $query->execute ();
	}
	
	/**
	 * Lay khung gio hoat dong cua tuan
	 *
	 * @param
	 *        	date_from, date_to
	 * @return $Obj
	 */
	public function getListFBTHourWorkWeek($date_from, $date_to, $ps_customer_id, $ps_workplace_id = null, $ps_class_id = null, $feature_branch_id = null) {
		
		$query = $this->createQuery ( 'fbt' )
		->select ( 'fb.id AS fb_id, ' . 'fb.name AS fb_name,' . 'fb.ps_workplace_id AS fb_ps_workplace_id,' . 'fb.ps_obj_group_id AS fb_ps_obj_group_id,' . 'fb.school_year_id AS fb_school_year_id,' . 'fb.note AS fb_note,' . 'fbt.id,' . 'fbt.ps_class_room_id AS ps_class_room_id,' . 'fbt.start_at AS start_at,' . 'fbt.end_at AS end_at,' . 'fbt.start_time AS start_time,' . 'fbt.end_time AS end_time,' . 'fbt.is_saturday AS is_saturday,' . 'fbt.is_sunday AS is_sunday,' . 'fbt.note AS note,' . 'fbt.note_class_name AS note_class_name,'.'fbtmc.note as fbtc_note' );
		
		$query->innerJoin ( 'fbt.FeatureBranch fb WITH fb.is_activated =?', PreSchool::ACTIVE );
		$query->innerJoin ( 'fb.Feature f' );
		$query->leftJoin ( 'fbt.PsFeatureBranchTimeMyClass fbtmc' );
		
		$query->where ( 'DATE_FORMAT(fbt.start_at,"%Y%m%d") <= ? AND  DATE_FORMAT(fbt.end_at,"%Y%m%d") >= ? AND f.ps_customer_id = ?', array (
				date ( 'Ymd', strtotime ( $date_to ) ),
				date ( 'Ymd', strtotime ( $date_from ) ),
				$ps_customer_id ) );
		
		if ($ps_workplace_id > 0) {
			$query->addWhere ( 'fb.ps_workplace_id = 0 OR fb.ps_workplace_id IS NULL OR fb.ps_workplace_id = ?', $ps_workplace_id );
		}
		
		if ($ps_class_id > 0) {
			$query->andWhere ( 'length(fbt.note_class_name) = 0 OR length(fbt.note_class_name) IS NULL OR fbtmc.ps_myclass_id =? ', $ps_class_id );
		}
		if ($feature_branch_id > 0) {
			$query->andWhere ( 'fb.id=?', $feature_branch_id );
		}
		
		$query->addGroupBy('fbt.start_time','fbt.end_time');
		
		$query->orderBy ( 'fbt.start_time ASC' );
		
		return $query->execute ();
	}
}